00:00:00 --- log: started opencyc/03.04.22
02:28:56 --- join: yepster (~yepster@a80-127-225-52.dial.xs4all.nl) joined #opencyc
04:28:55 --- join: zul[other] (Alwe@AClermont-Ferrand-101-1-1-248.abo.wanadoo.fr) joined #opencyc
04:28:56 --- quit: yepster (Read error: 104 (Connection reset by peer))
04:29:11 --- join: yepster (~yepster@a80-127-225-52.dial.xs4all.nl) joined #opencyc
04:37:21 <zul[other]> excuse me. Do u know a way to install opencyc on a win ME :)
04:37:43 <yepster> yes
04:38:01 <yepster> hmm
04:38:14 <yepster> maybe
04:38:52 <yepster> I tested the windows version only on win2k
04:39:07 <yepster> don't know whether it'll work on ME
04:41:52 <zul[other]> hum sourceforge tell that it runs only on NT, 2k and XP
04:43:57 <yepster> that'll probably be right..
04:44:03 <zul[other]> not cool :(
04:44:26 <zul[other]> i willtry on my debian so :)
04:44:52 <yepster> i run it on debian too ;-)
04:45:16 <zul[other]> k
07:04:31 <zul[other]> can i ask u what it must happen when i run the server and try go on  http://localhost:3603/cgi-bin/cyccgi/cg?cb-start
07:04:45 <yepster> try 3602
07:04:53 <yepster> it should display the kb browser interface
07:05:46 <zul[other]> the server say it listen on 3603 so i try on 3603
07:05:57 <zul[other]> on 3602 i can cannot the server
07:06:16 <zul[other]> and on 3603 i connect but i have a white sheed
07:06:18 <zul[other]> sheet
07:06:28 <yepster> and http://127.0.0.1:3602/cgi-bin/cyccgi/cg?cb-start
07:06:30 <yepster> ?
07:06:55 <zul[other]> same thing
07:06:59 <yepster> hmm
07:07:20 <zul[other]> maybe it really doesnt  run on ME :)
07:07:33 <yepster> do you see something that looks like a cyc prompt
07:07:40 <yepster> in the 'dos box' ?
07:08:23 <yepster> like CYC(1) :
07:08:23 <zul[other]> hum don't understand
07:08:32 <zul[other]> for moment i just run the server
07:08:43 <yepster> with run-cyc.bat right
07:09:03 <zul[other]> stupid me not :)
07:09:29 <zul[other]> k i have an error :)
07:10:25 <yepster> can you cut and past it?
07:14:08 <zul[other]> hum i ll give u the error just a moment :)
07:16:35 <zul[other]> stupid dos
07:17:56 <yepster> btw, what happened to the install on debian?
07:18:47 <zul[other]> i trying the install on Me for moment i try debian after
07:23:01 <zul[other]> c:\ .....\opencyc\scripts\win\pushd ..\..\run
07:23:12 <zul[other]> command or file unknow
07:23:33 <zul[other]> c:\ .....\opencyc\scripts\win\latest.exe -w 
07:23:35 <zul[other]> command or file unknow
07:23:43 <zul[other]> c:\ .....\opencyc\scripts\win\popd
07:23:46 <zul[other]> command or file unknow
07:24:33 <yepster> i didn't know nt/w2k etc had popd and pushd
07:25:05 <yepster> but apparently me doesn't
07:25:17 <zul[other]> yes 
07:25:32 <yepster> actually i never start cyc using a script/batch file, but manually
07:25:35 <yepster> it's something like
07:25:42 <yepster> (cd into right directory)
07:25:52 <yepster> bin/latest.bin -w world/latest.load
07:26:10 <yepster> so the dos variant would be something like
07:26:20 <zul[other]> i wiil tru
07:26:23 <yepster> bin\latest.exe -w world\la etc.et.c
07:28:17 <zul[other]> what happen if i run it without args :(
07:29:50 <yepster> the world file spec cannot be omitted
07:30:28 <zul[other]> yes i have an error
07:30:43 <zul[other]> i have also an error when i give it args
07:30:58 <zul[other]> OS-error :)
07:31:16 <zul[other]> i think it really can't run :)
07:31:26 <yepster> time for debian
07:31:28 <zul[other]> it couldn't map the file
07:31:44 <yepster> hmm that sounds familiar
07:31:54 <yepster> very vaguely familiar
07:32:18 <zul[other]> i ll go debian :)
07:32:24 <zul[other]> i come back
07:32:44 --- quit: zul[other] ()
07:32:45 <yepster> that also sounds vaguly familiar..
07:57:20 --- join: zul[other] (zul@AClermont-Ferrand-101-1-1-196.abo.wanadoo.fr) joined #opencyc
07:57:35 <zul[other]> hi
08:09:32 <yepster> and does it work?
08:11:52 <zul[other]> hum i download for moment
08:13:25 --- join: kinoc (~kino@crtntx1-ar2-094-170.crtntx1.dsl-verizon.net) joined #opencyc
08:13:34 <yepster> hey kinoc!
08:13:38 <kinoc> hi
08:13:48 <kinoc> did you get my email
08:14:02 <yepster> not (yet) (checking now)
08:14:32 <yepster> hmm i though i had a forward
08:14:40 <yepster> sent to users at sourceforge
08:14:41 <yepster> ?
08:15:17 <kinoc> no the address on your web page
08:15:47 <yepster> ah (old university account with 100+ spams a day ;-)
08:15:56 <kinoc> oops
08:16:40 * yepster looking it up right now
08:18:39 <kinoc> still trying to work with framenet
08:19:21 <kinoc> thinking about how to verify a hypothesized semantic assertion
08:19:54 <yepster> need access to cyc for that, i guess
08:20:17 <yepster> if result of fi-hypothesize = NIL -> not making sense
08:26:34 <yepster> hehe "experimental pre-alpha code"
08:27:14 <zul[other]> does it take long time to initialize ?
08:27:32 <yepster> a few seconds
08:27:46 <zul[other]> hum :)
08:28:33 <zul[other]> Cycl Initialized and nothing other ...
08:29:40 <yepster> did you type the secret passphrase?
08:30:04 <kinoc> Real Life came by
08:30:18 <zul[other]> where secret passphrase ??
08:30:47 <yepster> sorry, stupid joke
08:31:06 <zul[other]> oh :)
08:32:25 <kinoc> hmmm, I could see that (the fi-hypothesize thingy)
08:32:56 <kinoc> or see if it is legal to make the hypothesis
08:33:25 <kinoc> (i.e. dog makes breakfast outside of counterfactual context...)
08:33:27 <yepster> in my 'story understander' it's the first step: hypothesize the set of action sentences (in cycl)
08:33:34 <yepster> if nil it stops
08:34:56 <yepster> WSADATA, is that winsock stuff?
08:35:11 <kinoc> yeah
08:35:19 <yepster> that figures
08:35:39 <kinoc> but should be easy to weed out :)
08:36:08 <kinoc> should make it dual use
08:36:19 <yepster> or just adding some ifdefs
08:36:24 <kinoc> yeah
08:36:50 <kinoc> I think its all associated with parser.c
08:37:06 <kinoc> maybe one other file
08:37:16 <kinoc> that runs the sock_printf
08:38:12 <kinoc> on the hypothesis method I was looking at using framenet data
08:39:02 <kinoc> to generate the ways a slot filler role could be expressed lexically and then just go ask google how many instances it had seen in the wild
08:39:08 <yepster> is there an example frame or small set of frames you want to experiment with?
08:39:49 <kinoc> I think there is some frame rules in data/LUZRX.txt
08:40:00 <yepster> slot fillers: i just defined another script. the slot fillers are i guess the most important things
08:40:02 <yepster> of a script.
08:40:29 <yepster> i am still thinking a bit what the best way is to deal with them.
08:40:39 <kinoc> if any of the files are giving too much noise you can just rename them
08:40:42 <yepster> hypothesize the unspecified ones by a program,
08:40:48 <yepster> or relationallexistsfn
08:41:03 <yepster> or a skolem function
08:41:22 <yepster> or something like (RoleFillerFn Story role)
08:41:57 <yepster> it should be easy to use, preferably also in cycl
08:42:11 <kinoc> one issue is chaining all these parses together
08:42:23 <yepster> so in a cycl expression there would be a one on one equivalent to "the customer'
08:42:26 <kinoc> so you get a coherent chain
08:42:46 <yepster> like "the customer eats food"
08:43:11 <yepster> (and (isa ?EVENT EatingFood)(performedBy ?EVENT (RoleFillerFn ?EVENT customer)))
08:46:09 <kinoc> <cyc-hypolinks>
08:46:09 <kinoc>  (#$ThereExists ?EVENT3 (is-verb ?EVENT3 eats-v)
08:46:09 <kinoc>  (#$ThereExists ?ITEM2 (is-node ?ITEM2 Customer)
08:46:09 <kinoc>  (#$ThereExists ?ITEM4 (is-node ?ITEM4 food-n)
08:46:09 <kinoc>  (and  (doneBy ?EVENT3 ?ITEM2)
08:46:10 <kinoc>  (singular ?ITEM2)
08:46:12 <kinoc>  (performedBy ?EVENT3 ?ITEM2)
08:46:14 <kinoc>  (isa ?EVENT3 CD-Ingest)
08:46:16 <kinoc>  (inputsDestroyed ?EVENT3 ?ITEM4)
08:46:18 <kinoc>  (isa ?EVENT3 EatingEvent)
08:46:20 <kinoc>  (objectActedOn ?EVENT3 ?ITEM4)
08:46:22 <kinoc>  (singular ?ITEM4)
08:46:24 <kinoc>  (isa ?ITEM4 FoodOrDrink)
08:46:26 <kinoc>  (cyc-word ?ITEM4 Food-TheWord)
08:46:28 <kinoc>  )  ) ) ) 
08:46:30 <kinoc> </cyc-hypolinks>
08:46:40 <yepster> skolem function
08:46:54 <yepster> (item2)
08:47:39 <kinoc> (namestring ?ITEM2 "customer") ....?
08:47:45 <yepster> the ke file that accompanies rosetta, does it contain every #$is-node kind of thing?
08:48:06 <kinoc> no, no ke yet.
08:48:10 <yepster> I think it's perfect the way it is now
08:49:10 <kinoc> I could work on the ke file next
08:50:06 <kinoc> do you think keeping the "is-node" or use "namestring"
08:50:24 <yepster> not namesting
08:51:04 <yepster> what would be very cool if the parser could somehow recognize "the customer" as a role,
08:51:29 <yepster> (once the script implementation of roles is stable)
08:51:46 <yepster> or, maybe, as an instance of PersonTypeBy<something>
08:52:16 <yepster> or AgentTypeByRole (thinking aloud now)
08:52:40 <yepster> again the parser would need to access cyc to check certain terms
08:52:58 <kinoc> here is the "the customer ordered food"
08:53:10 <kinoc> <cyc-hypolinks>
08:53:10 <kinoc>  (#$ThereExists ?EVENT3 (is-verb ?EVENT3 ordered-v)
08:53:10 <kinoc>  (#$ThereExists ?ITEM2 (is-node ?ITEM2 Customer)
08:53:10 <kinoc>  (#$ThereExists ?ITEM4 (is-node ?ITEM4 food-n)
08:53:10 <kinoc>  (and  (doneBy ?EVENT3 ?ITEM2)
08:53:11 <kinoc>  (singular ?ITEM2)
08:53:13 <kinoc>  (seller ?EVENT3 ?ITEM2)
08:53:15 <kinoc>  (past ?EVENT3)
08:53:17 <kinoc>  (isa ?EVENT3 CD-ATrans)
08:53:19 <kinoc>  (fn-domain ?EVENT3 communication)
08:53:21 <kinoc>  (fn-frame ?EVENT3 request)
08:53:23 <kinoc>  (fn-frame ?EVENT3 bail_setting)
08:53:25 <kinoc>  (isa ?EVENT3 Ordering-CommunicationAct)
08:53:27 <kinoc>  (cyc-word ?EVENT3 Order-TheWord)
08:53:29 <kinoc>  (isa ?EVENT3 CD-MTrans)
08:53:31 <kinoc>  (isa ?EVENT3 Buying)
08:53:33 <kinoc>  (objectPaidFor ?EVENT3 ?ITEM4)
08:53:35 <kinoc>  (objectActedOn ?EVENT3 ?ITEM4)
08:53:36 <yepster> shouldn't seller be buyer?
08:53:37 <kinoc>  (singular ?ITEM4)
08:53:39 <kinoc>  (isa ?ITEM4 FoodOrDrink)
08:53:41 <kinoc>  (cyc-word ?ITEM4 Food-TheWord)
08:53:43 <kinoc>  )  ) ) ) 
08:53:45 <kinoc> </cyc-hypolinks>
08:53:47 <kinoc> annomalies (seller...) (fn-frame bail_setting)
08:53:52 <kinoc> yeah
08:54:16 <kinoc> have to look at the cyc verb definitions
08:54:56 <kinoc> I was thinking about chainging the (fn-xxx) to (fn-possible-xxx )
08:55:25 <yepster> why?
08:56:15 <kinoc> well the final determination could be on the cyc side. The parser would be saying that a frame 'might' be relevant
08:56:25 <kinoc> given the evidence of the item indicated
08:56:27 --- part: zul[other] left #opencyc
08:56:53 <kinoc> the evidence may be strong, but not certain
08:57:10 <yepster> :-)
08:57:36 <yepster> I think that touches the discussion on the forum about the defintion of common sense
08:57:38 <kinoc> I dont want to kludge a logic engine in the paser when I got cyc
08:58:01 <yepster> have you read the SharedNote about cyc nl stuff?
08:58:11 <yepster> something about implementaion constants
08:58:19 <kinoc> maybe
08:58:43 <yepster> saying something like: it's ok just to add stuff to the cyc kb that just only makes sense
08:59:10 <yepster> to your program (or is even false, or represents a state in an algorithm, whatever), as long as it's
08:59:25 <yepster> tagged with isa ImplementationConstant (or a spec of implementationconstant)
09:00:27 <yepster> so partitioning the KB into two sections: common sense stuff and implementation constant stuff
09:00:49 <yepster> I guess i should tag all the script constants like #$requiredRolesForScript like this too
09:02:10 --- join: ScriptBot (~ScriptBot@a80-127-225-52.dial.xs4all.nl) joined #opencyc
09:02:25 <yepster> ask (comment ImplementationConstant ?T)
09:02:34 <ScriptBot> (((?T . "The collection of constants that are included in a Cyc Knowledge Base only in order to support or enable one or more Cyc-based applications or capabilities. These constants are not use
09:02:35 <ScriptBot> to represent common sense knowledge; nor are they used to represent knowledge shared by a significant subset of humans, such as specialized domain knowledge (e.g. the knowledge of experts i
09:02:37 <ScriptBot> some field of study, such as nuclear physics).")))
09:14:12 <kinoc> so what is customer comming fresh out of the parser?
09:22:33 <yepster> i should define rolefillerfn
09:22:57 <yepster> so the Cycl term could become (#$RoleFillerFn ?EVENT #$customer-Role)
09:23:20 <yepster> when a word matches roles defined for the script that matches the event
09:23:53 <yepster> but i'm also curious to cycorps script implementation
09:24:14 <yepster> actually, currently you have defined
09:24:37 <yepster> thereExists for the customer
09:25:37 <yepster> which will be come a 0-ary skolum function (result = the skolem term denoting the customer, the same term as would be denoted by rolefillerfn)
09:25:55 <yepster> (i'm wondering if i'm useing the word 'denoting' here correct, always mix that up)
09:26:07 <yepster> and that is ok
09:26:14 <yepster> (the thereExists)
09:27:16 <yepster> i must have XP implementation ready by friday
09:27:23 <yepster> next meeting with supervisors..
09:29:56 <yepster> Maybe when the thereExists is stripped (so the formula becomes open) and the formula
09:30:17 <yepster> is hypothesized, cyc will be able to figure out the kind of thing the ?ITEMX (customer)
09:30:41 <yepster> is, because of the argConstraints defined on the predicates listed, like seller, performedBy etc
09:31:58 <yepster> again, access to cyc is needed :-)
09:34:45 <kinoc> right, this is the light implementation
09:35:04 <kinoc> the cyc interaction is compiled in the post-processor rules
09:35:59 <kinoc> so the todo list is (besides save the future)
09:36:08 <kinoc> finish the cycocx
09:36:22 <kinoc> finish and polish the parser
09:36:45 <kinoc> if a c implementation does not exist then build on using the cycocx knowledge
09:36:54 <kinoc> merge the c interface into the parser
09:37:20 <kinoc> pay investigator to find dmiles
09:37:45 <kinoc> merge in script system with self-aware system
09:38:01 <kinoc> add GUI and office system access
09:38:46 <kinoc> get bought out by M$/Cycorp/DoD etc. Retire to ranch, invite everyone over
09:39:08 <kinoc> think that should be enough for this year :)
09:40:09 <yepster> yeah, where's doug?
09:40:32 <kinoc> on walkabout as best I can tell
09:41:13 <kinoc> last peep was two weeks ago
09:55:19 <kinoc> I will try to ping him again
10:06:35 * yepster gotta go
10:06:47 --- quit: yepster ()
10:07:49 --- quit: ScriptBot (Remote closed the connection)
11:15:57 --- quit: Graham (leguin.freenode.net irc.freenode.net)
11:15:57 --- quit: deltab (leguin.freenode.net irc.freenode.net)
11:16:13 --- join: Graham (~Demi@207.207.8.145) joined #opencyc
11:16:13 --- join: deltab (~deltab@espians.com) joined #opencyc
11:21:58 --- quit: Graham (leguin.freenode.net irc.freenode.net)
11:21:59 --- quit: deltab (leguin.freenode.net irc.freenode.net)
11:22:31 --- join: deltab (~deltab@espians.com) joined #opencyc
11:22:31 --- join: Graham (~Demi@207.207.8.145) joined #opencyc
11:23:02 --- quit: deltab (leguin.freenode.net irc.freenode.net)
11:23:22 --- join: deltab (~deltab@espians.com) joined #opencyc
11:24:31 --- quit: kinoc (Read error: 60 (Operation timed out))
12:23:34 --- join: kinoc (~kino@crtntx1-ar2-094-170.crtntx1.dsl-verizon.net) joined #opencyc
12:39:05 --- join: Aglanor (~aglanor@80-25-212-113.uc.nombres.ttd.es) joined #opencyc
12:47:37 --- quit: kinoc (Read error: 60 (Operation timed out))
15:00:11 --- quit: Aglanor ("Client exiting")
15:30:58 --- join: Aglanor (~aglanor@80-25-212-113.uc.nombres.ttd.es) joined #opencyc
17:04:44 --- quit: Aglanor (Read error: 110 (Connection timed out))
18:34:26 --- join: ZivZ (ZivZ@6532215hfc252.tampabay.rr.com) joined #opencyc
23:59:59 --- log: ended opencyc/03.04.22
