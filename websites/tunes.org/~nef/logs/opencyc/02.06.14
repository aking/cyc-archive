00:00:00 --- log: started opencyc/02.06.14
00:00:01 --- log: started opencyc/02.06.14
00:00:01 <Edison> Tough project
00:00:19 <meds> very very different
00:00:27 <Edison> I dont think a cyc can come to a real diagnostis
00:01:17 <meds> so cyc learns only by people actually making the formulas?
00:01:17 <Edison> It can understand the conclusion of sentences or texts.
00:01:18 <Edison> It knows about relations between words and such
00:01:18 <meds> does it learn form then?
00:01:19 <meds> from them even
00:01:22 <Edison> But it _can not_ think.
00:01:44 <meds> if you were to let it read 10 histories
00:01:47 <meds> very simplified
00:01:56 <meds> where the case is really pain a = disease b
00:02:04 <meds> and you ask it I have pain a
00:02:07 <meds> what disease do i have
00:02:11 <meds> would it tell you?
00:02:22 <meds> or do you have to program it to recognize pain a = disease b
00:02:27 <Edison> It can tell you to take a "umbrella" when you say "it rains outside"
00:02:40 <Edison> because it knows the relation umbrella -> rain
00:03:00 <meds> i think i need to rephrase my question
00:03:13 <Edison> no. your question is ok.
00:03:18 <Edison> it can do this
00:03:27 <Edison> (i think)
00:03:30 <meds> I want to know how does cyc learn
00:04:09 <Edison> well. As sayed before: i'm not involved @ openCyc, so you have to read some docs or wait for someone else. 
00:04:10 <Edison> sorry
00:04:19 <meds> no problem
00:04:26 <meds> thanks for trying to answer :)
00:04:38 <Edison> np
00:04:42 <meds> I think in order for it to do a good job
00:04:49 <meds> It would need to realize relative relations
00:04:54 <meds> not just solid ones
00:05:19 <meds> like a certain disease involves caughing only 39% of the time
00:05:38 <meds> and to have it be able to develope those relations
00:05:41 <meds> but reading cases
00:06:07 <meds> by reading cases
00:06:12 <meds> i must be tired
00:06:14 <meds> hehe
00:06:17 <Edison> :)
00:06:30 <Edison> i suggest you to write a mail to a cyc member or to the cyc mailinglist.
00:06:42 <meds> who would be a good person to contact?
00:07:13 <Edison> hmmm... Stephen Reed maybe.
00:07:16 <meds> i haven't the first clue how to go about it
00:07:29 <Edison> reed@cyc.com
00:07:40 <meds> is read involved in open cyc?
00:07:40 <meds> or just cyc?
00:07:46 <Edison> Both
00:07:49 <meds> cool
00:07:53 <meds> i'll write a letter right now
00:08:06 <meds> thank you 
00:08:10 <Edison> He doesnt know my nickname.
00:08:19 <meds> does he know you?
00:08:27 <Edison> So if you refer to me, please use my realname: Thomas Weber
00:08:35 <Edison> we didnt have much contact yet.
00:08:40 <meds> nice to meat you thomas
00:08:44 <meds> my name is Ario
00:08:53 <Edison> hey Ario. Nice to meat you too
00:09:15 <meds> lol
00:09:23 <meds> ok now i know i'm tired
00:09:28 <Edison> rofl
00:09:29 <meds> sorry
00:09:45 <meds> either that or very excited
00:09:51 <Edison> hehe
00:09:57 * Edison needs some more coffee
00:10:01 <Edison> its 9 AM here
00:10:37 <meds> its 3:10 am here
00:10:42 <meds> where are you?
00:10:46 <Edison> Germany
00:11:25 <meds> aha
00:11:26 <meds> nice
00:11:36 <meds> are you german?
00:11:45 <Edison> ja
00:12:29 <Edison> Just read my worse english and you will believe me :)
00:12:59 <meds> I was actually asking because your english sounds perfect.
00:13:08 <Edison> errm.. 
00:13:45 <Edison> I chat a lot. But i use a very, VERY small amount of phrases/verbs.
00:14:10 <Edison> Anyway, most english folks do the same :)
00:14:36 <meds> it sounds like germans don't do that :)
00:14:41 <meds> is that right?
00:14:50 <Edison> hehe... it depends. 
00:15:36 <Edison> However, i'm currently @ work. So i should do some stuff to earn my money.
00:16:06 <Edison> Thanx for the nice chat. I hope you get some answers from Stephen.
00:16:43 <meds> thanks!
00:16:44 <meds> :)
00:56:28 --- quit: meds ("Leaving")
04:03:39 --- quit: Edison ()
05:14:51 --- join: Yepster (~yepster@cust-217-117-225-12.utelisys.net) joined #opencyc
05:18:06 <Yepster> Steve are you there?
05:18:41 <Yepster> I have a question about "complete assertions can appear as intensional components of other assertions"
05:18:56 <Yepster> http://www.cyc.com/tech.html
05:21:47 <Yepster> is there an example that illustrates this?
06:05:52 --- join: Adimensional (~alexxx@gate1.ien.it) joined #opencyc
06:06:34 <Adimensional> anybody here?
06:06:40 <stevereed_home> yep
06:06:48 <Adimensional> oh, hi
06:06:52 <Adimensional> just a newbie here
06:06:59 <stevereed_home> Yepster: looking up your question
06:07:10 <Adimensional> heard of Cyc on /., just installed
06:07:23 <Adimensional> easy to link to C progs?
06:08:27 <stevereed_home> not now, but will be easier on next release.
06:08:40 <stevereed_home> for now you have to make api calls through sockets.
06:09:02 <stevereed_home> next release we will support dynamic linking of C libraries with,
06:09:14 <stevereed_home> an interface directly into cyc.
06:09:16 <Adimensional> yep, tried with telnet, probably I will try Perl too
06:09:29 <stevereed_home> telnet is the best for simple testing.
06:09:45 <stevereed_home> when you get telnet working then you do the same thing from C.
06:10:06 <stevereed_home> Yepster: look at causes-PropProp for example of assertion having assertions as args.
06:10:36 <Adimensional> easy question, I was much confused to see so many different languages (dialects?) must be used to communicate with Cyc. Why so many?
06:13:31 <stevereed_home> do you mean language bindings that work with the Cyc server?, ro
06:13:33 <stevereed_home> or
06:13:46 <stevereed_home> do you mean what cyc itself is written in?
06:14:12 <Adimensional> i just scratched the surface, so far... but was confused by
06:14:14 <Adimensional> CycL
06:14:16 <Adimensional> CycNL
06:14:19 <Adimensional> subL
06:14:29 <stevereed_home> ok.
06:14:30 <Adimensional> and that other used by the Telnet communication
06:14:44 <stevereed_home> let me tell you...
06:15:08 <stevereed_home> SubL is a subset of lisp in which most of the cyc code is written.
06:15:25 <Adimensional> i like Lisp...
06:15:30 <stevereed_home> the remainder of the cyc code is written in C and provides a runtime environment for SubL.
06:15:58 <stevereed_home> But the KB itself is written in CycL, the logical knowledge representation language,
06:16:07 <stevereed_home> and that is the open-source part.
06:16:34 <stevereed_home> for the cyc server, we will provide a means to use it from an application, and for you
06:16:48 <stevereed_home> to change Cyc's behavior by programming extensions.
06:17:12 <stevereed_home> the CycL is really most important because everything else just provides support for CycL,
06:17:33 <stevereed_home> and we could in fact implement CycL quite differently but still keep CycL.
06:17:46 <stevereed_home> CycL is what you see in the KB when you browse it.
06:17:47 <stevereed_home> OK?
06:17:50 <Adimensional> i see. Better start learning from CycL then
06:17:54 <Adimensional> thanks
06:18:00 <stevereed_home> see the docs on www.opencyc.org
06:18:11 <stevereed_home> we have more comming in the next few weeks.
06:18:14 <Adimensional> doing right now!
06:18:39 <stevereed_home> ok, got to go for now, but we always watch the logs.
06:18:49 <Adimensional> thanks, and bye
06:18:54 --- quit: Adimensional ()
06:19:30 --- join: wannabedoc (~Wouldnt@northwood-158-121.reshall.umich.edu) joined #opencyc
06:19:55 --- quit: wannabedoc (Client Quit)
07:05:58 --- join: futhin (~thin@h24-64-175-61.cg.shawcable.net) joined #opencyc
08:18:34 --- quit: futhin ("work")
09:59:48 <Yepster> steve, thanks, I've seen your answer.
10:07:24 --- quit: Yepster ()
10:17:51 --- join: johnd (johnd@207.207.8.65) joined #opencyc
15:02:33 --- join: Psion (Psion@VOID.RES.cmu.edu) joined #opencyc
17:37:45 --- join: Cobra (cobra@dsl-64-129-232-145.telocity.com) joined #opencyc
19:49:20 --- join: futhin (~thin@h24-64-175-61.cg.shawcable.net) joined #opencyc
20:16:26 --- join: dash (washort@68.17.163.212) joined #opencyc
21:58:30 <dash> shapr shapr
22:00:03 <dash> hm. wrong channel
22:00:04 --- part: dash left #opencyc
22:32:44 --- quit: futhin ("sleep")
23:59:59 --- log: ended opencyc/02.06.14
