00:00:00 --- log: started opencyc/02.06.05
00:09:07 --- quit: Edison (carter.openprojects.net irc.openprojects.net)
00:09:07 --- quit: bruce (carter.openprojects.net irc.openprojects.net)
00:09:12 --- quit: damski (carter.openprojects.net irc.openprojects.net)
00:09:12 --- quit: stevereed_home (carter.openprojects.net irc.openprojects.net)
00:09:12 --- quit: dmiles (carter.openprojects.net irc.openprojects.net)
00:09:12 --- quit: blake_ (carter.openprojects.net irc.openprojects.net)
00:09:12 --- quit: reed_ (carter.openprojects.net irc.openprojects.net)
00:09:12 --- quit: ChanServ (carter.openprojects.net irc.openprojects.net)
00:09:12 --- quit: CycLBot (carter.openprojects.net irc.openprojects.net)
00:12:24 --- join: ChanServ (ChanServ@services.) joined #opencyc
00:12:24 --- join: Edison (~tweber@pD9EB4F77.dip.t-dialin.net) joined #opencyc
00:12:24 --- join: damski (damski@CPE-144-132-178-3.nsw.bigpond.net.au) joined #opencyc
00:12:24 --- join: bruce (~bruce@dnvrdslgw17poola1.dnvr.uswest.net) joined #opencyc
00:12:24 --- join: stevereed_home (~reed@adsl-66-141-46-249.dsl.austtx.swbell.net) joined #opencyc
00:12:24 --- join: dmiles (~OULWC@12-225-207-235.client.attbi.com) joined #opencyc
00:12:24 --- join: blake_ (blake@207.207.8.109) joined #opencyc
00:12:24 --- join: reed_ (reed@207.207.8.185) joined #opencyc
00:12:24 --- mode: carter.openprojects.net set +o ChanServ
00:25:34 --- quit: reed_ (carter.openprojects.net irc.openprojects.net)
00:25:34 --- quit: blake_ (carter.openprojects.net irc.openprojects.net)
00:25:34 --- quit: stevereed_home (carter.openprojects.net irc.openprojects.net)
00:25:34 --- quit: dmiles (carter.openprojects.net irc.openprojects.net)
00:25:34 --- quit: damski (carter.openprojects.net irc.openprojects.net)
00:25:44 --- join: damski (damski@CPE-144-132-178-3.nsw.bigpond.net.au) joined #opencyc
00:25:44 --- join: stevereed_home (~reed@adsl-66-141-46-249.dsl.austtx.swbell.net) joined #opencyc
00:25:44 --- join: dmiles (~OULWC@12-225-207-235.client.attbi.com) joined #opencyc
00:25:44 --- join: blake_ (blake@207.207.8.109) joined #opencyc
00:25:44 --- join: reed_ (reed@207.207.8.185) joined #opencyc
00:32:40 --- join: CycLBot (cyc@12-225-207-235.client.attbi.com) joined #opencyc
00:46:47 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
01:26:54 --- quit: jlatour ()
01:38:06 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
02:44:27 --- quit: jlatour ()
05:27:43 --- join: Yepster (~yhavinga@cust-217-117-225-39.utelisys.net) joined #opencyc
06:16:54 --- quit: Edison ()
06:16:54 --- join: theos_wrk (~torsten@kbs59.informatik.uni-bremen.de) joined #opencyc
06:17:22 <theos_wrk> hi there
06:25:43 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
07:39:54 --- nick: jlatour -> cluebie
07:40:04 --- nick: cluebie -> jlatour
07:43:08 * theos_wrk is away: writing proposal
07:53:32 * theos_wrk is back (gone 00:10:24)
08:38:29 <reed_> Doug, I checked-in CycObject.  Thanks!
08:46:22 <theos_wrk> reed_: talked wiht dmiles, sorted loads of things out, ready to write proposal, taking big nappie wfirst after long flight
09:20:54 <reed_> ok.
09:39:40 --- quit: damski (Read error: 110 (Connection timed out))
09:49:13 --- join: damski (damski@CPE-144-132-178-3.nsw.bigpond.net.au) joined #opencyc
10:42:26 --- part: jlatour left #opencyc
10:46:34 <Yepster> steve?
10:56:21 <Yepster> Hmm what was that about CycObject? Had some troubles with it earlier today,
10:56:43 <Yepster> so I decided to make a (very) small oracle-opencyc.jar that contains
10:56:56 <Yepster> only a few classes needed from the api
10:57:14 <Yepster> All stuff is now checked in in org/opencyc/oracle
10:57:39 <Yepster> version 0.000001
11:08:57 * theos_wrk is away: Humans distracting me!
11:17:35 --- quit: Yepster ("using sirc version 2.211+KSIRC/1.1")
13:22:26 --- join: mowerm (matt_mower@dekard.demon.co.uk) joined #opencyc
13:23:05 <mowerm> Hello
13:23:05 <CycLBot> hello mowerm
13:24:55 <mowerm> what can you tell me bot?
13:30:27 <mowerm> apparently no-one home....
14:51:29 <reed_> here
14:54:22 <mowerm> Hello
14:54:23 <CycLBot> hello mowerm
14:54:31 <reed_> hi
14:54:38 <reed_> whats up
14:54:46 <mowerm> I'm interested in Cyc
14:54:55 <mowerm> and looking for people who might be able to help me
14:54:55 <reed_> how did you find us
14:55:12 <mowerm> Jon De Oliviera at Cyc pointed me at you guys
14:55:17 <mowerm> do you know him?
14:55:24 <reed_> ok, my boss on OpenCyc
14:55:30 <mowerm> Jon is?
14:55:34 <reed_> yes
14:55:41 <reed_> actually John
14:55:58 <mowerm> ah sorry
14:56:03 <reed_> how to help?
14:56:17 <mowerm> I have an application for Cyc
14:56:24 <mowerm> and I'm looking for possible collaborators
14:56:28 <mowerm> with Cyc knowledge
14:56:33 <mowerm> who might like to get involved
14:56:41 <mowerm> My knowledge of Cyc doesn't extend much
14:56:49 <mowerm> past what I read in an article in Technology Review
14:56:52 <mowerm> a few months ago
14:56:56 <mowerm> but it looks very interesting
14:57:17 <mowerm> John thought it was interesting
14:57:21 <mowerm> and suggested that I drop in here
14:57:25 <mowerm> and talk to some of you guys
14:59:10 <reed_> what is it about?
14:59:28 <mowerm> Are you familiar with weblogging?
14:59:37 <reed_> yes
14:59:41 <mowerm> excellent
14:59:48 <mowerm> I am interested in how communities form
14:59:55 <mowerm> and in how weblogging is going to be important
15:00:02 <mowerm> in forming and building new communities online
15:00:07 <reed_> go on
15:00:08 <CycLBot> Go where?
15:00:23 <mowerm> I have an idea (as have others) for connecting people
15:00:31 <mowerm> together by analyzing what they are writing about on their
15:00:33 <mowerm> blogs.
15:00:39 <mowerm> However so far we have been bound up in links & keywords
15:00:46 <mowerm> neither of which are sufficiently expressive for the tool
15:00:54 <mowerm> to be, ultimately, useful
15:00:58 <mowerm> to the people who most need it
15:01:01 <mowerm> Then I thought of Cyc
15:01:10 <mowerm> and wondered if it could be used to understand the
15:01:16 <mowerm> "real content and context"
15:01:22 <mowerm> of what is being spoken about in a particular posting
15:01:30 <mowerm> and relate that to other things being said
15:01:32 <mowerm> in other blogs
15:01:39 <mowerm> and use this to form dynamic blog-rings
15:01:44 <mowerm> of people with common interests
15:01:47 <reed_> got it
15:01:50 <mowerm> but who are not currently connected to each other
15:02:02 <reed_> ok..
15:02:03 <mowerm> Cyc's ability to understand what is really
15:02:09 <mowerm> being talked about is, for me, the key
15:02:09 <reed_> here is my input:
15:02:14 <mowerm> to making this a real tool
15:02:39 <reed_> Cyc cannot now fully understand arbitrary english sentences,
15:02:43 <reed_> but
15:02:57 <reed_> we have a tool that will be published open-source,
15:03:08 <reed_> that statistically indentifies concepts
15:03:14 <reed_> using context
15:03:28 <reed_> that may at least partially accomplish your goal.
15:03:31 <reed_> the idea,
15:03:37 <mowerm> very interesting
15:03:45 <reed_> is to extract enough concepts from the text
15:03:52 <mowerm> At the moment what I am interested in is getting away from simple
15:03:55 <mowerm> keywords and links
15:04:01 <mowerm> If OpenCyc 0.6
15:04:01 <reed_> to summarize, to know what the topic is about.
15:04:06 <mowerm> doesn't do 100% that's okay
15:04:10 <mowerm> as long as it *can* get there
15:04:17 <mowerm> your tool sounds like it could be a big improvement
15:04:34 <reed_> yes, so here is a plan.
15:04:48 <reed_> I will get the status of the tool from its
15:05:06 <reed_> developer and give you an idea of when it will be available.
15:05:24 <reed_> because it works now, i do not expect that release date to be far away.
15:05:36 <reed_> ok?
15:06:05 <mowerm> excellent
15:06:22 <mowerm> Do you know of anyone (including yourself) who might be interested in collaborating
15:06:25 <reed_> writing the request now.
15:06:29 <mowerm> with me on developing this idea?
15:06:41 <mowerm> Although I have a development background (a little while back anyway)
15:06:51 <reed_> yes, as far as providing an api in java for the tool
15:07:04 <mowerm> I would really like someone who knows Cyc
15:07:12 <reed_> you will have to get more help with the web log handling
15:07:28 <mowerm> I'm looking to build a team of people who want to collaborate on this
15:07:37 <mowerm> the idea is to produce an open source service
15:07:45 <mowerm> that can be replicated
15:08:09 <mowerm> (I'm a little more vague about this bit -- I'm concentrating on the what's and why's right now)
15:08:13 <reed_> We can test the tool then if it works well enough, then recruit the group.
15:08:19 <reed_> ok?
15:08:28 <mowerm> That sounds fair
15:09:29 <mowerm> obtw, do you actually work for Cyc?
15:10:15 <reed_> yes I am the Cycorp project manager for the DAML project whose funding provides for OpenCyc.
15:10:37 <mowerm> excellent
15:11:02 <mowerm> Are there many people involved with OpenCyc?
15:11:14 <mowerm> (I understand it's quite a recent initiative)
15:11:39 <reed_> I've recruited two contributors so far from the 8,000 downloaders since April.
15:12:05 <reed_> Others are interested and we are helping.
15:12:29 <reed_> Here at Cycorp we have 60 staff indirectly contributing.
15:13:11 <reed_> We snapshot the current code and KB,
15:13:20 <mowerm> That's pretty incredible
15:13:22 <reed_> then subset the KB for OpenCyc.
15:14:03 <reed_> we plan to release substantially all of the current KB as open-source over time.
15:14:55 <reed_> ok, so I write the concept parser status inquiry message.
15:15:04 <mowerm> thank you
15:15:15 <reed_> please send me an email at reed@cyc.com so I can reply.
15:16:02 <mowerm> How do you like to be addressed?
15:16:32 <reed_> Steve
15:17:05 <mowerm> Ah, you must be Steve Reed at work then...
15:18:42 <reed_> yes, i monitor irc at home and at work
15:18:51 <reed_> even though we are logged
15:19:43 <mowerm> Is this an important means of communication for you?
15:19:51 <mowerm> (message sent)
15:20:48 <reed_> Well I must provide support for OpenCyc,
15:20:56 <reed_> and this is one way.
15:21:34 <reed_> Ok, Matt got the email.
15:21:59 <mowerm> I'm just in the middle of writing a post about this idea, where it comes from,
15:22:05 <mowerm> and some of my underlying thinking
15:22:33 <mowerm> I wrote it earlier and then lost it when I tried to look up a word on dictionary.com
15:22:41 <mowerm> -- this technology has a little way to go yet!
15:23:03 <mowerm> Just been thinking a little
15:23:05 <mowerm> If the tool works out
15:23:21 <mowerm> I would imagine maybe wrapping the API (perhaps wrapped in another app specific API) as a
15:23:23 <mowerm> web service
15:23:34 <mowerm> to allow arbitrary blog-connecting tools to access
15:23:49 <mowerm> the KB and the indexed blog knowledge
15:23:57 <mowerm> thoughts?
15:25:51 <reed_> Yes, I can imagine context specific assertions for which cyc
15:26:04 <reed_> can generate the equivalent english sentences.
15:26:36 <reed_> take a look a the cyc doc on www.opencyc.org for what cyc can do.
15:26:37 <CycLBot> Take what?
15:27:05 <mowerm> CycLBot seems a litle bit literal :)
15:27:15 <reed_> [that bot does more each day!]
15:27:32 <reed_> doug miles hooked a parser to it.
15:28:00 <reed_> you can look at the irc log to see him test it.
15:28:13 <mowerm> Will do, I'll also try and read the Cyc doc tomorrow
15:28:26 <mowerm> I'm in London so it's about 23:30 right now
15:29:17 <reed_> ok, got to work on my status rpt now.
15:30:14 <mowerm> Thanks for your help Steve
15:30:40 <reed_> ok.
15:35:10 --- part: mowerm left #opencyc
19:04:35 --- join: yottzumm ([DziXnqphr@12-232-76-192.client.attbi.com) joined #opencyc
19:04:40 --- quit: yottzumm (Client Quit)
20:53:51 --- join: yottzumm ([AYJ6gWCfq@12-232-76-192.client.attbi.com) joined #opencyc
20:54:07 <yottzumm> any news on when a book might be published?
21:22:17 <dmiles> an API programming guide type book?
21:22:58 <dmiles> that sure would be usefull
21:23:07 <dmiles> did you see the new java CVS updates?
21:23:20 <dmiles> they are awesome
21:23:44 <dmiles> CycObject is the base class now
21:25:15 <dmiles> and look at this: http://12.225.207.235/offt/sourceforge/logicmoo/src/org/opencyc/cyclobject/CycLTerm.html
21:28:03 <dmiles> the CycLTerm is also very extended
21:48:31 <dmiles> hi theos
21:48:50 <dmiles> the channel looks like it was active today
22:05:25 <yottzumm> just got back
22:05:48 <dmiles> cool.. i responded 1/2 later :)
22:06:58 <dmiles> i amlost completed (should be done tonight) an interface into Cyc from SWI-Prolog
22:07:05 <yottzumm> cool
22:07:17 <dmiles> it works for my purposes but i am adding an API to it
22:08:01 <dmiles> Prolog is a language sometimes used for infernce engines.. but none have the coverage that Cyc has
22:08:19 <dmiles> so alot iof good interfaces have been written but no really greate IEs
22:08:30 <yottzumm> have you ever look at Jess (CLIPS for java)
22:08:43 <dmiles> so i am hoping to make it so prolog coders can redirect rtheir ionfernece to Cyc 
22:09:09 <dmiles> Yes.. Jess is neet
22:09:23 <yottzumm> I didn't even know that opencyc had a cvs repository
22:09:31 <dmiles> it had som,e restrictions (some perfgormnance) for vvery large numbers of rules
22:10:03 <dmiles> so have seen certain apps that are good for Jess.
22:10:39 <dmiles> but the type of apps that are expected to do very general things.. you end up doing more work trying to use Jess
22:11:26 <dmiles> but actually they end up being the same amount of work
22:12:14 <dmiles> (as compared to ussing Cyc)
22:13:19 <dmiles> i was thinking at one time when i was working on an inference engine program in prolog, to use Jess for the WFF checker
22:13:44 <dmiles> well so prolog kernel could be offline or busy with other people while Jess managed the KB
22:14:05 <dmiles> (keeping those responsiblities in Java)
22:14:47 <yottzumm> I considered using Prolog for doing access control...logic which compared the credentials of the user to the document metadata
22:14:59 <yottzumm> jess too
22:15:48 <dmiles> it works great for alot of things (both do) one propblem with prolog is that in infernce (generalized) there are aspects that can hurt performance
22:16:13 <dmiles> prolog is extremely fast, but requires very complex code to do cycle checking
22:16:35 <yottzumm> we wanted to do stuff like show me all the documents that this person has access to, which I think would be  a cinch in prolog
22:16:49 <dmiles> a couple of prolog distributuions have tried to do that in the background for us, but those never scale to large problems
22:17:11 <dmiles> yeah for security and credential checks prolog does kick but
22:17:19 <dmiles> since the rules are not cyclic
22:17:22 <yottzumm> were talking 100,000s of documents though
22:17:38 <dmiles> well BinProlog and SWI, and Sicstus that is not too many
22:18:01 <dmiles> most of the time i develpe large apps in SWI then prot to Bin
22:18:15 <dmiles> err port to BinProlog sonce i beleive i am stable
22:18:42 <dmiles> since BinPRolog is better/faster its very hard to write of develope apps on
22:18:53 <dmiles> not since :) .. but as well
22:19:28 <dmiles> But i am wondering (havent checked yet) that I want all of my softwarte to fit together somehow...
22:19:46 <dmiles> and i am thinking the HornCluase parts of opencyc can subsume prolog code
22:20:20 <dmiles> it may not have the performance at this moment, but at some point a good app will provide moticvation for improviong
22:20:56 <dmiles> deep into the guts of opencyc.. once it cionverts EL to HL it is vertually prolog code (that is what cannicalization does)
22:21:24 <yottzumm> when you say canonicalization, you mean CNF
22:21:26 <dmiles> converts to CNF which polycanonicalizes to multple prolog clauses
22:21:58 <dmiles> so for example..  (imples A B)
22:22:07 <dmiles> in CNF os (not A or B)
22:22:32 <dmiles> in Prolog becomes B:-A , ~B :- ~A
22:22:39 <yottzumm> I studied prolog in college a long time ago
22:23:04 <dmiles> so the CNF to Prolog produces both Modus Ponens and Tolens rules
22:23:21 <dmiles> well we coause say CNF to HornCLause
22:24:04 <dmiles> since prolog does not really have exlicit negation.. one ends uip writting a meta-interpretor in prolog to process that
22:24:46 <dmiles> propositional provers in prolog was not very hard.. the biggest problems is when someone wants to represent a fuinctional clause
22:24:58 <dmiles> in Cyc that is done all the time
22:25:03 <yottzumm> I checked out swi_interface from CVS.  For a second there, I thought the code was perl
22:25:06 <dmiles> for example you wish to say:
22:25:33 <dmiles> (isa (CityOf ?Country) City)
22:26:16 <dmiles> in prolog you cvan represent that.. but requires a termOfUnit type process .. whuich really Lisp ends up kicking but on
22:26:44 <yottzumm> who do I tell the ant build should mkdir a classes directory
22:27:00 <dmiles> well i personally build right in there :)
22:27:07 <dmiles> i have an ant script that..
22:27:15 <dmiles> is veruy generic i use for building operncyc
22:27:43 <dmiles> but i dont target a jar.. i just tartget the pwd.. whuich is in my classopath
22:29:03 <dmiles> http://12.225.207.235/offt/sourceforge/logicmoo/src/build.xml
22:29:06 <dmiles> there it is
22:29:24 <dmiles> it jusrt goes up looking and compili9ng stuff :)
22:29:41 <dmiles> and dumps into my PWD (which is the first argument of classpath)
22:30:48 <yottzumm> where do you get commons-collections from
22:31:14 <dmiles> oh i set my classpath before hand
22:31:40 <dmiles> and those things are not actually found
22:31:50 <dmiles> but since they dont break anything :0
22:32:06 <dmiles> http://12.225.207.235/offt/sourceforge/logicmoo/bin/setpaths
22:32:18 <dmiles> thats the shell script i run before building
22:33:21 <dmiles> some of the jars (about 1/4) are needed for opencyc
22:33:36 <dmiles> if you need any http://12.225.207.235/offt/sourceforge/logicmoo/lib/
22:33:49 <dmiles> like FIPO_OS*
22:34:07 <dmiles> (and violinstrings)
22:35:09 <dmiles> i pretty much just kept try compiling opencyc until i found all the 3rd party jars it needed ;)
22:35:40 <dmiles> there is only one i was one i was unable to find (well we can get it over email) thats the coabs stuff
22:37:19 --- quit: stevereed_home (Read error: 104 (Connection reset by peer))
22:40:54 <dmiles> any of those jars help? 
22:41:23 <yottzumm> the FIPO one helped.  still get 100 errors though
22:41:36 <dmiles> have ViolinStrings yet?
22:42:30 <dmiles> oh and dont forget jumit (which i know you the kind of guy to have :)
22:43:01 <yottzumm> you mean junit?  I downloaded from junit.org
22:43:24 <dmiles> yep .. cool
22:43:25 <dmiles> you will need to rm the coabs dir under cycagent
22:43:37 <dmiles> and remove a couple imports to it in other fuiles
22:44:51 <dmiles> M cycagent/Echo.java
22:44:51 <dmiles> M cycagent/GenericAgent.java
22:44:58 <dmiles> M api/RemoteCycConnection.java
22:45:22 <dmiles> need to comment out the import org.opencyc.cycagent.coabs.*;
22:47:27 <dmiles> from doing that and having the jars you should get a build w/o errors
22:48:27 <dmiles> http://sourceforge.net/forum/message.php?msg_id=1578255
23:04:54 <yottzumm> The links now look like com.globalinfotek.coabsgrid
23:05:39 <yottzumm> no, that's just imports
23:05:50 <dmiles> yeah i am sure we could email them to get the jar
23:07:17 <dmiles> but yeah i was able to survive and build w/o it.. itas truely just import as you saw
23:07:47 --- join: treker (ir2002@jerusalem.clic.cs.columbia.edu) joined #opencyc
23:10:09 <yottzumm> okay, the who thing compiled, now to test my java program
23:11:01 --- quit: treker ("treker has no reason")
23:11:40 <dmiles> cool :)
23:13:01 <dmiles> yeah the CVS developement cyc is better cause you get the classes that make your code easier tyhen what was in the jar
23:16:31 <yottzumm> my program works, with no changes :)
23:17:44 <dmiles> excellent, yeah tey kept the same object model in the cycobject package
23:18:22 <dmiles> just made it easier to write method signatures.. since you can use CycObject to encompase CycList and CycForts both
23:18:32 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
23:18:58 <dmiles> CycObject is usefull when passing in arguments
23:19:58 <dmiles> at least in my case i was having a neck pain having to write both a CycList and CycFort input param methods
23:19:59 <yottzumm> so instead of using a bunch of parentheses, you can use nested CycLists?
23:20:27 <dmiles> in alot of cases nested CycLists are usefull
23:20:43 <dmiles> like thats how retrun rtesults come back
23:21:51 <dmiles> a CycList is ussually represting a parens
23:23:36 <dmiles> but yes i guess we would build CycLists for each paren pair we needed
23:28:58 --- quit: yottzumm ("Client Exiting")
23:59:59 --- log: ended opencyc/02.06.05
