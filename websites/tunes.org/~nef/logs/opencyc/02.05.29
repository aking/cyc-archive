00:00:00 --- log: started opencyc/02.05.29
00:00:38 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
00:15:06 --- quit: jlatour (Read error: 104 (Connection reset by peer))
03:51:53 --- quit: grove (Read error: 110 (Connection timed out))
03:57:21 --- join: grove (~grove@193.69.113.28) joined #opencyc
07:28:12 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
07:28:31 <jlatour> Hello.
08:30:36 --- join: johnd (johnd@207.207.8.65) joined #opencyc
08:30:42 <johnd> jeroen?
08:31:22 <jlatour> Yes?
08:31:34 <johnd> hi
08:31:34 <jlatour> I'm here, but eating. May be slow at times.
08:31:43 <johnd> ok
08:31:56 <johnd> yes, I'd like to post something
08:32:09 <johnd> I'd like to get the message clear first
08:32:18 <johnd> maybe we can do that now
08:32:19 * jlatour nods.
08:32:40 <jlatour> Would it be OK if we did it in say 45 minutes?
08:32:57 <johnd> I have to go out to lunch
08:33:02 <jlatour> Now?
08:33:07 <johnd> but I can do later in the day
08:33:18 <johnd> no, have to go to lunch in one hour
08:33:32 <jlatour> Well It's 17:30 here now. As long as we can do it before my midnight, it's fine with me :)
08:33:58 <johnd> so, you're 7 hours later
08:34:06 <jlatour> If it's 10:30 there, yes.
08:34:51 <johnd> how's 8:30 - 9:00pm your time?
08:35:37 <jlatour> Sounds fine.
08:35:55 <johnd> okay, I'll talk to you later...
08:35:59 * johnd is away: I'm busy
08:36:02 --- quit: johnd ("Client Exiting")
08:43:41 --- join: Yepster (~yhavinga@cust-217-117-225-39.utelisys.net) joined #opencyc
08:51:23 <Yepster> subl: (find-constant "#$SKF-9979398495")
08:51:24 <CycLBot> no answers found
08:52:23 <Yepster> subl: (find-constant "#$SKF-2075536398")
08:52:24 <CycLBot> no answers found
08:54:13 <Yepster> subl: (constant-complete "Ensi")
08:54:14 <CycLBot> no answers found
08:57:57 --- quit: jlatour (Read error: 104 (Connection reset by peer))
08:57:59 <Yepster> subl: (constant-complete "SKF-5")
08:58:01 <CycLBot> Your question returned 52 answers .. please refine. (here are the first five)
08:58:02 <CycLBot> (SKF-50795939 SKF-50870271 SKF-50875100 SKF-51237199 SKF-51601786)
08:58:23 <Yepster> subl: (constant-complete "SKF-9979")
08:58:24 <CycLBot> (SKF-9979398495)
08:59:20 <Yepster> subl: (find-constant "SKF-9979398495")
08:59:21 <CycLBot> SKF-9979398495
09:01:39 <Yepster> subl: (generate-phrase '(#$SKF-9979398495))
09:01:39 <CycLBot> Thing 9979398495-0000
09:02:55 <Yepster> subl: (#$genFormat #$SKF-9979398495 "the ensign" NIL)
09:02:55 <CycLBot> org.opencyc.api.CycApiException: (S#21632 :MESSAGE "Operator #$genFormat was not a symbol")
09:04:41 <Yepster> subl: (cyc-assert '(#$genFormat #$SKF-9979398495 "the ensign" NIL) #$EnglishParaphraseMt)
09:04:42 <CycLBot> org.opencyc.api.CycApiException: (S#21632 :MESSAGE "Formula
09:04:43 <CycLBot> (#$genFormat #$SKF-9979398495 "the ensign" NIL)
09:04:43 <CycLBot> was not well formed because:
09:04:45 <CycLBot> Term #$SKF-9979398495 violates arg-isa #$Relation
09:04:45 <CycLBot> applicable to argument 1 of relation #$genFormat
09:04:46 <CycLBot> in mt #$EnglishParaphraseMt.
09:04:49 <CycLBot> Consider asserting
09:04:51 <CycLBot> (#$genFormat #$SKF-9979398495 "the ensign" NIL)
09:04:53 <CycLBot> in mt #$JamudMt.")
09:05:05 <Yepster> subl: (cyc-assert '(#$genFormat #$SKF-9979398495 "the ensign" NIL) #$JamudMt)
09:05:06 <CycLBot> T
09:05:14 <Yepster> subl: (generate-phrase '(#$SKF-9979398495))
09:05:14 <CycLBot> Thing 9979398495-0022
09:05:19 <Yepster> Hell
09:08:13 <Yepster> Sorry for messing around with your cyc image, but I assume the bot is here for just that reason.
09:09:10 --- quit: dmiles (carter.openprojects.net irc.openprojects.net)
09:17:11 --- part: Yepster left #opencyc
09:18:23 --- join: dmiles (~OULWC@12-225-207-235.client.attbi.com) joined #opencyc
09:24:30 --- quit: dmiles (carter.openprojects.net irc.openprojects.net)
09:24:48 --- join: dmiles (~OULWC@12-225-207-235.client.attbi.com) joined #opencyc
09:42:59 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
11:27:50 --- join: dash (washort@d144.narrowgate.net) joined #opencyc
11:37:08 <jlatour> Hrm. 8.35.
11:50:12 --- join: johnd (johnd@207.207.8.65) joined #opencyc
11:50:18 <jlatour> Hello!
11:50:23 <jlatour> Just in time :)
11:50:25 <johnd> sorry
11:50:44 <jlatour> Was about to mail you when 'activity in #opencyc' flashed :)
11:51:32 <johnd> just finishing up a mtg
11:53:20 <jlatour> meeting?
11:53:43 <johnd> yes
11:53:45 <johnd> all done
11:53:50 <johnd> with a coworker
11:55:17 <johnd> are you still there?
11:55:18 <jlatour> How many people work at Cycorp?
11:55:22 <johnd> 65-70
11:55:29 <jlatour> Yes. Have to finish what I started in the meantime
11:55:33 <johnd> ok
11:56:04 <jlatour> But let's start.
11:56:48 <johnd> okay. are we going to brainstorm a little here? collaborate on creating the initial message, etc.
11:57:13 <jlatour> Fine. Do you want that message to be a discussion piece?
11:57:21 <johnd> hm?
11:58:06 <johnd> I want it to result in discussion. Is that what you mean?
11:58:38 <jlatour> I mean, do you want to start with a proposal, and let others comment, or simply pose the problems?
12:00:18 <johnd> oh. I think a little of each. I want to mention all of the problem areas (issues) we can think of, include the partial solutions we have for some of them, and solicit further comments.
12:01:12 <jlatour> OK, so let's start with the issues then?
12:01:53 <johnd> let's start with the goal, because I want to make sure we're clear on that, and that we agree
12:02:01 <jlatour> OK
12:02:41 <johnd> we want to collect common knowledge
12:03:01 <johnd> we want to grow to very large scale participation
12:03:16 <johnd> we want the knowledge to be usable by all
12:03:50 <jlatour> we want the knowledge to be easily accessible and easily, ehm, contributed to? Rephrase that.
12:04:04 <johnd> i get what you mean
12:04:17 <jlatour> More of a success factor really, but might be something that should be kept in mind
12:04:22 <johnd> proper phrasing will be a task unto itself
12:04:28 <jlatour> Quite
12:04:28 --- quit: CycLBot (Remote closed the connection)
12:05:34 <johnd> there will be all kinds of uses, but that is mostly a separate issue, right?
12:06:56 <johnd> Yes, usability is probably a success factor
12:07:13 <johnd> but it can be a goal that usability continue to improve
12:07:35 <johnd> that it improve until Cyc can do more of the learning by itself
12:07:52 <jlatour> If I look at the current OpenCyc the first thing that comes to my mind is lack of usability. It's a great system, but takes a while to learn :)
12:08:01 <johnd> right
12:08:05 <johnd> definitely
12:08:17 <johnd> some RKF tools will come with version 1.0
12:08:31 <johnd> that's why this discussion may be a little premature
12:09:06 <johnd> but I think it is worth starting to get the idea out there, for the early -- not adopters -- helpers
12:09:39 <johnd> the RKF tools let the user add knowledge via English dialog
12:10:05 <johnd> It's quicker than CycL, but it is still somewhat tedious at this point
12:10:06 <jlatour> I've been wondering about that.
12:10:14 <jlatour> What about non-English BTW?
12:10:22 <jlatour> That may be another issue. Global.
12:10:30 <johnd> any time you're ready ;)
12:10:49 <johnd> yes, we'll need help working on other languages
12:11:51 <jlatour> I'd be interested in helping, if you want.
12:11:51 <johnd> the concepts are language-independent
12:12:02 <jlatour> This whole topic is quite interesting :)
12:12:22 <johnd> I'd rather you concentrate on some other issues
12:12:25 <jlatour> What academic field does OpenCyc fall in?
12:12:46 <johnd> once we get moving, we'll have more people that can help with lexifying concepts in other languages
12:13:03 <jlatour> Alright...
12:13:18 <johnd> What do you mean, "What academic field..." AI?
12:14:56 <jlatour> Of course. OK, back to the message.
12:15:42 <johnd> I don't even think of it as a message, really
12:15:52 <johnd> I think of it as the first issue of an e-zine
12:16:09 <jlatour> Back to the issue then, in multiple meanings of the word.
12:16:31 <johnd> that's okay with you. you can see it that way?
12:17:57 <johnd> ?
12:18:02 <jlatour> Not entirely
12:18:14 <jlatour> I don't really see an e-zine as two-way communication?
12:18:15 <johnd> okay, so tell me more. what are you thinking
12:18:24 <johnd> yes, i agree
12:18:35 <johnd> and i do see this as needing to be 2-way
12:18:43 <jlatour> Absolutely.
12:18:54 <johnd> it's just that there's a lot that needs to be said, and it needs to be structured
12:19:01 <johnd> more structured as time goes on
12:19:05 <johnd> what about a wiki?
12:19:15 <johnd> Are you familiar with wikis?
12:19:16 <jlatour> That'd work.
12:19:29 <jlatour> I haven't done all that much with them, but I'm familiar with the concept.
12:19:34 <johnd> I used a wiki for the pre-release of the beta.
12:19:40 <johnd> worked fairly well
12:20:11 <johnd> people would need to register, so that we can keep track of who's trashing - [er] - using the site
12:20:14 <jlatour> pre-release of the beta? :)
12:20:18 <johnd> beta beta
12:20:21 <jlatour> Right.
12:20:40 <johnd> okay, here are some categories of issues
12:20:53 <johnd> tools, people, methods
12:21:08 <jlatour> Going to give me a short description of each?
12:21:15 <jlatour> Or better yet
12:21:17 <jlatour> Let me try.
12:21:33 <jlatour> tools - the software used to modify and distribute the knowledge
12:21:36 <johnd> under 'tools' goes: global namespace, CycML, knowledge grid, teaching games, other sw, and other categories
12:21:43 <johnd> yes
12:22:05 <jlatour> people - organising, recruiting, etc.?
12:22:16 <johnd> global namespace gets established initially by introducing prefixes on constant names
12:22:24 <johnd> this is that 'Rover' issue
12:22:38 <johnd> I say it is a Mars lander, you say it is a dog
12:22:53 <jlatour> Ehm, why can't I say it's a Mars lander? :)
12:23:22 <johnd> So, yours is called #$JLatour:Rover and mine is #$JohnD:Rover
12:23:39 <jlatour> That would however establish 'ownership' of a concept.
12:23:49 <johnd> You don't need a prefix within your own KB
12:23:59 <johnd> (wait, there's more)
12:24:11 <jlatour> All right. *puts the phone down*
12:24:27 <johnd> ... but when you share knowledge, it gets your prefix.
12:24:52 <johnd> Your prefix is registered with the "knowledge grid"
12:25:21 <johnd> as each term 'promotes' through being incorporated into a company or org...
12:25:32 <johnd> its prefix changes
12:25:39 <johnd> I work for ACME
12:25:40 * jlatour nods.,
12:25:53 <johnd> ACME likes my #$*:Rover concept
12:26:11 <johnd> They rename it from #$JohnD:Rover to #$ACME:Rover
12:26:17 * jlatour nods.
12:26:21 <johnd> Yours takes a different route
12:27:10 <johnd> KnowledgeBuilders.org, of which you are a member, promotes JLatour:Rover to KnowledgeBuilder:Rover
12:27:52 <johnd> Now, both ACME and KnowledgeBuilder submit their Rovers (along with a bunch of other stuff) to OpenCyc.org
12:28:34 <johnd> OpenCyc (all of us, somehow) will promote one or the other, then will rename the other one and use it, too
12:28:48 <jlatour> Or rename both
12:28:55 <johnd> Now, OpenCyc's default prefix is blank
12:29:06 <johnd> right, or rename both, possibly
12:29:34 <johnd> There was never really a collision in a Cyc that used both
12:29:45 <johnd> because we really give each concept a GUID
12:30:02 <johnd> Programmers are supposed to use the GUIDs
12:30:26 <johnd> But it is better to ultimately have unique names
12:30:44 <johnd> I think this is a lot like the namespaces in XML
12:30:45 <jlatour> But also a display name?
12:31:02 <jlatour> Ehm, just out of curiosity, how much time do you have?
12:31:09 <johnd> In a local KB, the display name can drop all prefixes unless there is a collision
12:31:28 <johnd> When there is a collision, all prefixes for that term should show
12:32:52 <jlatour> I doubt end-users want to see prefixes and names like #$RoverTheMarsLander
12:33:05 <johnd> So, if your Rover is not in my KB, then mine will display as Rover, not JohnD:Rover
12:33:28 <johnd> What do we mean by users?
12:33:37 <johnd> Users shouldn't see any constant names
12:33:46 <johnd> They should see lexifications
12:33:51 <jlatour> OK.
12:33:55 <johnd> namestrings for the constants
12:34:00 <jlatour> My question remains. How much time do you have?
12:34:24 <johnd> I didn't see that question. You mean as in now? Today?
12:34:53 <jlatour> Right.
12:35:16 <johnd> Probably 20 minutes.
12:35:30 <jlatour> OK. Let's get to business then?
12:35:45 <johnd> So, that's the first tool example.
12:36:16 <johnd> I want to explain these issues to about that level of detail in the message-zine-wiki-thing.
12:36:25 * jlatour nods.
12:37:18 <johnd> CycML
12:37:34 <johnd> CycML is the way people can share knowledge initially
12:37:53 <johnd> An import/export capability is currently being worked on.
12:38:08 <johnd> CycML is CycL in XML
12:38:21 * jlatour nods.
12:38:42 <johnd> A CycML file that contains a chunk of knowledge from a Cyc KB can be called "knowledge pack".
12:38:53 <johnd> I foresee people trading knowledge packs.
12:39:14 <johnd> The k-pack needs to contain info about any knowledge pre-requisites.
12:39:34 <johnd> It might just require, e.g., OpenCyc 0.7.
12:40:01 * jlatour nods.
12:40:06 <johnd> Or it might require the 'cities of the world' knowledge pack
12:40:35 <johnd> CycML can also be used for remote procedure calls.
12:40:55 <johnd> You send a query to some Cyc KB, and get an answer of bindings.
12:41:24 <johnd> Anyway, people will need to get familiar with it, use it, comment on what is missing
12:41:50 <johnd> We intend to set up a website where people can upload/download/trade knowledge packs.
12:42:09 <johnd> We could probably use help with some web development work.
12:42:22 <jlatour> What languages do you use?
12:42:25 <johnd> We means you, me, and whoever else is on this project
12:42:32 <jlatour> For webdev
12:42:58 <johnd> OpenCyc.org is on Zope, which is built in Python
12:43:12 <johnd> Don't even need to get to the Python level
12:43:13 <jlatour> Right. Another language to learn :)
12:43:34 <jlatour> Anyway. What about a website where people can collaborate to create one pack?
12:43:50 <johnd> It's more of an environment that a language. And a pretty good one. Altough, I understand there are too many things to learn.
12:43:52 <jlatour> Where quality control is executed etc.
12:44:24 <johnd> Okay, so collaboration on a single pack can happen any time someone sets up a publicly accessible OpenCyc server
12:44:43 <johnd> That is difficult to do with 0.6 but will be easy with 0.7
12:44:53 <jlatour> And will OpenCyc provide one?
12:44:55 <johnd> The security still won't be there yet
12:45:01 <jlatour> We can't have people searching for servers, you know
12:45:27 <johnd> The grid will have connections to all publicly registered servers
12:45:42 <johnd> There are already several read-only servers
12:46:09 <johnd> This group has to help establish a server, initially, I think.
12:46:41 <johnd> The read-only ones could be made writable, but we need some security in place.
12:46:54 <johnd> We don't even have passworded logons yet.
12:47:02 <johnd> We're trying to get that for 1.0.
12:47:07 <jlatour> And preferably security that does not depend on the likes and dislikes of the admin?
12:47:26 <johnd> Without it we need a web developer to put a app wrapper around it.
12:47:53 <johnd> No, similar to the sourceforge security, in that regard.
12:48:16 <jlatour> Hrm. Why not trust metrics?
12:48:28 <johnd> Now, already supported is: Cyc puts metadata on every assertion that anyone adds.
12:48:36 <johnd> Keeps track of who added what when.
12:48:49 <johnd> You can trust metrics as well.
12:49:19 <johnd> The lowest level of security is to keep out people who'll just delete everything or do something else horrible.
12:49:54 <johnd> The metrics help you determine how useful you should consider someone's knowledge. What rev level you should start it out at.
12:50:06 <jlatour> rev level?
12:50:39 <johnd> That thing where I was talking about knowledge being promoted through an organization and on to OpenCyc.org
12:50:47 <jlatour> Ah. Right,
12:50:48 <johnd> Really its more complex than that.
12:51:22 <johnd> There are multiple levels, but they're not 1 to 10. They're described/characterized in the KB.
12:52:27 <johnd> Next topic: the knowledge grid.
12:52:36 <johnd> The grid does several things.
12:53:03 <johnd> First, what is it? It is a bunch of interconnected OpenCyc knowledge servers.
12:53:40 <johnd> It provides some of the same functionality as the CycML files (knowledge sharing), but closer to real-time.
12:53:54 <johnd> Different servers can specialize in different topics.
12:54:01 <dash> ooh, cool.
12:54:11 <dash> i hadn't heard this part before :)
12:54:26 <johnd> They can 'subscribe' to a certain subset of the knowledge 'published' by the other servers.
12:54:48 <johnd> Yeah dash, this is being worked on.
12:55:01 <johnd> Doesn't exist yet, but intended for 1.0
12:55:04 <dash> then i'm even more excited abotu opencyc.
12:55:10 <johnd> cool
12:55:21 <johnd> It's kind of like usenet groups.
12:55:34 <johnd> Perhaps a server for sports.
12:55:34 <dash> yes.
12:55:50 * jlatour nods. "This sounds like the expert groups, only with servers"
12:55:57 <johnd> Above it, one for leisure activities. 'Below' it, one for tennis.
12:56:03 <johnd> yes
12:56:34 <johnd> But the different servers can rely on each other when they need answers outside their domain of expertise.
12:57:06 <dash> hmm. robustness in the face of server failure will be an interesting problem, there
12:57:38 <johnd> You can ask a question of your server, tell it what kind of knowledge to consider or ignore (don't listen to ACME), then it will go off and get help.
12:57:54 <jlatour> Knowledge can be duplicated I suppose
12:57:58 <johnd> Yes, interesting. Not insurmountable, we think.
12:58:04 * dash nods
12:58:15 <johnd> Yes redundancy is expected.
12:58:15 <jlatour> Let one server have the authority, but keep a copy of the knowledge
12:58:52 <johnd> Let me go on to another subtopic of tools, since I'm running low on time.
12:59:00 <johnd> games
12:59:35 <dash> definitely. opencyc will make virtual worlds a lot easier to build :)
13:00:06 <johnd> We believe many games could be devised that thousands could play (those who aren't going to take the time to learn any of this stuff) that will teach Cyc (i.e. grow the KB).
13:00:33 <johnd> This isn't about virtual worlds, necessarily, although I think you're right.
13:00:46 <dash> well
13:00:52 <johnd> Think of the trivia games that thousands of people play in bars.
13:00:52 <jlatour> That sounds intriguing, but I have no idea what you have in mind.
13:01:01 <dash> i am just thinking of it in terms of having a 'consensus reality' for distributed worlds
13:01:03 <johnd> Give me a minute, I'll explain.
13:01:06 <jlatour> OK :)
13:01:23 <dash> so that a Chair on this game server and a Chair on that game server can be sensibly related
13:01:30 <johnd> I know what you're talking about, dash, but it's a different topic, sort of.
13:01:34 <dash> ah, ok
13:01:44 <johnd> Now, think of 20 questions.
13:01:51 <jlatour> Talk to dmiles about that :)
13:02:05 <dash> jlatour: definitely :)
13:02:19 <johnd> Actually, let's play.
13:02:46 <johnd> I'm thinking of something, and I'll answer yes or no only. Go.
13:02:56 <jlatour> Is it a person?
13:03:00 <johnd> Yes.
13:03:07 <jlatour> Is it alive?
13:03:10 <johnd> Yes.
13:03:17 <jlatour> Is it present?
13:03:19 <johnd> Yes.
13:03:30 <johnd> No
13:03:31 <johnd> No
13:03:33 <johnd> Sorry
13:03:36 * jlatour grins.
13:03:39 <johnd> Not present
13:03:44 <jlatour> Is it president?
13:04:03 <johnd> No (but you just taught me that there is a living president)
13:04:27 <jlatour> Is it a tree?
13:04:42 <johnd> I already said it was a person.
13:04:54 <johnd> Cyc knows that a person cannot also be a tree
13:05:13 <jlatour> Is it my grandfather?
13:05:28 <johnd> No (aha! a grandfather is a person)
13:05:39 <jlatour> Suppose my grandfather wasn't alive?
13:05:48 <johnd> Then you are a cheater
13:05:56 <johnd> There will be some percentage of those
13:06:06 <johnd> That's where statistics comes in?
13:06:20 <johnd> Also we track who is playing
13:06:27 <johnd> We lower our trust level of you
13:06:43 <jlatour> For example, when I ask if it's a tree
13:07:01 <johnd> Anyway, you also don't structure it as you against the computer, like you know you're trying to trick something
13:07:24 <johnd> And, we don't really start from scratch.
13:08:02 <johnd> We start with Famous Lakes or Famous Politicians
13:08:06 <jlatour> This sounds interesting.
13:08:21 <johnd> Then we give a clue, like he's from the United States
13:08:23 <jlatour> OK, shall we decide on a course of action?
13:08:34 <jlatour> A male lake from the United States, hrm...
13:08:39 <johnd> You answer "Richard Nixon"
13:08:57 <johnd> wrong, but you (and thousands of others) just taught me something
13:09:05 <jlatour> And the system will know Richard Nixon is a lake?
13:09:17 <johnd> statistically, I'll be able to retain some percentage of it as probably true.
13:09:52 <jlatour> OK. Course of action?
13:09:54 <johnd> I hope your joking. Those were two separate categories.
13:10:01 <johnd> Yes, course of action.
13:10:04 <johnd> ...
13:10:24 <jlatour> I assumed you took the first category :)
13:10:29 <jlatour> OK. Set up a Wiki?
13:10:42 <johnd> Ricki Lake
13:10:52 <johnd> Yes, I can set up a Wiki
13:11:19 <johnd> In fact, what I can do is set it up, give you access (email you a password) ...
13:11:21 <johnd> then...
13:11:30 <jlatour> Good. Then we should set up a basic structure, add problems, start writing up ideas on solutions
13:11:36 <johnd> Put the more detailed info I'm talking about here onto the wiki...
13:11:43 <jlatour> That'd be better.
13:11:58 <johnd> Then, post a note on sourceforge pointing to the wiki.
13:12:08 <johnd> Everyone can have read-only access to the Wiki.
13:12:47 <johnd> Anyone can request (and will be granted) write access.
13:13:02 <jlatour> Changes can be reversed easily, right?
13:13:09 <johnd> Yes, very easy
13:13:17 <jlatour> Just checking. OK.
13:13:34 <johnd> Give me until early next week (although I may get it done sooner).
13:14:15 <jlatour> OK, but I could try and set one up if you want?
13:14:51 <johnd> I've got it in the Zope server, so I think that would be a better way to start.
13:15:01 <jlatour> Fine
13:15:11 <johnd> I may get to it sooner. It should be very easy to get a blank one started.
13:15:21 <johnd> Gotta go.
13:15:23 <jlatour> OK
13:15:31 <jlatour> I've got to finish work anyway
13:15:34 <johnd> I'll e-mail you soon.
13:15:39 <johnd> So long.
13:15:39 <jlatour> OK. You know where to reach me.
13:15:42 <jlatour> Oh hold on a moment
13:15:42 <johnd> Go to bed.
13:15:46 <johnd> Yeah?
13:16:05 <jlatour> Do you want my ICQ/AOL/whatever so you can contact me when I don't have IRC open?
13:16:39 <johnd> Can you email it to me? I haven't got mine working, but I'll try again.
13:16:43 <jlatour> Which?
13:17:03 <johnd> Well, the easiest would be Yahoo, I think.
13:17:09 <jlatour> OK. jlatournl.
13:17:13 <johnd> AOL is the one I had trouble with.
13:17:14 <jlatour> Ehm, email, right
13:17:26 <johnd> Cool, see ya later.
13:17:29 --- quit: johnd ("Client Exiting")
13:26:03 --- quit: dash ("furrfu")
14:16:55 * dmiles returns after 3 days
14:20:08 --- join: CycLBot (cyc@12-225-207-235.client.attbi.com) joined #opencyc
14:20:11 <jlatour> Hello!
14:25:18 <dmiles> subl: (english-to-cycl "Jeff is a Person")
14:25:19 <CycLBot> org.opencyc.api.CycApiException: (S#21632 :MESSAGE "Operator ENGLISH-TO-CYCL is not defined in the API")
14:25:34 <dmiles> brb
14:39:02 --- join: Yepster (yepster@vetteaap.xs4all.nl) joined #opencyc
14:39:17 * dmiles returns
14:39:47 <Yepster> I saw somthing about english-to-cycl??
14:40:25 <jlatour> Strange, I could've sworn I saw the same thing. Looked interesting.
14:40:42 <Yepster> If so I'll eather make dutch-to-cycl or eat my shoe!
14:41:01 <dmiles> yes.. in the Cyc-101 manuual it was in the section called "Brain suergy to brainstroming"
14:41:43 <dmiles> i was reading about it while i was traveling the last couple days cant waiting until i got home to try it
14:42:16 <dmiles> it may not have been really in cyc evidently
14:42:20 <Yepster> Well it sounds much like a fairy tale
14:42:27 <dmiles> in the manual it gave examples though
14:42:30 <jlatour> They were working on it though
14:42:35 <jlatour> Are, even
14:43:12 <Yepster> I only found english to cycl exercises
14:43:13 <dmiles> very likely so, a while ago there was a project called HPKB that required some dirrected translation
14:43:56 <dmiles> can you find the section that say "Brain Surgery" ?
14:43:58 <jlatour> Eeps. This channel is logged.
14:44:07 <Yepster> Perhaps attempto controlled english -> cycl first
14:44:32 <dmiles> yes Tek is working on a ACE transaltior i bet
14:44:42 <dmiles> SUO-CE
14:44:58 <Yepster> glad there's google ;)
14:45:34 <dmiles> i have some dcg things that listen on a socketed server i am hoping to make a java API for so it can be used in CycLBot
14:46:10 <dmiles> i have to find the right strategy for enumeration opencyc NL things to pupolate the data
14:46:21 <dmiles> for the DCG translator
14:46:50 <Yepster> google: dcg: dogwood citty grotto home page
14:46:53 <dmiles> i think opencyc has in the Engluish*Mts all the support.. just not the translator to use it
14:46:57 <dmiles> hehe
14:47:05 <dmiles> try DGC Prolog
14:47:14 <dmiles> or DCG english Prolog
14:47:51 <dmiles> definitive clausse grammer.. its  a brute force system that takes work tokens and make a propostion
14:48:27 <dmiles> most of the time it is a NL -> SyntacticalParse->GenbralizedPase-> DeepStructure
14:48:54 <dmiles> it has to be done in stages (so perogrammers can keep sanity)
14:49:31 <dmiles> you should be able to look at source of many of the first stage thiungs
14:50:04 <dmiles> here is one example: http://www.cs.sunysb.edu/~warren/xsbbook/node10.html
14:50:20 <Yepster> O but I don't want a text reader, I am happy with CYC as it is right now ;)
14:52:01 <dmiles> yes having an extra layer of external software is a little weird but with existing software you can nearly generate appropiate CycL
14:52:57 <jlatour> The issue is that not everyone would be willing to learn CycL, this is a step towards making a public knowledge base etc.
14:52:59 <Yepster> Hmmmmm.... perhaps with computer generated text
14:53:28 <Yepster> Each human generated text still needs interpretation, and context
14:53:33 <dmiles> i tjhink ussing cyc to genrate english from CycL can help validate a dcg based parse
14:53:48 <dmiles> (after tyou wnet one dirrection first)_
14:54:55 <dmiles> Yepster agreed that parsing must be incredibly context aware in order to get to deep structure
14:55:34 <Yepster> what do you mean with deep structure?
14:55:51 <Yepster> like 'very exact or detailed' meaning?
14:55:56 <dmiles> the reasoning behind DCG they do not have to parse text.. they work just as well on post DCG literation of Text..
14:56:38 <Yepster> Well I am more in the corner of cognitive science when it comes to understanding a person.
14:56:38 <dmiles> yes.. that was what i refer to as deep structure.. commpterte knowledge w/o deletion 
14:56:52 <Yepster> not in the language and grammer dept.
14:57:18 <dmiles> yes NL to me has been the least interesting subject.. since the problems that arrise once we reallty can understand people are much more a challenge :)
14:57:33 <Yepster> Roger Schank and Ashwin Ram -> using explanation patterns to understand human behaviour and text
14:57:47 <dmiles> but i see taking a few days to play arround will be fun to try
14:58:26 <dmiles> yes i believe to in order to get to deep structure you need to figurte out which schank script you need to pupolate
14:58:53 <Yepster> yes!
14:59:46 <dmiles> i have a DCG example somewhere applying the SAM/ Scripts Plans Goals Understanding can be enumerated.. Cyc is the only tool i have seen that can generate them from scratch
15:00:13 <dmiles> for example cyc understands a waiter and a bill exists in contexts to ordering food at a restraunt
15:00:50 <dmiles> so i see its important for cyc to be there at every stage
15:00:52 <Yepster> yes cyc is very mature
15:01:23 <dmiles> first ussing cyc to allow KE based on language type for first pass sentence breaking
15:01:43 <Yepster> though one thing i would like is all subl api call reified as predicates
15:01:46 <dmiles> then trying to find pivitol verbs to work with predicates
15:02:26 <dmiles> yes.. that means at any point your subL code can participate in  the inner loop of iondfernce
15:02:30 <Yepster> (isa ?x Assertion)
15:03:17 <dmiles> yes i think one could do a middle WFF chack maybe 
15:03:40 <dmiles> i havent used that yet 
15:03:54 <dmiles> i am still new with the ussing of cyc
15:04:28 <dmiles> i have to run for an hour or so will people still be here?
15:04:44 <Yepster> 00:10 here, cya!
15:05:27 <dmiles> well i am very glad their are peopl;e that like Rodger Schank as much as i do
15:05:45 <dmiles> (thaT spell his name better to)
15:06:27 <dmiles> but definately by allowing cyc to enericat e#$Event possiblities it will help come up with templates to parse into
15:07:55 <dmiles> and with Cyc NLish Mt assertions it will help guide how to fill them in... 
15:07:57 <Yepster> And most important, what to do when there is an explanation anomaly
15:08:27 <dmiles> yes.. if you cant 'fit' the parse
15:08:29 <Yepster> Then common sense is needed to generate a new explanation that makes sense -> a bit creativy
15:09:29 <dmiles> sometimes by moving higher up into gernarlization you can cover what cant be completely understood
15:10:09 <dmiles> as in maybe you normally paser arround a particular predicate.. you my need to go a couple spec parrents above
15:10:41 <Yepster> Hmm cool. like 'what's wrong with him?' 'dunno, but it must be something with his wife'
15:11:29 <dmiles> yes.. so maybe you could enumerate HumanInformationTransferEvent somewhere..
15:12:13 <dmiles> ok.. have to run.. i be back in a hour.. and then back tommorow
15:12:19 <Yepster> cya
15:14:45 --- quit: Yepster ()
16:01:46 --- quit: jlatour (Read error: 104 (Connection reset by peer))
18:20:35 --- join: yottzumm ([s0rm9hkRz@12-232-76-192.client.attbi.com) joined #opencyc
18:22:38 --- quit: yottzumm (Client Quit)
21:42:52 --- join: banram (~Iggeres@OL248-229.fibertel.com.ar) joined #opencyc
21:54:09 --- part: banram left #opencyc
23:59:59 --- log: ended opencyc/02.05.29
