00:00:00 --- log: started opencyc/02.08.08
02:08:35 --- join: mea_culpa (mea_culpa@12-225-234-29.client.attbi.com) joined #opencyc
02:08:41 --- quit: mea_oly (Read error: 104 (Connection reset by peer))
04:58:48 --- quit: mea_culpa (Read error: 104 (Connection reset by peer))
04:59:07 --- join: mea_culpa (mea_culpa@12-225-234-29.client.attbi.com) joined #opencyc
05:02:19 --- quit: mea_culpa (Read error: 104 (Connection reset by peer))
05:02:36 --- join: mea_culpa (mea_culpa@12-225-234-29.client.attbi.com) joined #opencyc
05:05:37 --- quit: mea_culpa (Read error: 104 (Connection reset by peer))
05:05:54 --- join: mea_culpa (mea_culpa@12-225-234-29.client.attbi.com) joined #opencyc
07:56:43 --- join: croweabys (asdfadf@24-90-215-232.nyc.rr.com) joined #opencyc
07:56:57 <croweabys> hello?
07:57:24 <croweabys> cycLbot, hello
07:57:35 <croweabys> ...
07:58:26 <croweabys> is this thing up yet?
08:08:36 <croweabys> is anyone not idle?
08:12:38 <bruce> hey ... I don't know a lot, but I'm not terribly idle.
08:15:34 <croweabys> heh
08:15:36 <croweabys> ok then
08:15:41 <croweabys> i guess you will do
08:15:52 <croweabys> tell me, is there a bot working in here now?
08:18:23 <bruce> There's CycLBot ... he does some stuff I think.
08:18:34 <bruce> Cyclbot subl (+ 2 3)
08:18:48 <bruce> or not
08:19:10 <croweabys> like what
08:19:16 <croweabys> how to interact with him
08:19:39 <bruce> you can't interact in natural language .. you use SubL or CycL still
08:19:46 <croweabys> ok then
08:19:57 <croweabys> (#$actedInMovie #$RonaldReagan ?x)
08:20:00 <bruce> the bot belongs to dmiles .. who isn't that idle.
08:20:22 <croweabys> can you pester him about it?
08:20:23 <croweabys> =)
08:20:34 <dmiles> subl: (fi-ask '(#$actedInMovie #$RonaldReagan ?x) #$InferencePSC)
08:20:42 <croweabys> ...
08:20:46 <croweabys> i guess it doesnt like up
08:20:48 <croweabys> us*
08:21:06 <dmiles> some weird stuff is going in in API.. i have to finish some work and will check on it
08:21:17 <dmiles> mt #$EverthingPSC
08:21:19 <croweabys> alright, but normally
08:21:22 <dmiles> mt #$EverythingPSC
08:21:25 <croweabys> how would we interact with her
08:21:30 <dmiles> ask: (#$actedInMovie #$RonaldReagan ?x)
08:21:53 <dmiles> looks like some tabled action is happening 
08:22:05 * dmiles though is on phone right now
08:22:05 <croweabys> what databse is it running on?
08:22:11 <dmiles> opencyc6.-0
08:22:20 <dmiles> not ikb or full ;P
08:22:33 <croweabys> how much does it know?
08:23:12 <croweabys> ask: (#$actedInMovie #$MegRyan ?x) 
08:23:27 <huthut> ping
08:23:44 <huthut> CycLBot wants to be restarted
08:23:59 <croweabys> better do what the mighty bot says =P
08:24:13 <CycLBot> hello huthut
08:24:44 <croweabys> CycLBot hello
08:25:14 <croweabys> worked for him =)
08:26:14 <croweabys> so dmiles, whats the status?
08:26:16 <huthut> bsh: cyc.converseList("(cyc-query '(#$isa #$FictionalContext ?ARG2) #$EverythingPSC)")
08:26:36 <huthut> bsh: cyc.converseList("(cyc-query '(#$isa ?X #$Dog) #$EverythingPSC)")
08:26:53 <dmiles> yeah do that bsh things.. they should work
08:27:00 <croweabys> no response
08:27:14 <CycLBot> (((?ARG2 . PartiallyIntangible)) ((?ARG2 . Intangible)) ((?ARG2 . MathematicalOrComputationalThing)) ((?ARG2 . MathematicalThing)) ((?ARG2 . SetOrCollection)) ((?ARG2 . Collection)) ((?ARG2 . FixedOrderCollection)) ((?ARG2 . FirstOrderCollection)) ((?ARG2 . MicrotheoryType)) ((?ARG2 . CycLReifiableDenotationalTerm)) ((?ARG2 . CycLReifiedDenotationalTerm)) ((?ARG2 . HLReifiedDenotationalTerm)) ((?ARG2 . ELExpression)) ((?ARG2 . CycLClose
08:27:15 <CycLBot> (((?X . (GenericInstanceFn Dog))))
08:27:38 <huthut> bsh: List l = cyc.converseList("(cyc-query '(#$isa #$Area1042 ?x) #$EverythingPSC)"); l.add("-"); l.iterator();
08:27:39 <CycLBot> ((?X . Place))
08:27:39 <CycLBot> ((?X . GeographicalThing))
08:27:40 <CycLBot> ((?X . Surface-Physical))
08:27:41 <CycLBot> ((?X . Surface-Generic))
08:27:42 <CycLBot> ((?X . Surface-Open))
08:27:44 <CycLBot> ((?X . GeographicalRegion))
08:27:45 <CycLBot> ((?X . EmptyRegion-Generic))
08:27:46 <CycLBot> ((?X . Mixture))
08:27:47 <CycLBot> ((?X . SomethingExisting))
08:27:48 <CycLBot> ((?X . TemporalThing))
08:27:49 <CycLBot> ((?X . SpatialThing-Localized))
08:27:51 <CycLBot> ((?X . Thing))
08:27:53 <CycLBot> ((?X . Individual))
08:27:55 <CycLBot> ((?X . SpatialThing))
08:27:57 <CycLBot> ((?X . TwoOrHigherDimensionalThing))
08:27:59 <CycLBot> ((?X . PartiallyTangible))
08:28:01 <CycLBot> ((?X . FluidTangibleThing))
08:28:03 <CycLBot> ((?X . GaseousTangibleThing))
08:28:05 <CycLBot> ((?X . Air))
08:28:07 <CycLBot> ((?X . FreeSpaceContent))
08:28:09 <CycLBot> -
08:28:23 <croweabys> what does that response mean
08:28:49 <huthut> bsh: List l = cyc.converseList("(cyc-query '(#$isa #$Reagan ?X) #$EverythingPSC)"); l.add("-"); l.iterator();
08:28:50 <CycLBot> -
08:28:50 <dmiles> they are varibles thatr legally unify with the query
08:29:26 <huthut> bsh: List l = cyc.converseList("(cyc-query '(#$isa #$Reagan83687236478236 ?X) #$EverythingPSC)"); l.add("-"); l.iterator();
08:29:27 <CycLBot> -
08:29:39 <croweabys> what is that question
08:30:11 <dmiles> subl: (generate-phrase '(#$isa #$Reagan ?X))
08:30:12 <huthut> what is the Area1042
08:30:28 <dmiles> subl: (gen-phrase '(#$isa #$Reagan ?X))
08:30:35 <dmiles> hrrm 
08:30:51 * dmiles is on the phone so its hard to think right now
08:30:51 <huthut> there is a #$Reagan constant there, http://12.225.207.235:8036/cgi-bin/cyccgi/cg?cb-cf&8563
08:31:19 <dmiles> yeah our bot queries had created it
08:31:31 <dmiles> but there i no typing specs yet
08:31:54 <croweabys> does this one learn?
08:32:20 <huthut> nope
08:32:30 <huthut> you can assert knowledge though
08:32:37 <croweabys> what would bring about an interesting response?
08:32:40 <huthut> using certain progr languages
08:32:57 <huthut> depends on your interests :)
08:33:32 <croweabys> im just getting into AI
08:33:34 <croweabys> surprise me
08:34:05 * huthut is not able
08:34:17 <huthut> :)
08:34:52 <croweabys> i was playing with an ALICE bot yesterday, and i convinced someone i was a bot too
08:35:04 <huthut> teleport Brazil
08:35:17 <huthut> look
08:35:22 <huthut> ping
08:35:31 <huthut> laggggg
08:35:50 <CycLBot> hello huthut
08:35:57 <huthut> teleport #$Brazil
08:36:00 <huthut> look
08:36:05 <huthut> ping
08:36:05 <CycLBot> hello huthut
08:37:21 * huthut is away smoking
08:37:28 --- quit: croweabys ()
08:40:56 --- join: croweabys (asdfadf@24-90-215-232.nyc.rr.com) joined #opencyc
08:41:19 <croweabys> okay then
08:42:32 --- quit: CycLBot (Remote closed the connection)
08:42:46 <huthut> read the cyc docs and get surprised :)
08:42:54 <dmiles> trying a restart
08:43:34 <dmiles> still the look type commands arnt working
08:43:55 --- join: CycLBot ([A+kPUfuVU@12-225-207-235.client.attbi.com) joined #opencyc
08:44:07 <huthut> the version i downloaded a week ago has a very limited version of `look'
08:44:36 <huthut> but it shows some text, at least in the telnet interface.
08:45:28 <dmiles> yeah.. i have been trying to find a home for player commandih code
08:47:17 <croweabys> what does itdo
08:47:24 <huthut> bsh: List l = cyc.converseList("(cyc-query '(#$in-ContGeneric 
08:47:24 <huthut>  #$Reagan83687236478236 ?X) #$EverythingPSC)"); l.add("-"); l.iterator();
08:47:28 <CycLBot> Sourced file: <Inline eval of: List l = cyc.converseList("(cyc-query '(#$in-ContGeneric; > Token Parsing Error: Lexical error at line 1, column 58.  Encountered: <EOF> after : "\"(cyc-query \'(#$in-ContGeneric;": <at unknown location>
08:48:00 <huthut> bsh: List l = cyc.converseList("(cyc-query '(#$in-ContGeneric #$CycLBot ?X) #$EverythingPSC)"); l.add("-"); l.iterator();
08:48:01 <CycLBot> ((?X . Area1002))
08:48:02 <CycLBot> -
08:48:08 <huthut> teleport Brazil
08:48:14 <huthut> bsh: List l = cyc.converseList("(cyc-query '(#$in-ContGeneric #$CycLBot ?X) #$EverythingPSC)"); l.add("-"); l.iterator();
08:48:15 <CycLBot> ((?X . Area1002))
08:48:16 <CycLBot> -
08:48:24 <huthut> teleport #$Brazil
08:48:29 <huthut> bsh: List l = cyc.converseList("(cyc-query '(#$in-ContGeneric #$CycLBot ?X) #$EverythingPSC)"); l.add("-"); l.iterator();
08:48:38 <CycLBot> ((?X . Area1002))
08:48:39 <CycLBot> -
08:48:39 <huthut> ping
08:48:41 <CycLBot> hello huthut
08:50:27 <croweabys> umm..
08:50:28 <croweabys> ping
08:50:31 <CycLBot> hello croweabys
08:50:55 <huthut> well my local version is still able to understand `teleport Brazil' :)
08:50:59 <croweabys> ^_^
08:51:15 <croweabys> what does that do?
08:51:41 <huthut> should demonstrate some mud-like behavior
08:51:54 --- join: hobot (~hobot@antich.novosoft.ru) joined #opencyc
08:52:02 <croweabys> did it?
08:52:21 <huthut> teleport Brazil
08:52:21 <hobot> you are now in Brazil
08:52:23 <hobot> ok
08:52:28 <huthut> like this :)
08:52:34 <huthut> look
08:52:35 <hobot> <br>
08:52:35 <hobot> ok
08:53:29 <huthut> this is an older version of CycLBot... with almost the same implementation
08:53:58 --- part: hobot left #opencyc
08:55:25 <croweabys> oh?
08:57:44 <croweabys> do you run an actual one?
08:57:52 <croweabys> one of those web datases?
08:57:57 <croweabys> databases
08:58:37 <huthut> both CycLBot and hobot use their local cyc instances
08:59:06 <croweabys> right
08:59:12 <croweabys> but do you run a real one?
08:59:36 <huthut> what is the difference between `real' and `not real'?
09:00:40 <huthut> yes, a prefecly real one :)
09:00:44 <huthut> perfectly
09:00:46 <croweabys> i mean the one u download and run on linux
09:00:53 <huthut> yes
09:00:53 <croweabys> and acces thru the browser
09:00:54 <croweabys> real
09:01:07 <huthut> it can also be accessed thru its api sockets
09:01:37 <huthut> yes, downloaded linux version.
09:03:28 <huthut> its installation is quite quick and painless.
09:07:07 <croweabys> it understnads englsih?
09:07:39 <huthut> its basic nl parsing is currently disabled
09:08:40 <croweabys> can you give me an example of a response? 
09:08:41 <huthut> i dont know what nl support does the full cyc have (not the open one)
09:08:54 <huthut> 1 sec, checking logs
09:11:16 <huthut> check http://tunes.org/~coreyr/read.php?chan=opencyc&date=02.06.03 for example, seek "e2c" there
09:11:39 <croweabys> ok
09:13:23 <dmiles> i have been running tests on the new version this morning .. its going to be so much better
09:13:27 <croweabys> i dont understand the technical responses
09:14:00 <dmiles> the goal is to get it to form CycL from english
09:14:32 <croweabys> what do questions do
09:14:32 * huthut is seeking for a random example of nl generation
09:19:45 <huthut> http://12.225.207.235:8036/cgi-bin/cyccgi/cg?cb-assertion-with-show-english&24352 - "Brazil is an independent country.
09:23:07 <huthut> http://12.225.207.235:8036/cgi-bin/cyccgi/cg?cb-assertion-with-show-english&25626 - "An emirate is a type of political geographic region."
09:26:28 <croweabys> thanks im checking it out
09:28:01 <croweabys> whats the link to the homepage?
09:28:24 <huthut> which homepage?
09:28:29 <croweabys> for that site
09:28:35 <croweabys> running cyc
09:29:00 <croweabys> ah ok got it
09:31:26 <croweabys> i cant figure it out...
09:31:48 <dmiles> which?
09:32:03 <dmiles> there is no official homepage
09:32:15 <croweabys> the one running it =)
09:32:19 <dmiles> http://www.opencyc.org though works
09:32:21 <croweabys> http://12.225.207.235:8036/cgi-bin/cyccgi/cg?cb-cf&1 i think it was
09:32:29 <dmiles> http://12.225.207.235:8036/cgi-bin/cyccgi/cg?cb-start
09:33:20 <dmiles> would be considered a hompage.. i understand probly whats up is that its hard to get back to where you can type in a name
09:33:36 <dmiles> it uses frame names that can get confused
09:35:30 <croweabys> hmm ill get it eventually
09:36:22 <huthut> cb-start page is a constant name finder.
09:38:21 <croweabys> ok, in the ask page, what format do i ask in?
09:39:01 <huthut> heheh
09:39:08 <croweabys> bear with me
09:39:29 <huthut> you can type any term name in the field with the [Complete] button
09:39:51 <huthut> any constant name, e.g. `thing' or `cyc'
09:40:22 <huthut> or `ronaldreagan'
09:43:24 <croweabys> ok then
09:43:44 <croweabys> is this ronaldreagan thing an inside joke?
09:45:05 <dmiles> its just part of the cyc 101 tutorial and given as an example alot to explain cyc
09:45:16 <croweabys> i see
09:45:49 <croweabys> im still not sure of how to work it.. i get the database, an i have many strings.. what is it supposed to help me with?
09:46:01 <croweabys> can you give an example of a good usage of this DB?
09:46:29 <dmiles> its just a database presently.. but people think it might be a good blackboard once they can add modules to it
09:46:44 <croweabys> whats the estimated projection?
09:46:55 <dmiles> before modules can be added?
09:47:06 <dmiles> maybe a month or two
09:47:13 <croweabys> wow
09:47:15 <croweabys> that is soon
09:47:22 <croweabys> sooner than i expected
09:47:23 <dmiles> but it can be accesses currently from foriegn code like java
09:47:31 <dmiles> (presently)
09:47:35 <huthut> but you can write many things without amy modules
09:47:39 <croweabys> like what
09:47:40 <huthut> yes
09:47:57 <huthut> like anything that requires first order logic inference
09:48:17 <croweabys> hmm you guys really know your stuff
09:49:07 * huthut departs to a stuff.
09:49:51 <huthut> `for' even.
09:51:09 --- join: Seth (~seth@12-230-243-179.client.attbi.com) joined #opencyc
10:44:52 --- join: zmc (~zmc@200.50.27.127) joined #opencyc
11:13:27 * zmc yawns
11:16:55 --- part: zmc left #opencyc
11:18:27 --- quit: devEiant ("switching workstations.")
12:37:14 <Seth> does anyone know of a relatively shot RDF file of a translation of some cycL ?  I'd like to read it into a sailor agent and see what it looks like.
12:37:30 <Seth> s/shot/short
12:40:00 <reed_> I only have long ones at www.daml.org
12:41:39 <Seth> what's the url or the RDF ... ill see if i barf on it
12:44:02 <Seth> is it Ontology http://opencyc.sourceforge.net/daml/cyc.daml
12:44:49 <dmiles> are you looking specifically for daml?
12:45:27 <Seth> no i just want RDF of CycL
12:45:37 <Seth> doesn't need to be daml
12:46:01 <dmiles> i think i seen some CycML up.. but there is not a decription up
12:46:08 <Seth> i want to see how a (sailor agent) renders cycL
12:46:41 <huthut> dmiles, do opencyc/logicmoo have the rdf exporter?
12:46:47 <huthut> cycl2rdf?
12:47:22 <dmiles> :) well the infrastructure is completely there i just dont have a target spec
12:47:59 <dmiles> but can serve up anything to look like anything that is a naive translitertion
12:48:46 <Seth> i just need a url to a RDF file that is a translaton of say some microtheory
12:48:54 <dmiles> but as far as what it should look like.. i dont have guids and and semantic equivalancies set up
12:49:23 <dmiles> seth: ok one sec.. JohnD ha posted an example
12:49:44 <Seth> if you translate it to RDF, well that is sufficient ... are you saying you dont have a  Cyc -> RDF mapping ?
12:50:15 <dmiles> right i'd just be producing arbitray XML
12:53:28 <Seth> hmmmm ...
12:54:10 <dmiles> http://www.cyc.com/xslt/
12:54:26 <dmiles> all kinds of fun things there
12:54:46 <huthut> :)
12:56:55 <Seth> is that all XML ... i cant read it unless it is in the RDF syntax
12:57:15 <dmiles> some are just named .xml
12:58:44 <Seth> hmm .. ill go look for some RDF
12:58:45 <dmiles> ok :)  i will see if there is a working export Mt
12:59:33 <dmiles> i know in the java packages.. there is some daml stuff
13:00:28 <dmiles> org.opencyc.xml.ExportDaml
13:00:57 <dmiles> looks like bit of work.. though.. you may find something else
13:01:55 <Seth> what's the url for org.opencyc.xml.ExportDaml ?
13:02:50 <dmiles> no url.. its a java util you run at command line
13:03:04 <dmiles> really though.. you might want to be consider CycMl as what you want to read
13:04:41 <Seth> well what's the url to CycML  ?
13:04:47 <dmiles> http://www.cyc.com/xslt/test2.xml
13:04:51 <dmiles> is a good example
13:05:00 <huthut> url for that java is -- http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/opencyc/org/opencyc/xml/ExportDaml.java?rev=1.16&content-type=text/vnd.viewcvs-markup
13:05:06 <huthut> :)
13:06:03 <Seth> are you saying that cyc is better rendered in just xml, rather than RDF ?
13:06:08 <dmiles> i bet huthut could figure out the correct way to export daml quicker then me
13:06:44 <dmiles> well i think there is dataloss in daml
13:07:43 <dmiles> as in it's not as a complete exposure of what cyc holds then CycML
13:07:54 <huthut> well i am checking how to make a jsp exporting some very little subset of cyckb
13:08:10 <huthut> so that it could be used by something like sailor
13:08:18 <dmiles> yeah.. that would be nice to set up a gGET system
13:08:27 <huthut> gget?
13:08:31 <dmiles> err GET
13:08:47 <dmiles> so that you could pass to a jsp page the intended Mt or constant
13:08:57 <huthut> yup
13:09:01 <Seth> ok, so your saying that CycL translates to CycML without data loss, but not to daml ?
13:09:29 <dmiles> seth: i may be wrong about that.. i am just not sure how implies .. if it really maps
13:10:10 <dmiles> as in indivigual assertions
13:10:21 <dmiles> collections and enties are just fine
13:10:51 <Seth> ok, well then i need a python parser for CycML
13:10:55 <dmiles> i think what you get are ontolgies and things.. not the rules that use them
13:10:56 <huthut> seth: will sailor eat .daml?
13:11:02 <Seth> yep
13:11:40 <huthut> okay, then i am almost already writing.
13:12:08 <Seth> might be still some bugs in the parser for daml
13:20:12 <huthut> exportdaml.java code says that cycl2daml is very lossy:
13:20:19 <huthut> "Do not export (for now) Cyc unary predicates, as they cannot be easily expressed in DAML.
13:20:28 <huthut> Do not export (for now) Cyc functions, as they cannot be expressed in DAML.
13:20:42 <huthut> Do not export Cyc (for now) arity 3+ predicates, as they cannot be easily expressed in DAML."
13:21:24 <dmiles> yup.. thats the stuff ;P
13:21:50 <dmiles> if it all could.. i bet cycorp would not feel a need to have created CycML
13:22:42 <dmiles> it would have been beautifull to somehow have reused the daml system for cyc internetworking
13:23:52 <dmiles> but long before opencyc .. people could quickly guessed its a little too restricted
13:24:13 <huthut> "a little too"
13:24:32 <huthut> :)
13:24:44 <dmiles> thats a way of dryly saying "_very_"
13:24:59 <huthut> i understood :)
13:25:04 <dmiles> ;P
13:40:04 --- join: Graham (~Demi@207.207.8.145) joined #opencyc
13:40:21 --- mode: ChanServ set +o Graham
14:07:57 <Seth> so we just got to write a python sax parser for cycml
14:08:47 <huthut> i think i almost done with exportdaml.jsp
14:29:11 * dmiles will be happy to run it from his machine as well
14:31:07 --- quit: Seth ()
14:31:31 <dmiles> SethR will be back
14:43:10 --- join: Seth (~seth@12-230-243-179.client.attbi.com) joined #opencyc
15:17:45 --- join: Vutral_ (~ss@pD9042E37.dip.t-dialin.net) joined #opencyc
16:06:30 --- join: sbp (~sean@63.149.73.20) joined #opencyc
16:06:56 <Seth> how are we supposed to form a URI from a GUID ?
16:07:12 <Seth> something like cyc:bd58a624-9c29-11b1-9dad-c379636f7270   ???
16:07:39 <huthut> something like guid:bd58a624-9c29-11b1-9dad-c379636f7270  i guess :)
16:08:00 <huthut> its universal
16:08:09 <Seth> well is there an official ruling on this from Cyc ?
16:08:16 <huthut> or supposed to be, at least for humankind
16:08:32 <huthut> official ruling, i dunno.
16:08:42 <Seth> to make a uri we need a registered schema
16:08:44 <sbp> http://www.globecom.net/ietf/draft/draft-kindel-uuid-uri-00.html
16:09:27 <sbp> unregistered
16:10:08 <Seth> well i think its up to CycCorp to designate what the URI should be ... useless for us to just throw somethng out there .. right?
16:10:59 <Seth> i asked about this some time ago .. dont know if they ever finally made up there mind
16:13:47 <huthut> right
16:14:40 <huthut> for now, http urls to existing cyc/opencyc instances are enough 
16:14:55 <huthut> ...and are almost working :)
16:15:44 <huthut> they will be able to find by guid
16:23:55 --- part: sbp left #opencyc
16:27:21 --- quit: Seth (Read error: 104 (Connection reset by peer))
16:42:38 --- join: graylensman (~ray@fl-wbu2c6-669.pbc.adelphia.net) joined #opencyc
17:21:48 --- join: Seth (~seth@12-230-243-179.client.attbi.com) joined #opencyc
17:32:12 --- nick: Vutral_ -> Vutral
17:32:38 --- join: Vutral_ (~ss@pD9043266.dip.t-dialin.net) joined #opencyc
17:34:47 --- quit: Seth ()
17:50:00 --- quit: Vutral (Read error: 110 (Connection timed out))
17:53:04 --- join: Cobra_ (~cobra@dsl-64-129-232-145.telocity.com) joined #opencyc
18:00:04 <huthut> yeah!  my java launch line exceeded 1024 bytes
18:05:46 <siege> how did you manage that?
18:16:32 --- quit: Vutral_ (Read error: 110 (Connection timed out))
18:17:34 --- quit: sandos (Read error: 110 (Connection timed out))
21:53:27 --- log: started opencyc/02.08.08
21:53:27 --- join: clog (nef@bespin.org) joined #opencyc
21:53:27 --- topic: 'Welcome to #opencyc, The IRC channel for the OpenCyc project. ***Release 0.6 is now available from http://sourceforge.net/projects/opencyc/'
21:53:27 --- topic: set by people on [Tue Jul 16 08:22:30 2002]
21:53:27 --- names: list (clog Seth devEiant @Graham CycLBot croweabys mea_culpa @ChanServ Cobra huthut siege dmiles bruce reed_)
21:53:46 <Seth> hi clog
22:05:18 <Seth> <assertion-id>145317</assertion-id> 
22:05:29 <Seth> how do i find the assertion?
22:07:48 <huthut> shuld prolly be like http://12.225.207.235:8036/cgi-bin/cyccgi/cg?cb-af&83711  , but your exact assertion is absent in dmiles' db
22:08:39 <croweabys> morning 
22:08:49 <croweabys> ping
22:08:50 <CycLBot> hello croweabys
22:09:02 <croweabys> thank you CycLBot =)
22:09:43 --- quit: huthut (Read error: 104 (Connection reset by peer))
22:10:06 --- join: huthut (~trumpet@fw224.novosoft.ru) joined #opencyc
22:10:12 <Seth> hi croweabys
22:10:26 <croweabys> heya
22:10:54 <croweabys> hows life
22:11:01 <Seth> huthut, im just trying to correlate things in dmiles file with assertions that i can find in the browser, to see if im getting them right
22:11:35 <croweabys> seth
22:11:45 <croweabys> how do you work it.. i wasnt able to understand
22:11:49 <Seth> croweabys, you know anything about cycml ?
22:12:06 <croweabys> i know what it stands for and what it does but thats the extent
22:12:33 <croweabys> i just started learning all this yesterday
22:13:04 <croweabys> callme crowe
22:13:04 <Seth> well your probably ahead of me, i just started this afternoon
22:13:19 <croweabys> im not too swift on the uptake so u should have no problem
22:13:31 <croweabys> well beating me that is
22:13:36 <croweabys> =D
22:13:44 <croweabys> but when i feel lonely
22:13:46 <croweabys> i say:
22:13:48 <croweabys> ping
22:13:49 <CycLBot> hello croweabys
22:13:51 <croweabys> ^_^
22:14:13 <Seth> pong
22:29:38 <huthut> Well i think i am stopping daml/rdf exporter activity, since actually have rather little interest to semantic webs.  And I will not achieve any satisfactory results without good understanding of rdf.
22:30:05 <huthut> more like dead end for me :)
22:30:23 <croweabys> noo keep at it
22:30:29 <croweabys> i guarantee it will be worth it
22:30:36 <croweabys> =D
22:39:49 * dmiles returns
22:40:06 <dmiles> huthut: is it that the export implimentation you saw is too incomplete?
22:40:16 <huthut> yes
22:40:17 <bruce> dmiles!
22:40:22 <dmiles> hi bruce
22:40:24 <huthut> it works ok for the entire db
22:40:35 <dmiles> heck better then nothing ;P
22:40:42 * Seth waves to dmiles
22:40:47 <bruce> dmiles: read my post to MD and the followup to a followup that I posted tonight? (the follwoup hasn't gone out yet, so obviously you haven't:)
22:40:50 <dmiles> maybe now that you have a jsp infralike structure
22:41:15 <huthut> ExportDaml.java works ok for the entire db and for large constant collections, but it doesnt work when we need a small rdf
22:41:44 <dmiles> makes sense kidof..part of it is no one really decided or knew what cyc is supposed to dish up
22:42:04 <huthut> my jsp interface works ok for big collections either (exactly copying the bahvior of exportdaml)
22:42:18 <Seth> dmiles, i working on reading your cycml files directly into sailor instead of wanting them converted to rdf ... it will be faster and cleaner .. dont you think?
22:42:23 <huthut> but when you want something small, you get practical;ly zero
22:42:39 <dmiles> Seth .. those exports where by cyccorp
22:42:57 <dmiles> i just noticed johnd mentioned them in channel a while back
22:43:13 <huthut> when speaking about sailor, it notices many errors and inconsistencies in the rdf
22:43:13 <Seth> is that cycml schema documented somewhere
22:43:18 <dmiles> so its like easch object type neds some specific rdf exprot?
22:43:29 <huthut> in the large rdf files returned by ajsp
22:44:03 <dmiles> Seth: basicly it just transliteration of basic CycL datastructiure
22:44:39 <dmiles> so there is no docs that i know of yet
22:44:58 <Seth> is is standard and easily produced by the opencyc tools?
22:45:54 <huthut> also, daml filters out 99% of assertions
22:46:11 <huthut> i guess
22:46:54 <huthut> at least very significant part of them
22:47:31 <dmiles> ypu ;(
22:47:34 <dmiles> yup
22:48:15 <Seth> huthut, i think pushing cyc through RDF is going to be a loosing proposition
22:48:45 <Seth> me thinks we should go direct from cycml to a sailor agent
22:48:49 <huthut> easch object type neds some specific rdf exprot, i dont know since i dont know rdf...
22:49:22 <huthut> yes, lossless is better.
22:50:08 <huthut> but i am not sure where is the difference between expected sailor and existing cyc-cgi :)
22:50:31 <huthut> i just dont know sailor goals.
22:50:36 <Seth> the assumption is that if i map it to mentography (and the mapping from cycml to mentography looks fairly straight forward) then i should be able to write it out in RDF with no loss of info .. well at least that is the theory
22:51:40 <huthut> does moentogarphy allow for 0-ary, unary, ternary relations etc?
22:52:00 <Seth> sailor is a general purpose personal information manager agent
22:52:04 <huthut> what about any FOL term/fomula?
22:52:17 <huthut> ok.
22:53:28 <huthut> though... diagrams are endless, so it allows everything
22:53:40 <Seth> mentography is just arrows, binary relations .. 0 ary poses a bit of a problem, but they could always be converted to binary relations ... higher arity relations just become nodes so they are no problem
22:54:35 <dmiles> Right.. the cycml to mentogrpahic to RDF is simpler since there is no loss to begin with
22:54:50 <huthut> also about mentography -- opencyc has either export or import to/from uml.
22:55:09 <dmiles> yes that is probly more lossless
22:55:23 <dmiles> but i wonder if its more fro reading pre uml
22:55:33 <huthut> well if mentogrpahy is all about binary predicates, then mentogrpahic 1-1 RDF
22:55:38 <dmiles> uml -> ccl -> uml
22:55:41 <huthut> interchangeable
22:55:53 <huthut> then mentogrpahic 1-1 RDF interchangeable
22:56:02 <Seth> yep
22:56:05 <dmiles> err umnl->cycl->uml all good.. cycL -> uml .. i am not sure about
22:56:43 <huthut> cyc2uml lossless??????  uml is about very specific subject domains.
22:57:21 <huthut> uml is all about OOD and business process design
22:57:44 <huthut> you cannot insert a 'foreach' or `exists' there.
22:57:52 <dmiles> uml->cycl->uml lossless.. cycl->uml .. probly loss
22:58:43 <Seth> i dont see where any particular subject domain will present any particualr problems for mentography
22:59:02 <huthut> for mg, no
22:59:05 <huthut> for uml, yes
22:59:17 <Seth> specifically ?
22:59:27 <huthut> uml is very restricted
22:59:37 <dmiles> since the cycl can be a 1-to-1 holder for anything (i think you can even go from gif->cycl->gif lossless ;P)
22:59:38 <huthut> to a subject domain data
23:00:18 <Seth> so ... bear in mind, huthut, that i have a long standing challenge to anyone to present me a language that i cannot translate into mentography and back out with no loss of info.
23:00:44 <huthut> UML is a OOD and business process design description/design/illustration tool.  And cyc can be used to handle it.  This is the entire utility of uml<->cyc.
23:00:48 <Seth> so if you thing you have a contra example, then i want to see it specifically
23:01:08 <dmiles> Seth where you to perpretatrator of the SUO argument about mapping ternary predicates as binary predicates?
23:02:03 <dmiles> i think someone was exxplaining how we could use arity >2 predicates in an arity 2 context.. and put them back togehter
23:02:05 <Seth> well i calimed that there is no problem in mapping a ternary predicate to a node
23:02:23 <huthut> it is obvious that general diagrams will resist any challenge.  it is also obvious that general binary predicates plus individuals will resist any challenge.  Just like 0 and 1 will resist any challenge.
23:02:25 <huthut> :)
23:02:26 <Seth> i got a mentograph of that one
23:03:19 <Seth> so does that mean you are agreeing with me, huthut
23:03:45 <huthut> lisp is based on pairs.  That is, on a single binary predicate `pair/2'.  And this is Turing complete.
23:04:14 <huthut> i am agreeing and even more -- i spell that no counterexamples can ever exist.
23:04:37 <Seth> kewl
23:04:52 <Seth> incidentally here is my diagram of arity http://robustai.net/mentography/arity.gif
23:04:53 <huthut> you can even encode and decode GIFs using lisp.
23:05:28 <huthut> "...etc to higher arity" is very important object :)
23:05:34 <huthut> or is is a relation?
23:05:36 <huthut> :))
23:05:43 <huthut> bad jokes :)
23:06:19 <Seth> its like matematic induction
23:07:18 <Seth> prove case a, prove that a => a(1) , proves all a
23:07:18 <CycLBot> org.opencyc.api.CycApiException: (S#21632 :MESSAGE "Expected a cons, got NULL")
23:07:35 <huthut> ic
23:08:02 <Seth> well the bot didnt like my forumla, but you get the idea
23:08:39 <Seth> anyway back to cycml, dmiles how do i get a complete list of the tags ?
23:09:03 <dmiles> of CycML?
23:09:21 <dmiles> its sorta adhoc as cyccorp goes
23:09:51 * huthut is away sleeping.
23:09:57 <dmiles> there are situations where dispensation needs to be stated for like command mode CycML
23:10:06 <dmiles> <assertion?
23:10:15 <dmiles> maybe <query>
23:10:33 <dmiles> its all up to them as they go ;P
23:11:04 <dmiles> not that this a bad thing.. it will become static as soon as they have a release probly
23:11:43 <Seth> i noticed a schema off of the home page but it didnt look anything like the file you showed me
23:12:28 <Seth> http://opencyc.sourceforge.net/cycml.xsd
23:13:49 <Seth> but your file 
23:14:08 <Seth> http://www.cyc.com/xslt/test2.xml
23:14:23 <Seth> shows <sentence> and <constant>
23:15:21 <Seth> but i guess those end up as CycLSentence-sequence and CycLConstant
23:15:32 <Seth> or am i reading the schema wrong
23:15:54 <dmiles> sentence starts with #$and
23:16:09 <dmiles> you mean its not even valid xml?
23:16:35 <Seth> i mean i dont understand how test2.xml matches that schema
23:17:02 <Seth> but its fine as just vanella xml
23:18:04 <Seth> but i might be off the wall .. this is the first xml project that ive done
23:19:29 <dmiles> well the xml converts to a CycL dirrectly
23:19:51 <dmiles> give me a complete example
23:20:23 <Seth> wooh, im not saying that it dont.
23:21:04 <Seth> im just trying to figure out the element and attribute names to program for.
23:21:27 <dmiles> senbetence means that it starts the S-Expression
23:21:49 <dmiles> <sentence> == (
23:21:57 <dmiles> </sentence> == )
23:22:14 <Seth> where is <sentence> in the schema document ?
23:22:15 <dmiles> <contant>  means its a real #$Constant
23:22:32 <dmiles> i dont think one exists yet
23:23:09 <Seth> oh so that document off their home page is talking about some other kind of export, not CycMl ?
23:23:44 <dmiles> which document?
23:23:50 <Seth> 2001/06/07 - The CycML schema document can be found here.
23:23:59 <dmiles> oh i dont think its maintained
23:24:01 <Seth> http://opencyc.sourceforge.net/cycml.xsd
23:24:22 <Seth> so that has been changed ?
23:25:22 <dmiles> yes
23:25:51 <dmiles> part of it is.. that yuou could do cycl in 3 differnt ways
23:25:56 <dmiles> err cycml
23:26:12 <dmiles> one is tagging each porpositional holder
23:26:24 <dmiles> <implies>...</implies>
23:27:12 <dmiles> <implies><isa><var name=X><constant>Dog</constant></isa><isa><var name=X><constant>Mammal</constant></isa></implies>
23:27:48 <dmiles> which is pretty rotten.. but the way that intial xsb is written you could do that
23:28:00 <dmiles> err xsd
23:28:20 <dmiles> the preferered form is...
23:29:45 <dmiles> <sentence><constant>implies</constant><sentence><constant>isa</constant><var name=X><constant>Dog</constant></senetence><sentence><constant>isa</constant><var name=X><constant>Mammel</constant></senetence></senetence>
23:30:22 <Seth> hmmm ... the one you gave me test.xml tags like this [[
23:30:23 <Seth> - <sentence>
23:30:23 <Seth> - <predicate>
23:30:23 <Seth> - <constant>
23:30:23 <Seth>   <guid>bd588104-9c29-11b1-9dad-c379636f7270</guid> 
23:30:23 <Seth>   <name>isa</name> 
23:30:25 <Seth>   </constant>
23:30:27 <Seth>   </predicate>
23:30:29 <Seth>   <variable>?ANIM</variable> 
23:30:31 <Seth> - <constant>
23:30:31 <dmiles> yeah.. 
23:30:33 <Seth>   <guid>bd590884-9c29-11b1-9dad-c379636f7270</guid> 
23:30:35 <Seth>   <name>MarineOrganism</name> 
23:30:37 <Seth>   </constant>
23:30:39 <Seth>   </sentence>
23:30:41 <Seth> ]]
23:30:47 <Seth> so if i program for that i will be ok ?
23:30:55 <dmiles> that would be best
23:31:05 <dmiles> its the most explicit form
23:31:34 <Seth> so its just an option which form the cyc api outputs?
23:31:38 <dmiles> they will end up going for heavy explition
23:31:56 <dmiles> the cyc api isnt capable yet that i know of
23:32:13 <dmiles> it uses just S-Expresions
23:32:18 <Seth> oh, so that was your format?
23:32:37 <dmiles> that was somethingh JohnD or someone hand wrote
23:32:55 <dmiles> well at least they do have an output internally
23:33:01 <dmiles> (implemented in lisp)
23:33:23 <Seth> so if i ask for a given microtheory in that format, i would have no problem in getting it?
23:33:34 <dmiles> my things.. that i have worked on.. go into the cyc api.. reads the terms.. converts to prolog blackboard
23:33:50 <dmiles> then i can unroll that backboard anyway i want
23:34:14 <Seth> hmmmm ...
23:34:45 <Seth> well all i want is to get the data in the most efficient format for which i have a python parser
23:35:05 <Seth> i have a python parser for xml, so that's why i chose it
23:35:34 <Seth> but if there is a parser for a more efficient format, and more direct to your moo, i would opt for that
23:36:29 <dmiles> well i would say the CycML format is good format..
23:36:56 <dmiles> it' just one of those things a coder must reverse deduce
23:37:59 <dmiles> so my understanding of CycML comes only from trying to figure out what people were thinking when they made that export
23:38:13 <dmiles> (not from some spec)
23:38:25 <dmiles> so i am probly gpoing to leave some important things out
23:38:56 <Seth> im just concerned that i can get out data in that format .. if that will be true, then i dont really care 
23:39:09 <dmiles> the most important thing about it is...that every part of the cycl datastructure (internal) is serialized
23:39:45 <Seth> in CycL, right?
23:40:08 <dmiles> yes.. CycML is the serialzation of the lisp ovbjects
23:40:16 <dmiles> (or you could say CycL)
23:40:58 <dmiles> so they export everything it would take to rebuild the Cyc DB
23:41:01 <Seth> is thee a directory somewhere of all the microtheories in cycl or in cycml that i can go grab ?
23:41:29 <dmiles> the goal is KB sharing beyond creating meaninfull meta-data
23:42:00 <dmiles> Steve may be able to answer if they have something like that
23:42:28 <Seth> well if i install opencyc myself, can i create such a directory myself ?
23:43:07 <dmiles> yes.. from anything that can call over the socket port can retrieve antything out
23:43:35 <dmiles> you can take that output and make it into any form that works..
23:44:08 <Seth> and "that output" is in what format ?
23:44:46 <dmiles> in S-Ecpresion like..
23:45:06 <dmiles> (isa ?ANIM >MarineOrganism)
23:45:12 <dmiles> (isa ?ANIM MarineOrganism)
23:45:32 <dmiles> from the FASL reader port its more explicit
23:45:54 <dmiles> so at prot 3614 it gives the extrra info in a tokezied format
23:46:23 <dmiles> preferably this is the most lossless format.. object get serialized fully
23:46:44 <Seth> what would that look like?
23:47:40 <dmiles> well a binary format of cycml actually
23:48:03 <dmiles> as in <integer>2424234
23:48:21 <dmiles> where interger is not a tag but a byte token
23:48:39 <dmiles> that tells us how to intepret the next part of the stream
23:49:00 <dmiles> so each interanl datatype of cyc has a token
23:49:16 <Seth> hmmm ... i wonder if anyone has interfaced opencyc with python already ... why should i reinvent 
23:49:19 <dmiles> you look at the byte token to decide how far into the stream to read
23:49:28 <dmiles> well bruce is doing that
23:49:38 <dmiles> writting a C library for python
23:50:11 <Seth> i have to think.... maybe i should just wait for that
23:50:14 <dmiles> that goes to the CFASL port and creates the objects into python objects
23:50:28 <dmiles> well bruce is pretty fast.. maybe sometime end ogf next week?
23:50:43 <dmiles> he is not contrained by release points of opencyc
23:51:21 <Seth> kewl ... ill check back next week then ... im beat, gotta go to sleep ... thanks for the help :)
23:51:22 <dmiles> i suppose that python output would be the most usefull format
23:51:36 <dmiles> cool.. take care
23:51:44 --- quit: Seth ()
23:59:59 --- log: ended opencyc/02.08.08
