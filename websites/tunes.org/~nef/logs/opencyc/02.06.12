00:00:00 --- log: started opencyc/02.06.12
00:05:21 --- join: dmilez (OULWC@dialup-65.58.221.128.Dial1.Portland1.Level3.net) joined #opencyc
00:17:28 --- quit: dmiles (Read error: 110 (Connection timed out))
02:05:36 --- join: cehbab (~cehbab@c17217.eburwd1.vic.optusnet.com.au) joined #opencyc
02:05:36 --- quit: stevereed_home (Read error: 104 (Connection reset by peer))
02:43:12 --- join: Yepster (~yepster@cust-217-117-225-12.utelisys.net) joined #opencyc
02:43:19 --- part: Yepster left #opencyc
02:43:33 --- join: Yepster (~yepster@cust-217-117-225-12.utelisys.net) joined #opencyc
02:48:13 <Yepster> dmiles you there?
02:49:35 <Yepster> http://citeseer.nj.nec.com/ram91theory.html
02:50:29 <Yepster> uses theory from schank's explanation patterns
02:51:26 <Yepster> wondering though if xp theory can be used in a symbolic language
03:01:05 <Yepster> hmm this was actually a very stupid question
03:01:42 <Yepster> because the appendix of 'explanation patterns' contains the description of swale,
03:01:56 <Yepster> a program written in lisp
03:05:44 <cehbab> Yepster: is that url your project ?
03:08:23 <Yepster> I wish
03:09:10 <Yepster> In my graduation project I want to use xp's to infer the goal from a question
03:10:01 <cehbab> underastand... tis  abig project :)
03:10:15 <Yepster> yes but on a relatively small domain
03:10:27 <cehbab> unless you can doit VERY generically, very loopy, then it may be able to infer from itse;f recursivley.. ;)
03:10:55 <Yepster> and that's where cyc's hierarchies come in handy
03:14:32 <cehbab> makes senase..
03:14:32 <cehbab> Yepster: it sounds like you are trying to bridge domains of KNOWLEGE together to get a resulatnt somehow ??
03:14:32 <cehbab> ie, cant conclude with single domain, so how about we combine knowlegs :)
03:14:32 <Yepster> uhh no
03:14:32 <Yepster> what I want is to infer the 'hidden' meaning of questions
03:14:32 <Yepster> e.g.: When I ask you 'do you also find it hot in here' when you're closest to a window
03:14:49 <Yepster> you infer that I actually ask you to open the window
03:15:29 <cehbab> Yepster: you may infer that, others may infer the answer of 'no' ;)
03:15:48 <cehbab> I underatdn though... it's pretty tricky :)
03:16:26 <Yepster> Yeah. I was very excited though when I came across Roger Schank's explanation patterns
03:16:50 <Yepster> an explantion for my action might be that I want you to open the window
03:17:29 <Yepster> just reading in the conclusion from the description of 'swale':
03:19:02 <Yepster> 'we believe that the basic structure for the program is sound; we think we know now what form the knowledge representation (yepster: of xp's) will take. The next step is to develop a much larger knowledge base (...)"
03:19:23 <Yepster> this was in 1986
03:21:22 <cehbab> 15 years :)
04:22:33 <dmilez> morning all
04:22:51 --- nick: dmilez -> dmiles
04:24:11 <dmiles> Yepster, do you have a good suggested reading on the web currently to look at xp's?
04:33:02 <Edison> hey dmiles
04:33:35 <dmiles> hi there.. finding good xp works
04:33:43 <dmiles> not busy though
04:34:35 <Edison> dmiles: Have you heared about the beginning of a AI Foundry?
04:35:07 <dmiles> thats a good idea
04:35:23 <Edison> OpenCyc will be a member of it
04:36:17 <Edison> You can contact John DeOliveira for details
04:36:46 <dmiles> glad they added that
04:48:44 <Yepster> on the web.. hmm..
05:06:07 <Yepster> there is a 'swale' project home
05:06:24 <Yepster> http://www.cs.indiana.edu/~leake/projects/swale/
05:06:34 <Yepster> but it refers to the book :(
05:07:05 <Yepster> also: a bit distracting is the word 'case based reasoning'
05:21:22 --- join: jlatour (~jlatour@cc131105-b.ensch1.ov.nl.home.com) joined #opencyc
06:21:50 --- join: stevereed_home (~reed@adsl-66-141-46-249.dsl.austtx.swbell.net) joined #opencyc
06:32:18 --- quit: Yepster ()
07:16:37 --- quit: dmiles (Read error: 104 (Connection reset by peer))
07:21:45 --- part: jlatour left #opencyc
07:25:46 --- part: Edison left #opencyc
07:37:29 --- join: theos^boo (~torsten@port-212-202-177-10.reverse.qdsl-home.de) joined #opencyc
08:17:50 --- join: anonbert (~yo@adsl-78-136-243.ags.bellsouth.net) joined #opencyc
08:18:07 <anonbert> is cyc only available for linux/unix?
08:18:45 <anonbert> ah it's for win NT/2000 too
08:19:18 --- quit: anonbert (Client Quit)
08:46:33 --- quit: cehbab (Read error: 104 (Connection reset by peer))
09:35:04 --- join: theos_ (~torsten@port-212-202-177-10.reverse.qdsl-home.de) joined #opencyc
09:35:04 --- quit: stevereed_home (Read error: 104 (Connection reset by peer))
09:35:36 --- join: stevereed_home (~reed@adsl-66-141-46-249.dsl.austtx.swbell.net) joined #opencyc
09:37:04 --- join: theos__ (~torsten@port-212-202-176-222.reverse.qdsl-home.de) joined #opencyc
09:37:04 --- quit: theos_ (Read error: 104 (Connection reset by peer))
09:38:30 --- quit: theos__ (Client Quit)
09:38:44 --- quit: theos^boo (Read error: 104 (Connection reset by peer))
11:28:09 --- join: dmiles (OULWC@dialup-65.58.152.222.Dial1.Portland1.Level3.net) joined #opencyc
11:45:49 <dmiles> is there a query to embed a backchain and answer number cyc-query into a rule antecedant?
11:45:59 <dmiles> oops
11:46:11 <dmiles> is there a way to embed a backchain and answer number cyc-query into a rule antecedant?
11:46:26 --- quit: stevereed_home (Read error: 110 (Connection timed out))
11:49:05 <dmiles> meaning i want to make a rule that in the anteceedant i am able to make it always backchain by a certain depth and make it to for example return only say 2 reults to happen on the consequant
11:52:17 <dmiles> for example (ist .. ..) in the anteceedant can make the query go specifically to a Mt.. i am not sure but maybe thereExistsAtLeast maybe would constrain a number?
11:53:52 <dmiles> but knowing it will issue a subversion of a cyc-query with the (:BACKCHAIN :NUMBER) might be easier for me
11:55:30 --- join: Taral (taral@cs6625132-47.austin.rr.com) joined #opencyc
11:56:07 <dmiles> if i use #$performSubL with the correct predicates to grab out varaibles, should this work?
12:04:22 <dmiles> ok i see #$ExpandSubLFn will get me acess to the variables.. i have to see if they actually iterate of if its only performed oned
12:04:37 <dmiles> err once
12:16:25 <dmiles> so ui have something like this.. 
12:16:26 <dmiles> (#$performSubL 
12:16:26 <dmiles>   (#$ExpandSubLFn 
12:16:26 <dmiles>     (?X) 
12:16:26 <dmiles>     (CYC-QUERY 
12:16:26 <dmiles>       (QUOTE 
12:16:28 <dmiles>         (#$isa ?X #$Cyclist)) #$InferencePSC)))
12:17:07 <dmiles> but ?X is geeting unversally quantified alsay not returning resuklts
12:17:22 <dmiles> so if i 'ask' that..
12:17:30 <dmiles> it ruturns true with ?X unbound
12:19:57 <dmiles> hw could i do the above having it iterate on the bindings of ?X ?
12:20:39 <dmiles> wich CycLBot was up.. my DSL/Cable modem is down right now and that machine is unable to get out presently
12:27:56 <stevereed> i'll put the question to our inference programmers.
12:28:29 <dmiles> thaks i am trying out various things trying to simplify my problem..
12:28:32 <dmiles> than you
12:28:40 <dmiles> like.
12:28:42 <dmiles> (#$performSubL 
12:28:42 <dmiles>   (#$ExpandSubLFn 
12:28:42 <dmiles>     (?X) 
12:28:42 <dmiles>     (FI-ASK 
12:28:42 <dmiles>       (QUOTE 
12:28:43 <dmiles>         (#$equals ?X 2)) #$InferencePSC)))
12:29:33 <dmiles> in the second case ?X ending up not showing up a varaible in the Query
12:30:17 <dmiles> (#$performSubL 
12:30:17 <dmiles>   (#$ExpandSubLFn 
12:30:17 <dmiles>     (?X) 
12:30:17 <dmiles>     (CYC-QUERY 
12:30:17 <dmiles>       (QUOTE 
12:30:17 <dmiles>         (#$equals ?X 2)) #$InferencePSC)))
12:30:25 <dmiles> X is part of query but contains no results
12:30:55 <dmiles> since the subL evaluates to ture.. its true (asll three examples are ture)
12:31:08 <dmiles> sorry.. true
12:31:38 <dmiles> but cyc didnt have any programmatic inititive to put anything in ?X in any case
12:32:41 <dmiles> i bet they can come up with a way that i could populate variable bindings .. thank you
12:36:28 <stevereed> look at #$evaluate var expression which binds result to var
12:37:55 <dmiles> like:
12:37:56 <dmiles> Last query in EverythingPSC :
12:37:56 <dmiles> (and 
12:37:56 <dmiles>    (performSubL 
12:37:56 <dmiles>        (ExpandSubLFn 
12:37:56 <dmiles>            (?VAR) 
12:37:58 <dmiles>            (CYC-QUERY 
12:38:00 <dmiles>        '(equals ?VAR 2) InferencePSC))) 
12:38:02 <dmiles>    (evaluate ?X ?VAR))
12:39:30 <dmiles> ?X is showing up as a result..
12:39:46 <dmiles> Answer     ?X 
12:43:05 <dmiles> which makes sense  .. its possible that i may need to get a set of variable results from subl in a list.. then itterate upon that list?
12:44:04 <dmiles> so i (evalute List (EvaluateSubLFn (my expression) )
12:45:26 <dmiles> trying something like: (evaluate ?List (EvaluateSubLFn (ExpandSubLFn NIL (CYC-QUERY '(isa ?X Cyclist) InferencePSC )))
12:46:58 <dmiles> tried:
12:46:59 <dmiles> (#$evaluate ?LIST 
12:46:59 <dmiles>   (#$EvaluateSubLFn 
12:46:59 <dmiles>     (#$ExpandSubLFn 
12:46:59 <dmiles>       (?X) 
12:46:59 <dmiles>       (CYC-QUERY 
12:47:01 <dmiles>         (QUOTE 
12:47:03 <dmiles>           (#$isa ?X #$Cyclist)) #$InferencePSC))))
12:47:20 <dmiles> returned True with X unbound
12:47:30 <dmiles> and List missing
12:49:08 <dmiles> ok thinking cyc-query could have waled on variables i concerted to FI-ASK
12:49:23 <dmiles> err walked over varible results in the inner loop
12:49:40 <dmiles> Last query in EverythingPSC :
12:49:40 <dmiles> (evaluate ?LIST 
12:49:40 <dmiles>    (EvaluateSubLFn 
12:49:40 <dmiles>        (ExpandSubLFn 
12:49:40 <dmiles>            (?X) 
12:49:40 <dmiles>            (FI-ASK 
12:49:43 <dmiles>        '(isa ?X Cyclist) InferencePSC))))
12:49:44 <dmiles> Query halted because : Search space was exhausted.
12:49:46 <dmiles> Answer     ?LIST 
12:49:48 <dmiles> --------------------------------------------------------------------------------
12:49:50 <dmiles> [Explain]  :QUEUED 
12:49:53 <dmiles> Answer Bindings :
12:49:54 <dmiles> ?LIST  =  :QUEUED 
12:50:23 <stevereed> we have fi-ask-int fun which does not queue but it may not be in the api
12:51:10 <dmiles> checking 
12:51:17 <stevereed> fi-ask-int is in the api.
12:51:47 <dmiles> Operator FI-ASK-INT is not defined in the API
12:52:17 <dmiles> i used.. subl: (FI-ASK-INT 
12:52:17 <dmiles>         (QUOTE 
12:52:17 <dmiles>           (#$isa ?X #$Cyclist)) #$InferencePSC)
12:54:19 <stevereed> ok, we can use cyc-query which calls fi-ask-int
12:54:43 <dmiles> makes sense.
12:55:16 <dmiles> cyc-query seems likes its taking over the results buffer.. meaning squashing that ?List every existed 
12:55:36 <dmiles> (as a toplevel query variable)
12:57:38 <dmiles> but this might be the fact i am in the webUI 
12:58:36 <dmiles> to where i explect ?List (two queries above) holds results.. but i am not seeing them in the browser
13:01:01 <stevereed> (#$and 
13:01:02 <stevereed>   (#$isa ?EXP #$ScalarInterval) 
13:01:02 <stevereed>   (#$evaluate ?STR 
13:01:02 <stevereed>     (#$EvaluateSubLFn 
13:01:02 <stevereed>       (#$ExpandSubLFn 
13:01:02 <stevereed>         (?EXP) 
13:01:04 <stevereed>         (WRITE-TO-STRING ?EXP)))))
13:01:34 <stevereed> this form shows how ?EXP and ?STR bind
13:01:39 <stevereed> when asked.
13:02:15 <dmiles> Last query in EverythingPSC :
13:02:17 <dmiles> (and 
13:02:17 <dmiles>    (isa ?EXP ScalarInterval) 
13:02:17 <dmiles>    (evaluate ?STR 
13:02:17 <dmiles>        (ExpandSubLFn 
13:02:17 <dmiles>            (?EXP) 
13:02:18 <dmiles>            (WRITE-TO-STRING ?EXP))))
13:02:20 <dmiles> Query halted because : Search space was exhausted.
13:02:22 <dmiles> No answers
13:02:52 <stevereed> BaseKB?
13:03:03 <dmiles> ok.. one sec.. used EverythingPSC
13:03:40 <dmiles> Last query in BaseKB :
13:03:40 <dmiles> (and 
13:03:40 <dmiles>    (isa ?EXP ScalarInterval) 
13:03:40 <dmiles>    (evaluate ?STR 
13:03:40 <dmiles>        (ExpandSubLFn 
13:03:40 <dmiles>            (?EXP) 
13:03:42 <dmiles>            (WRITE-TO-STRING ?EXP))))
13:03:44 <dmiles> Query halted because : Search space was exhausted.
13:03:46 <dmiles> No answers
13:04:18 <stevereed> Hmm I get more with InferencePSC than with BaseKB, but my OpenCyc is the latest build.
13:04:21 <dmiles> oh what exactly get the WRITE-TO-STRING?
13:04:38 <dmiles> n/m i see
13:04:38 <stevereed> I'll try it on a rel 0.6 OpenCyc.
13:04:43 <dmiles> thanks 
13:05:19 <dmiles> (i am also in the webUI meaning maybe the reuslts like objects are touchier)
13:08:38 <stevereed> write-to-string is common lisp and it makes a string representation of its argument.
13:09:03 <dmiles> ah.. so you not C-ified right now?
13:09:35 <dmiles> (ACL)
13:10:11 <stevereed> well have our own implemtation of write-to-string either in C or translated to C.
13:10:16 <dmiles> ERROR : 
13:10:16 <dmiles> Operator WRITE-TO-STRING is not defined in the API
13:11:36 <dmiles> (WebUI SubL Interactor)
13:12:09 <dmiles> entered (write-to-string (hello))
13:12:28 <stevereed> ok I will have all of these in the api next release.
13:13:01 <dmiles> its a double edged sword.. you dont want to break anything.. but over exposure gets hairy
13:13:51 <stevereed> right.  I'm still working on the embedded query.
13:14:04 <dmiles> thank you.. that will be very usefull to me
13:20:42 * dmiles sometimes wishes he rented a desk at cyccorp
13:38:26 --- quit: Taral ("ircII EPIC4-1.1.2 -- Are we there yet?")
14:00:42 <stevereed> looks like the embedded asks dont work because the inference engine is not reentrant,
14:00:53 <stevereed> but the next release will contain a pool of task processors,
14:01:02 <dmiles> ah.. that what it seemed woth cyc-query
14:01:21 <stevereed> that can multitask any api operations.
14:01:45 <stevereed> so I'll try performing the sub-query with a task-processor request.
14:02:02 <dmiles> yeah sometime in API like build me a fullyfunctional thread
14:02:12 <dmiles> yep
14:02:23 <dmiles> err task 
14:03:22 <dmiles> hrrm i have kinda expermented with another approach.. that seems KB (non java) mainataible) i weas trying to get some of the work out of the java parts i been making
14:04:43 <dmiles> so i can live for now w/in embedding a subsquery
14:04:55 <dmiles> er w/o
14:05:57 <dmiles> but the aproach you wnet at with the write-string seemed to have some ablity
14:06:21 <dmiles> just understnading things like timed query .. etc might now work out
14:06:32 <dmiles> err not work
14:27:33 <dmiles> i am sure the questions like (how soon) are tangled .. but do you tyhink 0.7 will be out in the next 4 weeks?
14:30:07 <dmiles> wlso i am trying to find documentation about the last four arguments of ask-template
14:30:30 <dmiles> time/depth/answers?
14:30:39 <dmiles> (as in what order) 
14:41:59 <dmiles> (ask-template ?Formula ?Mt ?A ?B ?C ?D)
14:42:06 <dmiles> trying to get the A-D
14:57:08 <dmiles> also how difiectly will it be to make aan open-socket-and-send-text -> replay ?
14:57:16 <dmiles> (err reply)
16:15:40 <stevereed> doug, i got the recursive asks to work with the task-processor which will show up in the next release.
16:16:03 <dmiles> very good work
16:16:12 <stevereed> we are waiting for the cycml-parser before the next release.
16:16:21 <stevereed> I have the cycml generator working.
16:17:04 <dmiles> its just running it in the use case.. exporting it more tool systle i bet thats the work now
16:17:24 <stevereed> ask-template (template sentence &optional mt backchain number time depth)
16:17:25 <stevereed>   "Ask SENTENCE in MT.  Return results of substituting bindings into TEMPLATE."
16:18:16 <stevereed> going home.
16:18:36 <dmiles> thank you
16:18:57 <dmiles> cool ask-template seems pretty easy to use
16:50:02 --- join: |Lionheart| (~Lionheart@lns12v-11-90.w.club-internet.fr) joined #opencyc
16:50:19 <|Lionheart|> Hello
16:51:02 <|Lionheart|> do you know about an OpenCyc public server on the web ?
16:52:11 <dmiles> there is a news link on the site
16:52:15 <dmiles> on opencyc.org
16:52:51 <|Lionheart|> yes, but these servers aren't working...
16:53:14 <dmiles> i had noticed :(
16:53:28 <dmiles> maybe they are undergoing upgrade to a newer verison
16:53:33 <dmiles> but seems DNS is down?
16:53:52 <|Lionheart|> I don't know...
16:55:11 <|Lionheart|> Is there a Windows version available ?
16:55:31 <dmiles> riught the 3rd server.. i dont remmber the IP
16:55:46 <dmiles> there was an emial related though
16:56:51 <|Lionheart|> it's this one : http://opencyc251.homelinux.org:3603/cg?cb-start  ?
16:57:29 <dmiles> nope it was a differnt one
17:01:37 --- part: |Lionheart| left #opencyc
17:01:39 <dmiles> i am really searhcing and still not finding ;P
17:02:42 <dmiles> i need help creating a classed completeExtent known collection
17:02:57 <dmiles> i tried..
17:02:58 <dmiles> (implies 
17:02:58 <dmiles> 	(not (assertedTermSentences OverlyGeneralTermForMud (isa ?X OverlyGeneralTermForMud)))
17:02:58 <dmiles> 	(not (isa ?X OverlyGeneralTermForMud))
17:04:06 <dmiles> but there must already be something that does this
17:23:20 --- join: Psion (Psion@VOID.RES.cmu.edu) joined #opencyc
17:23:48 --- join: stevereed_home (~reed@adsl-66-141-46-249.dsl.austtx.swbell.net) joined #opencyc
17:25:32 <dmiles> steve, answer only if you know off the top of your head..
17:26:21 <dmiles> i am trying to make a Collection subject to (#$not (#$isa ?X #$SomeCollection)) based of negation by falure
17:26:54 <dmiles> like a complete extent known first oder collection
17:29:37 <Psion> How can I do something like run-cyc.sh that runs like a daemon without requiring console input?
17:29:50 <dmiles> you can run it under a screen
17:30:11 <dmiles> [bsh]# screen
17:30:34 <dmiles> then run it .. then crtl-alt-d to detact
17:30:46 <dmiles> tch
17:31:36 <Psion> CTRL-ALT+d got sent to the cyc prompt as a weird character
17:31:51 <dmiles> oops ctrl-a-d
17:32:15 <Psion> What does that mean?
17:32:38 <dmiles> cntrol-a screen action  - d = detatch
17:32:42 <Psion> Oh
17:32:53 <dmiles> crtl key down the whole time
17:32:55 <Psion> No dice... control-a just got sent to it
17:33:17 <Psion> I am doing this over ssh.
17:33:23 <dmiles> then you can recall the session with screen -r
17:33:38 <Psion> I can't recall it if I can't detach it =)
17:33:51 <dmiles> your ssh client should have let you crtl-a-ctrl-d (thats how i should have said it)
17:34:12 <Psion> It does, but it's not doing what you say it should.
17:34:29 <dmiles> thats not good your ssh client doent let you do standard operations ;(
17:35:23 <Psion> Is there a standard /dev/something that blocks forever, a la keyboard input? =)
17:35:35 <dmiles> you may want to get things restarted since cyc might be confused now
17:35:55 <dmiles> well most send an EOF unit
17:36:29 <dmiles> you can though invoke it inside a screen
17:36:36 <dmiles> let me get you the command
17:41:22 <dmiles> screen -dmS Cyc ./run-cyc
17:41:30 <dmiles> err with .sh
17:41:35 <Psion> What's the Cyc for?
17:41:43 <dmiles> you have to give it a name i thing
17:41:47 <Psion> OK
17:41:48 <dmiles> think
17:41:57 <dmiles> so you can screen -r Cyc
17:42:06 <dmiles> to recall the prompt
17:42:52 <dmiles> -dmS name     Start as daemon: Screen session in detached mode.
17:43:11 <Psion> Thanks, it works.
17:43:33 <dmiles> cool
18:02:01 <dmiles> wow the mud is starting to work well
18:02:06 <dmiles> look at this
18:02:08 <dmiles> [dmiles@Area1002 mud]$ look
18:02:08 <dmiles> dmiles is in A Corridor
18:02:08 <dmiles> A portal westerly is in A Corridor
18:02:08 <dmiles> A portal South is in A Corridor
18:02:08 <dmiles> A portal East is in A Corridor
18:02:08 <dmiles> A portal north is in A Corridor
18:02:10 <dmiles> sample eliza is in A Corridor
18:02:12 <dmiles> cyc l bot is in A Corridor
18:02:14 <dmiles> A Corridor is an indoor space
18:02:16 <dmiles> A Corridor is inside surface
18:02:18 <dmiles> A Corridor is a geographical region
18:02:39 <dmiles> [dmiles@Area1002 mud]$ look dmiles
18:02:39 <dmiles> dmiles is in A Corridor
18:02:39 <dmiles> dmiles is player instance
18:03:49 <dmiles>  i can add subtract rpedicates used for describing a loaction
18:04:19 <dmiles> it currently is bound to #$isa and #$in-ContGeneric
18:26:28 --- join: dmilez (OULWC@dialup-64.158.120.207.Dial1.Portland1.Level3.net) joined #opencyc
18:34:19 <Psion> Er... how would I unassert (opinions Something Truth)?
18:34:27 <Psion> I can't seem to get rid of the assertion.
18:42:27 <dmilez> you need to click on its rule dot
18:42:39 <dmilez> and then find the unassert link
18:43:36 --- quit: dmiles (Read error: 110 (Connection timed out))
18:47:26 <dmilez> i need help represnting something knows how to swim
18:47:50 <dmilez> maybe based off typeBehaviorCapable
18:48:15 <dmilez> i was thinking transprtationFn or something being involved
18:48:26 <dmilez> i thought that may already be something in cyc
18:49:05 <dmilez> hey i am very glad my project is only as dificult as learniong KE in CycL now :)
18:53:25 <Psion> Either Cyc crashed or takes forever to determine that something isa AnorexicPerson when I say that someone is one if he's a HumanAdult weighing less than 100 lbs., and then assert someone's weight as 50 lbs =)
18:53:53 <dmilez> well there uis a bit of search ivolved in that
18:54:25 <dmilez> possilby the search is comparting or trying to guess adult wights
18:54:41 <dmilez> even though you are most concerned about that one 
18:54:48 <Psion> How silly!
18:56:29 <dmilez> :).. maybe you want to set that rule for Forward 
18:56:39 <dmilez> strange though
18:56:47 <dmilez> that it is taking a while
18:56:56 <dmilez> you didjnt bg i hope ;)
18:56:59 <Psion> Another nasty thing is how forAll's are ignored
18:57:01 <dmilez> the cyc server
18:57:15 <dmilez> well by default everything is quantified forAll
18:57:44 <Psion> Yes, but formulae of standard first order logic end up grossly misinterpreted with the current way of handling that.
18:57:44 <dmilez> at least done in the guts of unificvatiuon grammers based on unique-names principles
18:58:27 <dmilez> well i have always thought and founght tyhat forALl should be classed per Mt
18:58:48 <Psion> Hmmmm....
18:58:53 <dmilez> meaning in BaseKB it should be Thing
18:59:20 <dmilez> and work is way about.. but generally your arg*Isa contrants create the finite domain
19:00:14 <Psion> Would that make it feasible to check things like "if all of Bob's opinions are true, then all of Joe's opinions are true"?
19:00:14 <dmilez> the most tightest argI isa in the EL formula needs to be the forAll (isa ...)
19:00:17 <Psion> Instead of "every one of Bob's opinions implies each of Joe's opinions" with the way it's currently parsed.....
19:00:38 <dmilez> well it would make aductive hypothesis more reasoanble
19:00:49 <Psion> Or not even that, I guess, if it just looks for a few binding sites
19:01:37 <dmilez> well your truing to say Joe pretty much shares opineions with Bob?
19:02:19 <Psion> I don't really have a vested interest in that assertion, but it is an example of something that gets a different meaning in FOL and Cyc
19:03:02 <dmilez> yes.. you end up trying some hack of contrainting the logic ;P
19:03:27 <dmilez> FOL has to be thought of as a programming laguage mostlty :9
19:03:30 <dmilez> ;(
19:03:44 <dmilez> at least when it comes to making computers use it
19:04:15 <dmilez> but i see your point as you feel you will always over or under express things
19:04:29 <dmilez> ?
19:04:30 <Psion> Yup, but it would be nice if a big warning popped up like "USING WEIRD NONSTANDARD INTERPRETATION OF QUANTIFICATION!!!" when applicable in Cyc ;-)
19:05:33 <dmilez> :) well it could be worse
19:07:16 <dmilez> so you are making medical diagnosis system?
19:08:33 <Psion> No, I am making an IRC bot, and trying to get it to verify that a channel regular who we know is fat is anorexic in a hypothetical fantasy world ;)
19:08:55 <dmilez> hehe
19:09:44 <Psion> Unfortunately, Cyc doesn't seem to be able to handle as much as I had hoped, so I don't know how much it can add to an IRC channel =)
19:10:39 <dmilez> i made an irc bot once that each tiime it was told to join a channel it made a GeogrphicalLocation.. and on join belive people enter that place
19:11:28 <dmilez> its main feature was it was to chat. and answer what is things
19:11:41 <dmilez> but manly did nothing but demo programming skills
19:12:38 <Psion> The most useful thing mine did was verify that no one in the channel is a Dog, seeing as how BotUser genls's Person =)
19:13:27 <dmilez> yes
19:13:33 <dmilez> it ran on efnet a year .. but as far as adding .. gave people a chance to learn Prolog .. but didnt take it as far as it could have gone
19:14:24 <dmilez> very cool though, we have simular interests
19:14:34 <Psion> Do you work for Cycorp?
19:14:44 <dmilez> nope
19:15:00 <dmilez> just working on making java things that aare usefull for opencyc
19:15:10 <Psion> Has OpenCyc been out for a long time before Slashdot mentioned that is was? =)
19:15:14 <dmilez> i worked with cyc before at prevous employers
19:15:19 <Psion> O
19:15:33 <dmilez> maybe a month or so
19:15:37 <dmilez> not sure
19:16:07 <dmilez> hrrm maybe the 3 or fourrth month of this year
19:17:10 <dmilez> sounds like you had some experince with cyc or other projects very suimular
19:17:23 <dmilez> (or a fast learner)
19:17:40 <Psion> I'm a very fast learner for anything that smells like a programming language =)
19:17:56 <Psion> Also a student of programming languages and logic
19:18:23 <dmilez> ah your all also over the web
19:18:47 <Psion> Yes, it's very exciting.
19:19:45 <Psion> Amazing... the archived game for the computer game I started in 9th grade is in the first page of Google hits.... I don't know how THAT is judged as relevant =-)
19:19:50 <Psion> er, archived page
19:20:11 <dmilez> Ikonoklasm for Fun  <- first i get
19:21:05 <Psion> Yes, that, at least, makes sense, since it is my home page!
19:21:20 <Psion> Except Google gets the wrong front page
19:21:35 <dmilez> hehe gets you prevois hompage indexed
19:21:47 <dmilez> home.devlocus.org/~psion/old
19:22:24 <dmilez> i wornced had a couple copies of wordnet trnaslitered that google indexed
19:23:13 <dmilez> so i made this bogus newsgroup site that genrated nl things.. and made everyhitn return 200
19:23:40 <Psion> Hm... and there are some search engines that get stuck with a page that has a new link each time, but which always leads back to the same page =)
19:24:16 <dmilez> yeah.. it was aPhP that handled all 404 as a 200ok but created something from the link variables
19:24:35 <dmilez> but all the gets looked like the_brown_fox_jumped.html
19:25:10 <dmilez> so it never left due to a ?var=val
19:25:23 <Psion> The best part about web access logs is finding when search engine spiders go ballistic.
19:26:23 <dmilez> well i was being hosted at this pay thing.. they said the site had a load avarge of 1.8 and the weblogs were over quote once a day.. so made it /dev/null
19:27:40 <dmilez> fun stuff .. so what do you think of cyc so far?
19:29:26 <Psion> Pretty nifty, though the searching doesn't work as well as I'd hoped! Kinda makes me reconsider "AI" as a field to pursue, though I think most AI isn't anything like Cyc!
19:31:11 <dmilez> i am very sold on fol expert systems.. so far cyc has not been the fastest .. but holds the most potentuial .. and the most maintainable
19:31:49 <dmilez> and most likely to improve in the places that one could gripe about
19:32:32 <Psion> Hm... I'm going to have to choose an area of CS to say I'm interested in when I apply to grad school soon, and I'll probably stick with compilers or similar for now =)
19:34:58 <dmilez> neat 
19:36:10 <Psion> Hm... so why are you using Cyc for a MUD?
19:36:32 <dmilez> well the cyc KB is about modeling the world
19:36:51 <dmilez> and i was interesting in ussing a rule based ai type char
19:37:01 <dmilez> and finding its easier to keep data in cyc already
19:37:19 <Psion> You mean a character in the MUD world, that interacts with players
19:37:20 <Psion> ?
19:37:37 <dmilez> and find that a limit it to cyc is that its doensnt alway make it easy for a potentual hardcore KE to write about the world
19:38:08 <dmilez> so i wanted to make it so they could descrivbe things as they saw it.. not how to fits ontologically
19:38:28 <dmilez> yes.. my reall underlying goql is a first person version of theSims
19:38:58 <dmilez> that expontially becomes more capable as cyc imporves
19:39:24 <dmilez> yes though as a chariacter that interacts first person
19:39:28 <Psion> The success of such a simulation really comes down to the debate of if you can simulate human behavior adequately with logic =)
19:39:32 <dmilez> and multiple inherated KB people
19:39:50 <dmilez> yes.. definately
19:39:56 <Psion> You need some sort of temporal logic to deal with the "realtime" nature of senses and instincts.
19:40:16 <dmilez> i am hoping to abduce new player roles by watching humans get forcable instanced inside a KB
19:40:36 <Psion> And I doubt Cyc is going to work too well for updating behavioral choices like that....
19:40:36 <dmilez> and something the KB is already intimate with the data model of
19:41:22 <dmilez> well cyc can hold data and make things work for software that is dequigned specific to try to do that
19:41:54 <Psion> You can make all the statements you want about a theory of time and space, but that's not a realtime system that acts based on inputs as they come in.
19:42:13 <dmilez> you are saying that styandard FOL infernce may not be a good match for behaouvour
19:42:46 <dmilez> what would need to be done for cyc to make that poossible?
19:43:02 <Psion> Yes. You can't do a proof search in every infinitesimal instant of time to determine what outputs to make ;-)
19:43:45 <dmilez> well currrelty each time the actor 'ticks'; it issues a query into cyc 
19:44:08 <dmilez> that gives it back the name of a java command that the thing invokes
19:44:14 <Psion> It doesn't look like Cyc is designed to do that sort of thing. I don't think it's clear whether there would be a feasible way to use it to convincingly control a realtime agent.
19:44:15 <dmilez> (and params)
19:44:44 <dmilez> well cyc may not be desinged for it now.. but thats what their customers really want
19:45:02 <dmilez> is a real time system to point a firehose of knowledge at it
19:45:08 <dmilez> and make agents live inside
19:45:28 <dmilez> at least make queries of it
19:45:32 <Psion> I don't think Cyc works anything like how human minds work.
19:45:45 <dmilez> yes definately not
19:45:46 <Psion> There is no way human memory works by doing anything like a proof search.
19:46:17 <dmilez> i think you can always make a microtheory that will use search to emulate most anything
19:46:49 <dmilez> but i agree. cyc and the mind are not in anyway simular.. but ES has had a good track record at alot of things
19:46:56 <Psion> You can't match any algorithm asymptotic complexity wise if you are limited to a given logical framework =)
19:47:54 <dmilez> well logical frameorks are good for us humans to control when we use wghat types of infernce modules
19:48:09 <dmilez> err to help us choise the correct q/a system
19:48:31 <dmilez> meaning things of that nature can be treated external to a system like cyc
19:48:33 <Psion> And just imagine if human thinking is fundamentally "quantum" or some other far out type of thing! Then you might be re-inventing a new type of "consciousness" to try to get somthing like Cyc to "think
19:48:37 <Psion> " like a human does.
19:49:06 <dmilez> absolutely
19:49:50 <dmilez> exper5t system rule based proccessing is indeed an artifical form of some kind of cognition
19:50:07 <dmilez> far from human.. but maybe more usefull?
19:50:19 <Psion> More useful in what sense?
19:51:11 <dmilez> not sure yet :) .. but seems that its equally capable of creating new things by manupulating language we give it
19:51:33 <Psion> That's fine, if the new things make sense =)
19:52:12 <dmilez> well you know the benifits of converting source code to some machine target
19:52:37 <Psion> Sure, and...?
19:53:49 <dmilez> cyc compilies knoweldge into a exapanded possiblity opf search paths .. that show us that we need to debug our representation
19:54:27 <dmilez> like the pschologist that does theorapy by asking questions.. making you really define things
19:54:43 <dmilez> if anything cyc will do that 
19:55:00 <dmilez> i couldnt quite connect my answer to your question though
19:55:19 <dmilez> other then it gives humans something to refine
19:56:13 <dmilez> and be able to incremental improve.. as they better define what they want for the source information
19:56:54 <dmilez> but as anything .. a program still has to do something at some point
19:57:53 <Psion> I don't think such a program will be able to top the reasoning capabilities of a clued-in person.
19:58:19 <dmilez> it should be able to act as a research assitant though
19:58:34 <dmilez> (thats what i want from cyc)
19:59:06 <dmilez> i librarian that can do at least some tasks
19:59:25 <dmilez> as computers are inteneded already to do.. just better
20:00:01 <Psion> Sure, but so far as realistically simulating people for a first person "The Sims," I think you'll have some trouble =)
20:00:32 <dmilez> well it's been done already.. and semi works out to entertainment.. but i think it can become even more
20:00:47 <dmilez> or at least a tad bit better
20:02:31 <dmilez> also puts cyc through the rounds it needs to improve representation of problems that FOL is not good at
20:03:02 <dmilez> (at least teaches me)
20:03:34 <Psion> Cyc seems to be beyond FOL, though.... almost like higher-order logic in its own way.
20:03:44 <Psion> Seeing as how predicates can be parameters to predicates
20:04:04 <Psion> And you can quantify (in the ghetto way allowed) over predicates
20:04:06 <dmilez> yes becasue it puts logic to a proceedural path based system.. it does add features
20:04:31 <dmilez> err effect the kinds of features one wopuld expexct
20:04:41 <dmilez> mybe not always adding
20:05:37 <dmilez> yes.. cyc is a upscale version of prolog.. with deviations that are supposed to be palatble by logicians
20:05:51 <Psion> Hm.... going to school at a stronghold of ML as I do, I can't help but wonder if a strongly typed version of Cyc could do better things =)
21:15:21 --- quit: stevereed (carter.openprojects.net irc.openprojects.net)
21:15:21 --- quit: Graham (carter.openprojects.net irc.openprojects.net)
21:20:24 --- quit: Psion ()
21:22:37 --- join: stevereed (~reed@207.207.8.185) joined #opencyc
21:22:37 --- join: Graham (ggelling@207.207.8.145) joined #opencyc
22:02:14 --- quit: bruce (Read error: 104 (Connection reset by peer))
22:14:31 --- join: bruce (~bruce@dnvrdslgw17poola1.dnvr.uswest.net) joined #opencyc
23:59:59 --- log: ended opencyc/02.06.12
