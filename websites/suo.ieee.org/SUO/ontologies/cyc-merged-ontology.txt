;;; Upper CYC(R) Ontology flat-file
;;; Copyright Cycorp 1997.  All rights reserved.

;;;Cycorp License Agreement 

;;;Cycorp is providing this material from the Cyc(tm) Upper
;;;Ontology at no charge, for everyone to use, including 
;;;commercial service use and incorporation into products. 
;;;However, it is not 'Public Domain.'  Please acknowledge 
;;;Cycorp, 3721 Executive Center Dr., Austin, TX 78731 in 
;;;any use or citation of this material, and request that each
;;;further user include a full copy of this notice as well,
;;;in any use or citation they make of the material.  All
;;;these terms equally apply to renamings and other 
;;;logically equivalent reformulations of the material in 
;;;any natural or formal language.  Cycorp intends to 
;;;amend and expand the material from time to time; the 
;;;latest version is available at  http://www.cyc.com


;;; #$AFewDaysDuration
(#$isa #$AFewDaysDuration #$OrderOfMagnitudeInterval)
(#$isa #$AFewDaysDuration #$Time-Quantity)
(#$comment #$AFewDaysDuration "Duration of 2 to 10 days")

;;; #$AFewDecadesDuration
(#$isa #$AFewDecadesDuration #$OrderOfMagnitudeInterval)
(#$isa #$AFewDecadesDuration #$Time-Quantity)
(#$comment #$AFewDecadesDuration "Duration of 2 to 10 decades")

;;; #$AFewHoursDuration
(#$isa #$AFewHoursDuration #$OrderOfMagnitudeInterval)
(#$isa #$AFewHoursDuration #$Time-Quantity)
(#$comment #$AFewHoursDuration "Duration of 2 to 10 hours")

;;; #$AFewMinutesDuration
(#$isa #$AFewMinutesDuration #$OrderOfMagnitudeInterval)
(#$isa #$AFewMinutesDuration #$Time-Quantity)
(#$comment #$AFewMinutesDuration "Duration of 2 to 10 minutes")

;;; #$AFewMonthsDuration
(#$isa #$AFewMonthsDuration #$OrderOfMagnitudeInterval)
(#$isa #$AFewMonthsDuration #$Time-Quantity)
(#$comment #$AFewMonthsDuration "A few months 2-10")

;;; #$AFewSecondsDuration
(#$isa #$AFewSecondsDuration #$Time-Quantity)
(#$isa #$AFewSecondsDuration #$OrderOfMagnitudeInterval)
(#$comment #$AFewSecondsDuration "Duration of 2 to 30 seconds")

;;; #$AFewWeeksDuration
(#$isa #$AFewWeeksDuration #$OrderOfMagnitudeInterval)
(#$isa #$AFewWeeksDuration #$Time-Quantity)
(#$comment #$AFewWeeksDuration "Duration of 2 to 10 weeks")

;;; #$AFewYearsDuration
(#$isa #$AFewYearsDuration #$OrderOfMagnitudeInterval)
(#$isa #$AFewYearsDuration #$Time-Quantity)
(#$comment #$AFewYearsDuration "Duration of 2 to 10 years")

;;; #$AbandoningSomething
(#$isa #$AbandoningSomething #$ScriptType)
(#$isa #$AbandoningSomething #$TemporalObjectType)
(#$genls #$AbandoningSomething #$PurposefulAction)
(#$genls #$AbandoningSomething #$LosingUserRights)
(#$comment #$AbandoningSomething "The collection of events in which some #$Agent deliberately gives up possession of something, without giving it to another.")

;;; #$Ablation
(#$isa #$Ablation #$TemporalStuffType)
(#$isa #$Ablation #$DefaultDisjointScriptType)
(#$genls #$Ablation #$RemovingSomething)
(#$genls #$Ablation #$IntrinsicStateChangeEvent)
(#$genls #$Ablation #$Separation-Complete)
(#$comment #$Ablation "A collection of events.  In an #$Ablation, a (usually relatively thin) layer of material is removed from the surface of an object.")

;;; #$AboveGroundLevelInAConstruction
(#$isa #$AboveGroundLevelInAConstruction #$ExistingObjectType)
(#$genls #$AboveGroundLevelInAConstruction #$LevelOfAConstruction)
(#$genls #$AboveGroundLevelInAConstruction #$ContainerProduct)
(#$comment #$AboveGroundLevelInAConstruction "This refers to first floor and up. We created this to make the distinction between basements and non-basements.  We'd like to be able to talk about, count, etc. the levels above ground.")

;;; #$AbradingSomething
(#$isa #$AbradingSomething #$DefaultDisjointScriptType)
(#$genls #$AbradingSomething #$Ablation)
(#$genls #$AbradingSomething #$PhysicalContactSituation)
(#$genls #$AbradingSomething #$VoluntaryBodyMovement)
(#$comment #$AbradingSomething "A collection of events.  In an #$AbradingSomething event, the surface of some object is gradually worn away by scraping or similar physical contact involving friction.  Devices used in elements of #$AbradingSomething include files and sand paper; elements of #$AbradingSomething would include the event in which Howard Hughes sanded down the Spruce Goose for the last time, the event in which Lucy Ricardo filed her fingernails just before her singing debut at Rickie's club, etc.")

;;; #$AbsoluteValueFn
(#$isa #$AbsoluteValueFn #$FunctionFromQuantitiesToQuantities)
(#$resultIsa #$AbsoluteValueFn #$ScalarInterval)
(#$arg1Isa #$AbsoluteValueFn #$ScalarInterval)
(#$comment #$AbsoluteValueFn "#$AbsoluteValueFn is the unary mathematical function that returns the absolute value of its argument; e.g., (#$AbsoluteValueFn -2) returns 2, and (#$AbsoluteValueFn 2) returns 2.")

;;; #$AbstractInformation
(#$isa #$AbstractInformation #$StuffType)
(#$isa #$AbstractInformation #$ObjectType)
(#$genls #$AbstractInformation #$Intangible)
(#$comment #$AbstractInformation "The collection of all instances of abstract information stored or transmitted in some manner, and representing (to someone potentially at least) something.  Abstract information need not have any propositional content (see #$PropositionalInformationThing); a score for music, or a bit-map, are examples.  Note that #$AbstractInformation is the abstract, intangible information, not any particular physical embodiment.  The same abstract information is often stored in many different physical #$InformationBearingObjects.  #$AbstractInformation may or may not be digital; it need not be representable in a particular number of bits.  #$AbstractInformation does not include every abstract #$Intangible or 'Platonic' concept, only that information that represents something and is (at least potentially) stored or transmitted for that purpose; thus, the ideal regular icosahedron is not in itself an instance of #$AbstractInformation.  Note also that although most instances of #$AbstractInformation are #$IntangibleIndividuals, some are #$SetOrCollections such as #$BiologicalTaxons and other #$ConventionalClassificationTypes.")

;;; #$AbstractProgrammingLanguage
(#$isa #$AbstractProgrammingLanguage #$ObjectType)
(#$genls #$AbstractProgrammingLanguage #$Language)
(#$genls #$AbstractProgrammingLanguage #$MathematicalOrComputationalThing)
(#$comment #$AbstractProgrammingLanguage "The collection of languages invented for use by computers. This includes both command languages and others which one doesn't really `program' in.")

;;; #$AbstractShape
(#$isa #$AbstractShape #$ObjectType)
(#$genls #$AbstractShape #$GeometricThing)
(#$comment #$AbstractShape "A collection of objects; a subset of #$GeometricThing.  #$AbstractShape is the collection of all abstract physical shapes.  Each element of #$AbstractShape is an abstract region of physical space, having two or more dimensions.  This includes all circles, spheres, triangles, wedges, spirals, cylinders, toruses, etc.")
(#$overlappingExternalConcept #$AbstractShape #$SENSUS-Information1997 "SHAPE-QUALITY")

;;; #$AbstractShapeType
(#$isa #$AbstractShapeType #$Collection)
(#$genls #$AbstractShapeType #$ShapeType)
(#$comment #$AbstractShapeType "A collection of collections.  Each element of #$AbstractShapeType is a collection of things which are subsets of #$AbstractShape.  The elements of #$AbstractShapeType comprise the basic physical shapes.  Examples include: #$CylinderShape, #$PyramidShape, #$ConeShape, #$TubeShape, #$Rectangular3DShape, #$Polygon, #$Spiral, etc.")

;;; #$AcademicProfessional
(#$isa #$AcademicProfessional #$OccupationType)
(#$genls #$AcademicProfessional #$Professional)
(#$comment #$AcademicProfessional "A collection of persons; a subset of #$Professional.  Each element of #$AcademicProfessional is a person whose job is to educate and/or to perform research as an affiliate of an academic institution.  This includes members of the teaching and/or research staff of schools, colleges, universities, and research institutes.")

;;; #$AcademicQuarter
(#$isa #$AcademicQuarter #$TemporalObjectType)
(#$genls #$AcademicQuarter #$TimeInterval)
(#$comment #$AcademicQuarter "Each instance of this collection is a #$TimeInterval defined by some educational institution: one quarter of their #$AcademicYear.  Since the start dates, end dates, and duration may all vary depending on the institution, the year, etc., instances of this collection must unfortunately be time intervals like StanfordSpringQuarter1991.")

;;; #$AcademicSemester
(#$isa #$AcademicSemester #$TemporalObjectType)
(#$genls #$AcademicSemester #$TimeInterval)
(#$comment #$AcademicSemester "Each instance of this collection is a #$TimeInterval defined by some educational institution: one half of their #$AcademicYear. Since the start dates, end dates and duration may vary depending on the institution and year, instances will be time intervals such as ``StanfordSpringSemester1990-91''.")

;;; #$AcademicTrimester
(#$isa #$AcademicTrimester #$TemporalObjectType)
(#$genls #$AcademicTrimester #$TimeInterval)
(#$comment #$AcademicTrimester "Each instance of this collection is a #$TimeInterval defined by some educational institution: one third of their #$AcademicYear. Since the start dates, end dates, and duration may all vary depending on the institution and year, instances of this collection must unfortunately be time intervals like UCLASpringTrimester1990-91.")

;;; #$AcademicYear
(#$isa #$AcademicYear #$TemporalObjectType)
(#$genls #$AcademicYear #$TimeInterval)
(#$comment #$AcademicYear "Each instance of this collection is an annually recurring #$TimeInterval defined by an educational institution.  Since the start dates, end dates, and duration may all vary depending on the institution, the year, etc., instances of this collection must unfortunately be time intervals like Stanford1989-90AcademicYear.")

;;; #$Acceleration
(#$isa #$Acceleration #$DerivedNumericAttributeType)
(#$genls #$Acceleration #$PhysicalAttribute)
(#$genls #$Acceleration #$ScalarInterval)
(#$comment #$Acceleration "Acceleration is the change in speed of an object per unit time.  It is a measurable physical quantity, measured in units such as MilesPerHourPerSecond.")

;;; #$AccessingAnIBT
(#$isa #$AccessingAnIBT #$DefaultDisjointScriptType)
(#$isa #$AccessingAnIBT #$TemporalObjectType)
(#$genls #$AccessingAnIBT #$InformationTransferEvent)
(#$genls #$AccessingAnIBT #$TransferIn)
(#$genls #$AccessingAnIBT #$PurposefulAction)
(#$genls #$AccessingAnIBT #$MentalActivity)
(#$comment #$AccessingAnIBT "A collection of information transfer events.  Each element of #$AccessingAnIBT is an action by which an agent accesses the content of some IBT (i.e., an element of #$InformationBearingThing).  Examples include (getting information from) reading a newspaper, watching a film, listening to a musical performance, decoding an encrypted message, seeing a traffic police officer wave you on, or hearing your roommate ask you to take out the trash.  Of course, communication conventions play a role here.  In the #$NaiveInformationMt, Cyc simply assumes that an agent who accesses an IBT understands its content afterwards.  In the #$InformationGMt, Cyc makes the more complicated inference that an agent who accesses an IBT understands its content afterwards only if the agent is able to get the encoded information using a convention familiar to that agent.  See also #$CommunicationConvention, #$hasCommConvention, #$usesCommConventionForInfo.")

;;; #$Account
(#$isa #$Account #$AccountType)
(#$genls #$Account #$AuthorizedAgreement)
(#$genls #$Account #$LegalAgreement)
(#$comment #$Account "A collection of objects; a subset of #$LegalAgreement.  Each element of #$Account is a recorded obligation (of some particular type) between specified parties, consisting of `funds' which typically can be added to and drawn upon.  Examples include the instances of #$RetirementAccount, #$TravelExpenseAccount, and of the many types of #$FinancialAccount.  Note that the contents of an account need not be monetary; for example, the contents may be amounts of time, as in the subsets #$VacationAccount or a #$SickLeaveAccount.  #$Account does NOT include debt obligations of fixed face value that cannot be increased or reduced (such as a bond).")

;;; #$AccountStatusAttribute
(#$isa #$AccountStatusAttribute #$SiblingDisjointAttributeType)
(#$genls #$AccountStatusAttribute #$AttributeValue)
(#$comment #$AccountStatusAttribute "A collection of attributes.  Each element of #$AccountStatusAttribute is an attribute that describes the obligational status of an #$Account; e.g.,#$PaidInFull, #$InComplianceWithPaymentSchedule, #$PaymentOverdue, #$AccountInactive.")

;;; #$AccountType
(#$isa #$AccountType #$TemporalStuffType)
(#$isa #$AccountType #$SiblingDisjointCollection)
(#$genls #$AccountType #$ExistingObjectType)
(#$comment #$AccountType "A collection of collections.  Each element of #$AccountType is a collection of financial accounts of some type.  Examples: #$SavingsAccount, #$CreditCardAccount, #$RetirementAccount, #$SocialSecurityAccount, #$TravelExpenseAccount.  Typically, accounts are denominated in units of #$Money.")

;;; #$Acknowledging-CommunicationAct
(#$isa #$Acknowledging-CommunicationAct #$TemporalObjectType)
(#$isa #$Acknowledging-CommunicationAct #$DefaultDisjointScriptType)
(#$genls #$Acknowledging-CommunicationAct #$CommunicationAct-Single)
(#$comment #$Acknowledging-CommunicationAct "The collection of actions which are #$performedBy one #$Agent to convey information about the receipt of a prior #$CommunicationAct-Single which was #$performedBy another #$Agent.  An example: Judy saying `No' in response to Jane's prior act of saying `Will you clean the toaster.'")

;;; #$AcquaintanceAttribute
(#$isa #$AcquaintanceAttribute #$SocialAttributeType)
(#$genls #$AcquaintanceAttribute #$AttributeValue)
(#$comment #$AcquaintanceAttribute "The collection of attributes that specify ways in which (and/or degrees to which) one person is acquainted with another  E.g., some instances of this collection are:  #$FamousPersonAcquaintance, #$TrueFanAcquaintance, #$IntimateAcquaintance, #$FrequentContactAcquaintance, etc.")

;;; #$Action
(#$isa #$Action #$TemporalObjectType)
(#$isa #$Action #$ScriptType)
(#$genls #$Action #$Event)
(#$comment #$Action "A collection of events.  Each instance of #$Action is an event in which something is done by some agent.  (See #$doneBy.)  Actions may include any event in which one or more actor(s) effect some change(s) in the tangible or intangible state of the world, typically by some expenditure of effort or energy.  But note that it is not required that any tangible object be moved, changed, produced, or destroyed for an action to occur; the effects of actions may be intangible (such as the change in a bank balance, or the intimidation of a subordinate).  Depending upon the context, actors may be animate or inanimate, conscious or nonconscious.  For actions that are intentional, see also #$PurposefulAction, #$performedBy.")

;;; #$ActionOnObject
(#$isa #$ActionOnObject #$ScriptType)
(#$isa #$ActionOnObject #$TemporalObjectType)
(#$genls #$ActionOnObject #$Action)
(#$comment #$ActionOnObject "The collection of events in which some doer acts on an object. Each element of #$ActionOnObject is an action in which both the roles of #$doneBy and #$objectActedOn (qq.v.) are filled.  Positive examples: someone typing on a keyboard; a tornado destroying a building.  Negative examples: a person dancing; wind blowing.")

;;; #$ActorSlot
(#$isa #$ActorSlot #$PredicateCategory)
(#$genls #$ActorSlot #$ExtensionalRepresentationPredicate)
(#$genls #$ActorSlot #$BinaryPredicate)
(#$genls #$ActorSlot #$Role)
(#$comment #$ActorSlot "A collection of binary predicates.  Each element of #$ActorSlot relates some instance of #$Event to a thing involved in that event (here called a `participant').  The first argument of every #$ActorSlot is an instance of #$Event, and the second argument is an instance of #$SomethingExisting, denoting a participant in that event.  Each specialized actor slot indicates HOW its participant participates in the event, i.e., in what role (e.g., #$inputs, #$outputs, #$doneBy).  `Participant' does NOT include the time of the event's occurrence, external representations of the event, and other more remotely related things that are not directly or indirectly `involved' in the occurrence of the event.")

;;; #$Address-LocationDesignator
(#$isa #$Address-LocationDesignator #$ObjectType)
(#$genls #$Address-LocationDesignator #$CharacterString)
(#$genls #$Address-LocationDesignator #$AttributeValue)
(#$comment #$Address-LocationDesignator "A collection of strings.  Each element of #$Address-LocationDesignator is a string that denotes an address.  Each string indicates one entire address.  For example: `President Bill Clinton, White House,, 1600 Pennsylvania Avenue, Washington, DC.")

;;; #$Adjective
(#$isa #$Adjective #$LinguisticObjectType)
(#$genls #$Adjective #$SpeechPart)
(#$comment #$Adjective "The collecton of all adjectives. Adjectives are words which can modify nouns. Many adjectives have comparative and superlative forms. Example: `red'.")

;;; #$Administrator
(#$isa #$Administrator #$OccupationType)
(#$genls #$Administrator #$DeskWorker)
(#$comment #$Administrator "A collection of persons; a subset of #$Professional.  Each element of #$Administrator is an employee of an organization who is responsible for managing its organizational affairs.  Elements of #$Administrator may or may not also be required to manage people.  If so, then they are also #$Managers (q.v.).")

;;; #$Admiration
(#$isa #$Admiration #$FeelingAttributeType)
(#$genls #$Admiration #$Respect)
(#$comment #$Admiration "A feeling of strong approval.  An intense positive attitude towards another person(s) or group.  May be accompanied by emulation.  #$Admiration is different than #$Respect (qv).  This is a collection --- see #$Happiness for an explanation.  Some more specialized #$FeelingAttributeTypes than #$Admiration are #$Wonder-Admiration, #$Adulation, #$Awe, etc. ")

;;; #$AdultAnimal
(#$isa #$AdultAnimal #$ExistingObjectType)
(#$genls #$AdultAnimal #$BiologicalStageOfDevelopment)
(#$genls #$AdultAnimal #$Animal)
(#$comment #$AdultAnimal "The collection of all adult animals (including adult people), meaning all elements of #$Animal that are mature enough to bear offspring, or older.")

;;; #$AdultFemalePerson
(#$isa #$AdultFemalePerson #$ExistingObjectType)
(#$genls #$AdultFemalePerson #$FemalePerson)
(#$genls #$AdultFemalePerson #$HumanAdult)
(#$comment #$AdultFemalePerson "The collection of all women; i.e., #$Persons who are adult and female")

;;; #$Adverb
(#$isa #$Adverb #$LinguisticObjectType)
(#$genls #$Adverb #$SpeechPart)
(#$comment #$Adverb "The collection of all adverbs. Adverbs are words which can modify adverbs, verbs, or adjectives. Many adverbs are morphologically derived from adjectives. Example: `slowly'.")

;;; #$Advertising
(#$isa #$Advertising #$ScriptType)
(#$isa #$Advertising #$TemporalObjectType)
(#$genls #$Advertising #$CommunicationAct-Single)
(#$comment #$Advertising "A collection of #$CommunicationAct-Singles.  In an #$Advertising event, someone is communicating, to potential customers of an #$Agent, the desire of that agent to do business with those customers (either to `do business' in general or to sell them something specific.")

;;; #$Affection
(#$isa #$Affection #$FeelingAttributeType)
(#$genls #$Affection #$FeelingAttribute)
(#$comment #$Affection "A feeling of fondness for someone or something.  Sympathy, liking, warmth, tenderness.  This is a #$Collection --- for an explanation of that, see #$Happiness.  Some more specialized #$FeelingAttributeTypes than #$Affection are #$Love, #$Passion, etc.")

;;; #$Afternoon
(#$isa #$Afternoon #$TemporalObjectType)
(#$genls #$Afternoon #$QualitativeTimeOfDay)
(#$comment #$Afternoon "An #$Afternoon is the daily #$Event where the #$Sun moves from its `highest' position in the daily cycle and `sets', i.e from noon till #$Sunset.  A #$Midday overlaps the start of an #$Afternoon, and an #$Evening is #$contiguousAfter an #$Afternoon.  Each #$Afternoon is #$temporallyFinishedBy a #$Sunset.")

;;; #$Agent
(#$isa #$Agent #$ExistingObjectType)
(#$genls #$Agent #$CompositeTangibleAndIntangibleObject)
(#$comment #$Agent "An agent is something which can show independent action, whether conscious or not.  #$Agent represents the collection of all agents.  Most animals are considered agents, in most contexts; so are most organizations.   Most plants are not agents, in most contexts.  Inanimate devices are sometimes considered agents, in certain contexts.  This is one of those concepts which is important yet very hard to define precisely.  Here is some elaboration, to help convey the intended meaning of the basic criterion for agenthood:  It must seem that a kind of decision-making is going on, even if it's down at the `mindless' level of the reflex reaction of a spider leg to heat, or the reflex reaction of a Human Resources Department rejecting an applicant with no formal degree.  It generally `sounds right' or `feels  natural' to assign causality to agents, rather than some larger or smaller entity.  E.g., it is more natural to say `Fred wrote an essay' than to say `Fred's left hand wrote an essay' or, at the other extreme, to say `The Solar System wrote an essay'.  Similarly, we might very well talk about `Microsoft' buying IBM, but it would be unnatural and even incorrect to talk about a much larger entity (`corporate America') or smaller entity (`the Microsoft lawyers') as the performer of that buying action.")

;;; #$AgentiveNoun
(#$isa #$AgentiveNoun #$LinguisticObjectType)
(#$genls #$AgentiveNoun #$SpeechPart)
(#$comment #$AgentiveNoun "The collection of all nouns in the agentive form.  Agentive nouns usually denote the `doer' or `performer' of some action, and often end in `-er' or `-or'. Example: `runner'.")

;;; #$Agility
(#$isa #$Agility #$ScriptPerformanceAttributeType)
(#$genls #$Agility #$ScriptPerformanceAttribute)
(#$comment #$Agility "#$Agility is the #$ScriptPerformanceAttributeType for describing actions in which the performer's whole body moves precisely and in a well-coordinated fashion.")

;;; #$Agreement
(#$isa #$Agreement #$ExistingObjectType)
(#$genls #$Agreement #$SupposedToBeMicrotheory)
(#$genls #$Agreement #$IntangibleExistingThing)
(#$comment #$Agreement "A collection of `objects' with temporal extent.  Each element of #$Agreement involves two or more parties, who agree that certain propositions should be true.  Making the propositions true may require some action or commitment of wealth on the part of one or more of the #$agreeingAgents.  Thus, elements of #$Agreement will usually involve some instances of #$Obligation.
Note:  Elements of #$Agreement and #$Obligation differ, however, in that an #$obligatedAgent is responsible for the truth of all of the propositions in an obligation.  In an agreement, some agents may not be responsible for all of the propositions in the agreement being true. For example, in a loan agreement, the borrower agrees to give the lender back the money, but the borrower is the only #$obligatedAgent for the repayment.  Note that #$obligatedAgents need not be among the #$agreeingAgents in the agreement that involves or generates the obligation.  For example, the Board of Directors of XYZCorporation may agree that some non-director will assume the post and duties of President of XYZCorporation.  Moreover, #$agreeingAgents aren't always obligatedAgents; e.g., Wanda and Paul may agree that Paul alone is obligated to do some task.
Examples include instances of #$PeaceAccord, #$LegalAgreement, #$InformalAgreement, #$BusinessPartnershipAgreement, #$WorkAgreement, #$SalesAgreement, #$MaintenanceAgreement, #$Reservation, #$Appointment, etc.")

;;; #$AgreementNote
(#$isa #$AgreementNote #$SharedNote)
(#$comment #$AgreementNote "Elements of #$Agreement (and of its subsets) are #$Microtheory instances containing propositions representing what some number of parties have agreed upon. An #$Agreement may contain a set of #$Obligations on the part of one or more of the parties. An #$Agreement may also be just a set of beliefs that the parties have decided to share. To indicate which propositions are true in an #$Agreement, regardless of whether they are true in reality, use #$ist-Agreement. (#$ist-Agreement AGREEMENT PROP) means that PROP is a #$CycFormula expressing something that was agreed upon in AGREEMENT. Other relevant vocabulary: (#$agreeingAgents AGREEMENT AGENT) means that AGENT is one of the parties agreeing to AGREEMENT. (#$subAgreements AGREEMENT1 AGREEMENT2) means that AGREEMENT2 is a part of (is included in) AGREEMENT1. (#$governedByAgreement ACTION AGREEMENT) means that ACTION is governed by the terms of AGREEMENT. (#$agreementForbids AGREEMENT AGENT ACTION-TYPE) means that AGREEMENT forbids AGENT from performing elements of ACTION-TYPE. (#$agreementPeriod AGREEMENT TIME) means that AGREEMENT is considered to be true during the time period TIME.")

;;; #$AilmentCondition
(#$isa #$AilmentCondition #$PhysiologicalConditionType)
(#$genls #$AilmentCondition #$PhysiologicalCondition)
(#$comment #$AilmentCondition "The most general collection of ailment events; a subset of #$PhysiologicalCondition, and a subset of #$Event.  An instance of #$AilmentCondition is a dynamic state of sickness, injury, or physiological impairment.  Having an ailment is an event:  it has temporal aspects, it progresses dynamically, etc., it is not just `being in some static state of un-wellness.'   Some subsets of #$AilmentCondition are: #$RespiratoryAilment, #$HeartCondition, #$Cancer, #$MotionSickness, #$Poisoning, #$Infection, #$InjuryCondition.  If a particular person suffers from asthma, that is an element of #$AilmentCondition.  Each #$AilmentCondition is a state of actual, developed sickness or impairment, rather than the event of getting sick or becoming impaired.  Also note that each type of ailment, such as #$Asthma, is the set of all `cases' or `instances' of individuals suffering from that condition.")

;;; #$Air
(#$isa #$Air #$TangibleStuffStateType)
(#$genls #$Air #$Mixture)
(#$genls #$Air #$GaseousTangibleThing)
(#$comment #$Air "A collection of tangibles; a subset of #$GaseousTangibleThing.  Each element of #$Air is one `piece' among all the portions of the atmosphere of the Earth, considered as a substance present in various places, in various quantities, under various pressures, etc.  Examples: the #$AirInAustin; the stuffy air in my office; the thin air atop Annapurna.  See also #$TheAtmosphereQuaSinglePieceOfStuff, which is all ambient #$Air on the planet taken as a single object.")

;;; #$AirForce
(#$isa #$AirForce #$ExistingObjectType)
(#$genls #$AirForce #$MilitaryOrganization)
(#$comment #$AirForce "A collection of military organizations.  An element of #$AirForce is a military organization, modern or historical, composed mainly of airborne forces: bombers, fighters, torpedo planes, parachute troops, surveillance aircraft, etc., and having the function of defending or attacking air space, ships, or ground targets.")

;;; #$AirForcePersonnel
(#$isa #$AirForcePersonnel #$OccupationType)
(#$genls #$AirForcePersonnel #$MilitaryPerson)
(#$comment #$AirForcePersonnel "A collection of people, a subset 
of #$MilitaryPerson. Each element of this collection is
somebody who works for an #$AirForce.")

;;; #$AirRespiration
(#$isa #$AirRespiration #$TemporalStuffType)
(#$isa #$AirRespiration #$DefaultDisjointScriptType)
(#$genls #$AirRespiration #$Respiration)
(#$comment #$AirRespiration "A collection of activities constituting a natural #$PhysiologicalFunction; #$AirRespiration is the collection of all #$Respiration events in which an organism trades some of the carbon dioxide in its tissues for oxygen from the atmosphere.")

;;; #$AirTransportationDevice
(#$isa #$AirTransportationDevice #$ExistingObjectType)
(#$genls #$AirTransportationDevice #$TransportationDevice)
(#$comment #$AirTransportationDevice "A collection of physical devices.  An instance of #$AirTransportationDevice is a device used for transportation through the air.  For example, the Goodyear Blimp, Air Force One, and the #$SpaceShuttleAtlantis.  Subsets of #$AirTransportationDevice include the collections #$Airplane, #$Helicopter, #$HotAirBalloon, #$GroundToOrbitVehicle (such as Atlas rockets or the Space Shuttles), and so on.")

;;; #$AirlineCompany
(#$isa #$AirlineCompany #$ExistingObjectType)
(#$genls #$AirlineCompany #$Business)
(#$genls #$AirlineCompany #$TransportationCompany)
(#$comment #$AirlineCompany "The collection of all air transportation companies.  An element of #$AirlineCompany is a #$TransportationCompany that operates airplanes to transport goods or people in exchange for money.")

;;; #$Airplane
(#$isa #$Airplane #$ProductType)
(#$isa #$Airplane #$ExistingObjectType)
(#$genls #$Airplane #$TransportationDevice-Vehicle)
(#$genls #$Airplane #$ContainerProduct)
(#$genls #$Airplane #$AirTransportationDevice)
(#$comment #$Airplane "The colection of all fixed-wing (except #$Warplanes), heavier-than-air, self-powered flying machines (excluding cruise missiles).")

;;; #$AirplaneRunway
(#$isa #$AirplaneRunway #$ExistingObjectType)
(#$genls #$AirplaneRunway #$PathForWheeledVehicles)
(#$comment #$AirplaneRunway "An airstrip, at an airport, on an aircraft carrier, or in some field, upon which airplanes taxi, take off, and land.")

;;; #$Airport-Physical
(#$isa #$Airport-Physical #$ExistingObjectType)
(#$genls #$Airport-Physical #$ConstructionArtifact)
(#$comment #$Airport-Physical "The collection of all airfields, where airplanes take off and land.  An Airport-Physical definitely has a runway, may or may not have any other buildings.  If it's the grounds of an #$AirportOrganization, some of those other features will be present.")

;;; #$AirportOrganization
(#$isa #$AirportOrganization #$ExistingObjectType)
(#$genls #$AirportOrganization #$Organization)
(#$comment #$AirportOrganization "A collection of organizations.  An element of #$AirportOrganization is an organization that manages and controls particular airports and their appurtenant facilities; e.g., #$LaGuardiaAirport.")

;;; #$Alertness
(#$isa #$Alertness #$PrimitiveAttributeType)
(#$genls #$Alertness #$ScalarInterval)
(#$genls #$Alertness #$AnimalPhysiologicalAttribute)
(#$comment #$Alertness "#$Alertness is an #$AnimalPhysiologicalAttribute which specifies how sleepy or alert an animal is.  Levels of #$Alertness include #$Asleep, #$Sleepy, and #$Awake.")

;;; #$AllergicReaction
(#$isa #$AllergicReaction #$PhysiologicalConditionType)
(#$genls #$AllergicReaction #$AilmentCondition)
(#$comment #$AllergicReaction "A collection of dynamic, physiological states.  An instance of #$AllergicReaction is an event in which an organism which is exposed to a particular substance (e.g., pollen, mold) develops some abnormality or impairment of its physiological condition as a result of interacting with the substance.  Allergic reactions to some types of substances occur widely in members of a species; e.g., #$PoisonIvyPoisoning in humans.  But other allergic reactions affect only a small proportion of a species, such as human allergies to penicillin.  This concept is the set of events in which allergic reactions are `taking place', not abstract unrealized potential situations such as `John is allergic to milk.'  I.e., if John were allergic to milk, and he drank some, and then proceeded to have a whopping bad allergic reaction, that latter event would be an element of #$AllergicReaction.")

;;; #$Always-TimeInterval
(#$isa #$Always-TimeInterval #$TimeInterval)
(#$comment #$Always-TimeInterval "The interval of time which encompasses all time.  In more general MTs we remain agnostic as to whether this time interval has either a beginning or an end, but if it does, #$Always-TimeInterval begins when time itself begins and ends only when time ends completely.  Every other instance of #$TimeInterval is a #$timeSlices of #$Always-TimeInterval. ")

;;; #$Ambulance
(#$isa #$Ambulance #$ProductType)
(#$isa #$Ambulance #$ExistingObjectType)
(#$genls #$Ambulance #$RoadVehicle)
(#$comment #$Ambulance "The collection of all RoadVehicles that are equipped primarily for transporting wounded, injured or sick persons.")

;;; #$Ampere
(#$isa #$Ampere #$StandardUnitOfMeasure)
(#$isa #$Ampere #$MKSUnitOfMeasure)
(#$isa #$Ampere #$UnitOfCurrent)
(#$isa #$Ampere #$UnitOfMeasureNoPrefix)
(#$resultIsa #$Ampere #$PhysicalAttribute)
(#$resultIsa #$Ampere #$ScalarInterval)
(#$argsIsa #$Ampere #$CycSystemRealNumber)
(#$comment #$Ampere "The standard unit of measure of electrical current, equivalent to a 1-#$Coulomb flow of current, or 1 #$Volt across a resistance of 1 #$Ohm.")

;;; #$Amphibian
(#$isa #$Amphibian #$BiologicalClass)
(#$genls #$Amphibian #$Vertebrate)
(#$genls #$Amphibian #$NonPersonAnimal)
(#$comment #$Amphibian "The collection of all #$Organism-Wholes which are members of the #$BiologicalClass Amphibia, being a specialization of #$Vertebrate.  
Members of this class are smooth skinned #$Vertebrates which hatch from eggs to form aquatic larvae [see #$Larva].  These larvae metamorphose into an air-breathing adult [see AirBreathingVertebrate] (normally) having #$Lungs.  Subsets of this collection include #$Frogs and #$Salamanders.")

;;; #$Anesthesia
(#$isa #$Anesthesia #$ScriptType)
(#$genls #$Anesthesia #$DrugTherapy)
(#$comment #$Anesthesia "A collection of events; a subset of #$DrugTherapy (q.v.).  In an instance of #$Anesthesia, a #$BiologicalLivingObject undergoes the effect of some instance of #$Anesthetic, the effect of which is to eliminate the perception of pain.  #$Anesthesia events occur in connection with other medical care events, so that a patient will not feel the pain or discomfort that would otherwise be associated with those medical procedures.  #$Anesthetics are of various chemical kinds, work in various ways, and can be administered in various ways.  They may topically numb an area, they may poison the central nervous system to the point where the animal loses consciousness, etc.  The resulting anesthetic therapies thus may differ, according to the type of anesthetic used; for example, the patient may or may not be conscious during an instance of #$Anesthesia.  See also #$AdministeringADrug.")

;;; #$Anger
(#$isa #$Anger #$FeelingAttributeType)
(#$genls #$Anger #$Frustration)
(#$comment #$Anger "Intense feeling of displeasure and usually of antagonism.  This is a #$Collection --- for an explanation of that, see #$Happiness.  Some more specialized #$FeelingAttributeTypes than #$Anger include #$Belligerence, etc.")

;;; #$Angle
(#$isa #$Angle #$ObjectType)
(#$genls #$Angle #$GeometricThing)
(#$comment #$Angle "A collection of #$GeometricThings.  Each element of #$Angle is a pair of line segments, planes (or, more generally, n-dimensional hyperplanes) that share an endpoint, edge (or, more generally, an [n-1]-dimensional hyperedge).")

;;; #$Angstrom
(#$isa #$Angstrom #$UnitOfDistance)
(#$isa #$Angstrom #$MKSUnitOfMeasure)
(#$isa #$Angstrom #$UnitOfMeasureWithPrefix)
(#$resultIsa #$Angstrom #$Distance)
(#$resultIsa #$Angstrom #$ScalarInterval)
(#$argsIsa #$Angstrom #$CycSystemRealNumber)
(#$comment #$Angstrom "Extremely small unit of length, used especially for measuring the wavelength of light, derived by dividing a meter by 10,000,000,000.  Abbreviation: A (with a little circle on the top of the `A').  1 A = 1/10,000,000,000 (i.e., 10^-10) meter.")

;;; #$AngularAccelerationRate
(#$isa #$AngularAccelerationRate #$MeasurableAttributeType)
(#$genls #$AngularAccelerationRate #$ScalarInterval)
(#$genls #$AngularAccelerationRate #$PhysicalAttribute)
(#$comment #$AngularAccelerationRate "#$AngularAccelerationRate is the rate at which the #$RateOfRotation of an object changes.It is a measurable physical quantity, measured in units such as radians per second per second.")

;;; #$Animal
(#$isa #$Animal #$BiologicalKingdom)
(#$genls #$Animal #$PerceptualAgent)
(#$genls #$Animal #$AnimalBLO)
(#$genls #$Animal #$SolidTangibleThing)
(#$genls #$Animal #$Organism-Whole)
(#$comment #$Animal "The collection of all animals; this large class of organisms is one instance of #$BiologicalKingdom.  Animals are typically motile, living, whole organisms; they are elements of #$Heterotroph, incapable of performing instances of #$Photosynthesis.  Animal cells contain cholesterol and lack cell walls made of cellulose.  #$Person is a subset of #$Animal; see also #$NonPersonAnimal.")
(#$synonymousExternalConcept #$Animal #$SENSUS-Information1997 "ANIMAL")

;;; #$AnimalActivity
(#$isa #$AnimalActivity #$ScriptType)
(#$isa #$AnimalActivity #$TemporalObjectType)
(#$genls #$AnimalActivity #$Action)
(#$genls #$AnimalActivity #$CompositePhysicalAndMentalEvent)
(#$comment #$AnimalActivity "A collection of events.  Each element of #$AnimalActivity is an action whose performer(s) (see #$doneBy) belong to the collection #$Animal.")

;;; #$AnimalBLO
(#$isa #$AnimalBLO #$ExistingObjectType)
(#$genls #$AnimalBLO #$BiologicalLivingObject)
(#$comment #$AnimalBLO "The subset of #$BiologicalLivingObject which includes all the elements of #$Animal and of #$AnimalBodyPart and #$AnimalBodyRegion.")

;;; #$AnimalBodyPart
(#$isa #$AnimalBodyPart #$ExistingObjectType)
(#$genls #$AnimalBodyPart #$AnimalBodyRegion)
(#$comment #$AnimalBodyPart "The collection of all the anatomical parts and physical regions of all living animals; a subset of #$OrganismPart.  Each element of #$AnimalBodyPart is a piece of some live animal and thus is itself an instance of #$BiologicalLivingObject.  #$AnimalBodyPart includes both highly localized organs (e.g., hearts) and physical systems composed of parts distributed throughout an animal's body (such as its circulatory system and nervous system).  
Note: Severed limbs and other parts of dead animals are NOT included in this collection; see #$DeadFn.")

;;; #$AnimalBodyPartType
(#$isa #$AnimalBodyPartType #$SiblingDisjointCollection)
(#$genls #$AnimalBodyPartType #$ExistingObjectType)
(#$comment #$AnimalBodyPartType "The collection of all the types of #$AnimalBodyParts.  An #$AnimalBodyPartType  is a characterization of body parts by structure and/or function.   Some elements of this collection include #$SpinalColumn, #$Eyelash, #$NervousSystem, #$Urethra, #$Wing-AnimalBodyPart, #$HeelOfPalm, etc.  As can be seen from those examples, #$AnimalBodyPartType is not organized along species/order/class/phylum/... taxonomic lines.")

;;; #$AnimalBodyRegion
(#$isa #$AnimalBodyRegion #$ExistingObjectType)
(#$genls #$AnimalBodyRegion #$OrganismPart)
(#$genls #$AnimalBodyRegion #$AnimalBLO)
(#$comment #$AnimalBodyRegion "The set of parts of an animal's body that one might point to, operate on, photograph, transplant, etc.  So this is a collection of (conceptual) spatial subdivisions of the bodies of #$Animals, generally contiguous and having some more or less clear boundary.  Some elements of this collections are Einstein's head, #$SantasBeard, and Babe Ruth's right arm.  Other elements of this set are what might be considered unhealthy body regions, such as a blister, a puncture wound, a bruise, etc. -- but those are still clearly a part of an animal's body, can be pointed to, photographed, bandaged up, etc.   
Note that this concept is quite different from an animal body `system' (such as the lymph system, the nervous system, etc.) which comprises a small portion of an animal's total mass but is distributed throughout the animal's body -- see #$AnimalBodyPart.  (At the naive, commonsense level of physiology, and for almost all purposes, it is perfectly acceptable to conceptualize Santa's beard as one #$AnimalBodyRegion, and the same for Farrah Fawcett's hair, etc.  A borderline case of this is:  Cher's fingernails.  In some contexts, one would treat those as an #$AnimalBodyRegion, and in other contexts one would treat them as ten separate #$AnimalBodyRegions.)")

;;; #$AnimalMigration
(#$isa #$AnimalMigration #$ScriptType)
(#$isa #$AnimalMigration #$TemporalObjectType)
(#$genls #$AnimalMigration #$LocomotionEvent)
(#$genls #$AnimalMigration #$Translation-RoundTrip)
(#$comment #$AnimalMigration "The collection of regular, species-linked movements of an animal or group of animals from one place to another, usually with a return to the starting point after a certain period of time.  In some species, the migration cycle occurs once in a lifetime, while others migrate annually on a seasonal basis.   Migration is typically linked with an animal's reproductive cycle (as in salmon), but may also involve seasonal relocation to a more hospitable climate and/or more plentiful food supply. For example, many birds exhibit seasonal migration; e.g., native Northeastern U.S. birds that spend their winters in the Southern U.S.")

;;; #$AnimalPhysiologicalAttribute
(#$isa #$AnimalPhysiologicalAttribute #$AttributeType)
(#$genls #$AnimalPhysiologicalAttribute #$AttributeValue)
(#$genls #$AnimalPhysiologicalAttribute #$PhysiologicalAttribute)
(#$comment #$AnimalPhysiologicalAttribute "The broadest collection of attributes of #$Animals that describe the physiological aspects of an animal, including its physiological (1) capacities, (2) conditions, and (3) states.  Examples include: (1) Capacities: #$Fertile, #$HearingImpaired, #$Paraplegic; (2) Conditions: #$Anemic, #$AthleticPhysicalBuild; (3) States: #$Intoxicated, #$Injured, #$Inflamed.  #$PlantPhysiologicalAttributes, such as #$InBloom, are excluded.")

;;; #$AnimalSound
(#$isa #$AnimalSound #$TemporalStuffType)
(#$genls #$AnimalSound #$AudibleSound)
(#$genls #$AnimalSound #$InformationBearingWavePropagation)
(#$comment #$AnimalSound "A collection of information bearing things (IBTs); a subset of #$InformationBearingWavePropagation.  Each element of #$AnimalSound is a sound of a type which originally was, and typically is, made by an animal using just its body parts (though such a sound may subsequently have been reproduced by imitation or recording).  For example, instances of #$Birdsong, #$NeighingSound, #$PurringSound, #$BarkingSound, #$BrayingSound.  Note that the restriction to sounds produced by body parts alone excludes noises produced by moving external objects; i.e., #$AnimalSound does NOT include rustling the leaves underfoot, splashing water, or playing a musical instrument.")

;;; #$AnimalWalkingProcess
(#$isa #$AnimalWalkingProcess #$ObjectType)
(#$isa #$AnimalWalkingProcess #$TemporalStuffType)
(#$isa #$AnimalWalkingProcess #$DefaultDisjointScriptType)
(#$genls #$AnimalWalkingProcess #$LocomotionProcess)
(#$genls #$AnimalWalkingProcess #$SimpleWholeBodyMovement)
(#$comment #$AnimalWalkingProcess "The collection of individual #$LocomotionProcess es in which an #$Animal agent travels on foot using voluntary movements of its legs.")

;;; #$AnnualClimateCycle
(#$isa #$AnnualClimateCycle #$ScriptType)
(#$genls #$AnnualClimateCycle #$WeatherEvent)
(#$comment #$AnnualClimateCycle "A collection of events.  Each element of #$AnnualClimateCycle is an extended event, one year in length, which encompasses #$subEvents describing the changing of the seasons.  Subsets include #$TemperateClimateCycle, #$HumidSubtropicalClimateCycle, etc.  See also the comments on #$ClimateCycleType, #$hasClimateType.")

;;; #$AnnualEventType
(#$isa #$AnnualEventType #$Collection)
(#$genls #$AnnualEventType #$TemporalObjectType)
(#$comment #$AnnualEventType "A collection of collections.  The instances of an element of #$AnnualEventType are synchronized with the calendar.  If ?X is an #$AnnualEventType, then one occurs each year.  For example, #$ChristmasHoliday is an #$AnnualEventType, because one occurs each year, synchronized with the calendar.")

;;; #$AnteriorRegionFn
(#$isa #$AnteriorRegionFn #$ReifiableFunction)
(#$isa #$AnteriorRegionFn #$IndividualDenotingFunction)
(#$resultIsa #$AnteriorRegionFn #$AnimalBodyRegion)
(#$arg1Isa #$AnteriorRegionFn #$AnimalBodyRegion)
(#$comment #$AnteriorRegionFn "The function (AnteriorRegionFn REGOROBJ), applied to a region or object REGOROBJ, means the region consisting of the front half or section, or the anterior main portion, of REGOROBJ.  It applies only when REGOROBJ itself has an intrinsic front/back orientation, or is a (non-backward-facing) part of a larger region or object that has a front/back orientation.")

;;; #$AntiSymmetricBinaryPredicate
(#$isa #$AntiSymmetricBinaryPredicate #$PredicateCategory)
(#$isa #$AntiSymmetricBinaryPredicate #$Collection)
(#$genls #$AntiSymmetricBinaryPredicate #$BinaryPredicate)
(#$comment #$AntiSymmetricBinaryPredicate "A collection of predicates; the subset of #$BinaryPredicate whose elements represent antisymmetric relations.  A predicate F is an element of #$AntiSymmetricBinaryPredicate if and only if F is a binary predicate and, if both (F X Y) and (F Y X) hold, then X=Y, for every X,Y within the domain and range of F.  For example, #$greaterThanOrEqualTo, #$compatibleBloodTypes.







Note this additional restriction: A Cyc predicate F can be an element of #$AntiSymmetricBinaryPredicate only if the type (i.e., arg-Isa) constraint applicable to F's first argument is not disjoint with the type constraint applicable to F's second argument.  See also #$NoteOnArgumentTypingAndPropertiesOfRelations.")

;;; #$AntiTransitiveBinaryPredicate
(#$isa #$AntiTransitiveBinaryPredicate #$PredicateCategory)
(#$genls #$AntiTransitiveBinaryPredicate #$BinaryPredicate)
(#$genls #$AntiTransitiveBinaryPredicate #$IrreflexiveBinaryPredicate)
(#$comment #$AntiTransitiveBinaryPredicate "A collection of predicates; the subset of #$BinaryPredicate whose elements represent anti-transitive relations.  A predicate F is an element of #$AntiTransitiveBinaryPredicate if and only if F is a binary predicate and, for every X,Y,Z in the domain of F, (#$not (#$and (F X Y)(F Y Z)(F X Z))).  

Note this additional restriction: A Cyc predicate F can be an element of #$AntiTransitiveBinaryPredicate only if the type (i.e., arg-Isa) constraint applicable to F's first argument is not disjoint with the type constraint applicable to F's second argument.  See also #$NoteOnArgumentTypingAndPropertiesOfRelations.")

;;; #$Anticipation-Feeling
(#$isa #$Anticipation-Feeling #$FeelingAttributeType)
(#$genls #$Anticipation-Feeling #$FeelingAttribute)
(#$comment #$Anticipation-Feeling "Emotion accompanying an expectation of something pleasant in the foreseeable future.  This is a collection; for an explanation of a typical #$FeelingAttributeType, see #$Happiness. ")

;;; #$Apathy
(#$isa #$Apathy #$FeelingAttributeType)
(#$genls #$Apathy #$FeelingAttribute)
(#$comment #$Apathy "A lack of interest or concern.  If someone is feeling some measure of #$Apathy, then they typically will have little or no response to things normally expected to excite emotion or interest.  This is a #$Collection --- for an explanation of that, see #$Happiness.  A related #$FeelingAttributeType is #$Boredom.")

;;; #$Appendage-AnimalBodyPart
(#$isa #$Appendage-AnimalBodyPart #$AnimalBodyPartType)
(#$genls #$Appendage-AnimalBodyPart #$SolidTangibleThing)
(#$genls #$Appendage-AnimalBodyPart #$AnimalBodyPart)
(#$comment #$Appendage-AnimalBodyPart "The collection of all appendages of #$Animals.  An appendage is an #$AnimalBodyPart that is connected to, and extends from, the animal's #$Torso (or else from another of its appendages, such as a hand extending from an arm).  Each appendage is used by the #$Animal for one or more functions; altogether, appendages serve a wide variety of functions such as locomotion, manipulation, sensing, fighting, scratching, heat dissipation, balance, etc.")

;;; #$AppropriatingSomething
(#$isa #$AppropriatingSomething #$TemporalObjectType)
(#$isa #$AppropriatingSomething #$DefaultDisjointScriptType)
(#$genls #$AppropriatingSomething #$GainingUserRights)
(#$genls #$AppropriatingSomething #$TakingSomething)
(#$comment #$AppropriatingSomething "A collection of events; a subset of #$TakingSomething and of #$GainingUserRights.  In an instance of #$AppropriatingSomething, an #$Agent takes something that no one else has user rights over, such as air for breathing, or some object which at that time belongs to no one (e.g.,a dime lying in the street).
Note: The English verb `appropriate' can also mean to take something away from someone else, against their will and wrongfully, but that is not what is meant here.  For that, see #$Stealing-Generic.")

;;; #$Approval
(#$isa #$Approval #$FeelingAttributeType)
(#$genls #$Approval #$Satisfaction)
(#$comment #$Approval "The emotion of viewing positively a state of affairs or other agent's actions.  This is a collection; for an explanation of a typical #$FeelingAttributeType, see #$Happiness.")

;;; #$April
(#$isa #$April #$MonthOfYearType)
(#$genls #$April #$CalendarMonth)

;;; #$AquaticOrganism
(#$isa #$AquaticOrganism #$OrganismTypeByHabitat)
(#$genls #$AquaticOrganism #$Organism-Whole)
(#$comment #$AquaticOrganism "The collection of organisms adapted to life underwater, which spend all or most of their time immersed in water.  This includes the elements of #$Fish, also many instances of #$Mollusk, #$SeaMammal, etc.")

;;; #$Area
(#$isa #$Area #$DerivedNumericAttributeType)
(#$genls #$Area #$PhysicalAttribute)
(#$genls #$Area #$ScalarInterval)
(#$comment #$Area "A collection of physical attributes.  Each element of #$Area is an amount of two-dimensional space, i.e., a surface.  Elements of #$Area may be either a fixed interval, such as the area of a rectangle 5 cm x 10 cm, or a range, such as the area of a city lot.  See #$UnitOfArea for the units used by Cyc to measure areas.")

;;; #$Arm
(#$isa #$Arm #$SymmetricAnatomicalPartType)
(#$genls #$Arm #$Appendage-AnimalBodyPart)
(#$comment #$Arm "The collection of all animal arms.  An #$Arm of an animal is one of its #$AnimalBodyParts, more particularly one of its appendages, a limb which it uses for manipulation moreso than for locomotion.  A #$Hand is considered part of an #$Arm.")

;;; #$ArmMovement
(#$isa #$ArmMovement #$TemporalStuffType)
(#$isa #$ArmMovement #$DefaultDisjointScriptType)
(#$genls #$ArmMovement #$BodyMovementEvent)
(#$comment #$ArmMovement "The collection of any movements of an arm that are generated by the #$Animal whose arm it is, through nerve impulses to the arm.  Physically, an #$ArmMovement involves movement of the upper arm or elbow in relation to the body to which it is attached.")

;;; #$Army
(#$isa #$Army #$ExistingObjectType)
(#$genls #$Army #$MilitaryOrganization)
(#$comment #$Army "A collection of military organizations.  An element of #$Army is a military organization, modern or historical, composed mainly of ground forces, which may include infantry, cavalry, artillery, tank and miscellaneous mechanized units, and special forces.  Its personnel may also include support workers such as engineers and medical staff.")

;;; #$ArmyPersonnel
(#$isa #$ArmyPersonnel #$OccupationType)
(#$genls #$ArmyPersonnel #$Soldier)
(#$genls #$ArmyPersonnel #$MilitaryPerson)
(#$comment #$ArmyPersonnel "A collection of people, a subset 
of #$MilitaryPerson. Each element of this collection is
somebody who works for an #$Army.")

;;; #$ArrestingSomeone
(#$isa #$ArrestingSomeone #$ScriptType)
(#$isa #$ArrestingSomeone #$TemporalObjectType)
(#$genls #$ArrestingSomeone #$TakingCustodyOfAnimal)
(#$comment #$ArrestingSomeone "A collection of events.  In an instance of #$ArrestingSomeone, a law enforcement officer arrests another person, who is thereupon taken into custody (#$InCustody).")

;;; #$ArtObject
(#$isa #$ArtObject #$ExistingObjectType)
(#$genls #$ArtObject #$Product)
(#$genls #$ArtObject #$Artifact)
(#$genls #$ArtObject #$CompositeTangibleAndIntangibleObject)
(#$genls #$ArtObject #$InformationBearingObject)
(#$comment #$ArtObject "A collection of information bearing objects (IBOs).  Each element of #$ArtObject is a tangible object that is a work, or a reproduction of a work, in one of the representational or plastic arts, such as a painting, sculpture, ceramic piece, quilt, stained glass composition, etc.  #$ArtObject does NOT include plays, movies, music, performance art, or other activities.  #$ArtObject is a subset of #$InformationBearingObject, but its elements need not have propositional content, although they may.  Examples of #$ArtObject: the #$StatueOfLiberty, the Mona Lisa, a poster reproduction of Van Gogh's `Starry Night', Rodin's `Burghers of Calais', a piece of Ju ware from the Sung Dynasty, the windows of Chartres Cathedral, a series of prints by Picasso.")

;;; #$Arthropod
(#$isa #$Arthropod #$BiologicalPhylum)
(#$genls #$Arthropod #$Invertebrate)
(#$comment #$Arthropod "An instance of #$BiologicalPhylum whose #$taxonMembers include (mostly) the numerous collections of chitin-armored invertebrates that have jointed bodies and limbs, e.g., insects, spiders, crustaceans, etc.")

;;; #$Artifact
(#$isa #$Artifact #$Collection)
(#$genls #$Artifact #$SomethingExisting)
(#$genls #$Artifact #$PartiallyTangible)
(#$comment #$Artifact "A collection of tangible things.  An instance of #$Artifact is a tangible which was more or less intentionally created by an #$Agent (or a group of #$Agents working together) to serve some purpose or perform some function.  By `created', we don't require that the matter itself be created, it is often just the result of some sort of assemblage or modification process, such as a wooden flute that's been whittled from a tree branch, a sawhorse that's been put together out of boards and nails, a coin that's been minted by embossing or by melting liquid silver into a mold, etc.

Let's consider some positive and negative examples.

In addition to the obvious human artifacts (buildings, tools, textiles, power lines), this collection includes certain sorts of things made by #$Animals, such as bird nests, termite mounds, and beaver dams.

Something which just barely squeaks through the intended meaning of this concept is #$YaleUniversity.  In addition to the abstract legal entity, it consists of a set of physical buildings, furnishings, etc.  By contrast, an organization that had no headquarters building, equipment, tangible property, etc. would not be an artifact.  Similarly, a fictional character such as Tom Sawyer is not an artifact (in the context of the story, Tom is not an artifact because he is a real boy; in the context of the real world, Tom is not an artifact because he has no tangible component whatsoever.)

While some artifacts may be alive, or contain living subparts, we do not intend this collection to encompass all organisms which resulted from normal biological reproductive processes.  Your child is not an artifact.

If you do an oil painting of a house that is an artifact, but much more borderline is what you get if you take a rock and just paint it a solid color, say white.  In general that won't be an artifact unless it serves some purpose, such as marking the shoulder of a roadway, but more questionable cases are if the purpose of the white rock is just `to be sold as art' or `to look pretty.'  The white rock might thus be an artifact in certain contexts, but not in others.

Not every instance of #$Path-Generic (q.v.) is necessarily an instance of #$Artifact.  For example, some channels used for navigation may not be artifacts, because even though they are marked with human artifacts (i.e., channel markers) as locations where ships may safely travel, the channel itself may have been a naturally occurring pre-existing thing -- e.g., the #$EnglishChannel.  If a #$Channel-WideStrait were produced or maintained only by constant dredging, it might count as an artifact.  By contrast, each #$Canal, such as #$SuezCanal, is almost certain to be an #$Artifact.")
(#$synonymousExternalConcept #$Artifact #$SENSUS-Information1997 "ARTIFACT")

;;; #$ArtificialMaterial
(#$isa #$ArtificialMaterial #$ExistingStuffType)
(#$genls #$ArtificialMaterial #$Artifact)
(#$comment #$ArtificialMaterial "A collection of substances; a subset of #$Artifact.  An instance of #$ArtificialMaterial is a portion of artificial stuff that was intentionally made by some agent(s), such as #$Plastic or #$SweetNLow. Since #$ArtificialMaterials are intentionally produced, this class does not normally include materials which are merely #$byProducts or #$wasteProducts of an intentional process.  However, what is a byproduct at one time or in one context may be a useful material that would count as an instance of #$ArtificialMaterial in another.")

;;; #$Asleep
(#$isa #$Asleep #$Alertness)
(#$genlAttributes #$Asleep #$Unconscious)
(#$comment #$Asleep "#$Asleep is the #$Alertness attribute of being asleep.  #$Asleep is a specialization of #$Unconscious.  (#$holdsIn (#$YearFn 1776) (#$alertnessLevel RipVanWinkle #$Asleep)).")

;;; #$Assertion
(#$isa #$Assertion #$Collection)
(#$isa #$Assertion #$ObjectType)
(#$genls #$Assertion #$Individual)
(#$genls #$Assertion #$CycIndexedTerm)
(#$genls #$Assertion #$ComputationalObject)
(#$genls #$Assertion #$AbstractInformation)
(#$comment #$Assertion "A collection of computational objects.  Each instance of #$Assertion is either (1) an assertion reified in the Cyc Knowledge Base (i.e., a formula and its associated datastructure, actually in the Cyc KB), or (2) an Epistemological Level #$CycFormula that can be canonicalized and reified as one or more KB assertions.  #$Assertion is used as an argument type for meta-predicates such as #$overrides.")

;;; #$AstronomicalObject
(#$isa #$AstronomicalObject #$ExistingObjectType)
(#$genls #$AstronomicalObject #$InanimateObject-Natural)
(#$genls #$AstronomicalObject #$TangibleThing)
(#$comment #$AstronomicalObject "A collection of tangible objects.  Each element of #$AstronomicalObject is an object of interest to astronomers, which includes the Earth along with other objects in outer space.  Some, but not all, elements of #$AstronomicalObject belong to #$CelestialObject, the collection of heavenly bodies visible from earth.  Examples: #$Polaris-TheStar, the #$Sun, #$PlanetSaturn.")

;;; #$AsymmetricBinaryPredicate
(#$isa #$AsymmetricBinaryPredicate #$PredicateCategory)
(#$isa #$AsymmetricBinaryPredicate #$Collection)
(#$genls #$AsymmetricBinaryPredicate #$BinaryPredicate)
(#$genls #$AsymmetricBinaryPredicate #$IrreflexiveBinaryPredicate)
(#$genls #$AsymmetricBinaryPredicate #$AntiSymmetricBinaryPredicate)
(#$comment #$AsymmetricBinaryPredicate "A collection of predicates; the subset of #$AntiSymmetricBinaryPredicate whose elements represent asymmetric relations.  A predicate F is an element of #$AsymmetricBinaryPredicate if and only if F is a binary predicate and (F X Y) implies (#$not (F Y X)).  For example, #$northOf, #$children, #$greaterThan, #$overrides.



Note this additional restriction: A Cyc predicate F can be an element of #$AsymmetricBinaryPredicate only if the type (i.e., arg-Isa) constraint applicable to F's first argument is not disjoint with the type constraint applicable to F's second argument.  See also #$NoteOnArgumentTypingAndPropertiesOfRelations.")

;;; #$Athlete
(#$isa #$Athlete #$OccupationType)
(#$genls #$Athlete #$Professional)
(#$genls #$Athlete #$Person)
(#$comment #$Athlete "A collection of persons.  Each element of #$Athlete is a person who trains to compete in contests involving physical agility, stamina, or strength.  In the #$JobMt, #$Athlete is a subset of #$Professional (q.v.), and hence in that microtheory represents the collection of professional athletes.")

;;; #$AthleticActivity
(#$isa #$AthleticActivity #$ScriptType)
(#$genls #$AthleticActivity #$Exercising)
(#$comment #$AthleticActivity "Any athletic activity, not just sports events.  E.g., spelunking, or going for a jog, or shooting a few hoops.")

;;; #$AtlanticOcean
(#$isa #$AtlanticOcean #$Entity)
(#$isa #$AtlanticOcean #$Ocean)
(#$comment #$AtlanticOcean "The main body of salt water in the #$WesternHemisphere-Region, bordering on five continents (Western coasts of Europe and Africa, Antarctica, Eastern coasts of North and South Americas).")

;;; #$Atom
(#$isa #$Atom #$ExistingObjectType)
(#$genls #$Atom #$ChemicalObject)
(#$comment #$Atom "A collection of microscopic-scale objects.  Each instance of #$Atom has one atomic nucleus and some number of electrons.  As a default, we assume that an instance of #$Atom has no net charge, i.e., that it has as many instances of #$Electrons as it does of #$Protons in its #$AtomicNucleus; but note there are exceptions, e.g., in the subset #$Ion.")

;;; #$AtomFn
(#$isa #$AtomFn #$CollectionDenotingFunction)
(#$resultIsa #$AtomFn #$ExistingObjectType)
(#$resultGenl #$AtomFn #$Atom)
(#$arg1Isa #$AtomFn #$ElementStuffTypeByNumberOfProtons)
(#$arg1Genl #$AtomFn #$ElementStuff)
(#$comment #$AtomFn "#$AtomFn is a Cyc function, specifically a #$CollectionDenotingFunction.  It may be used to denote any subset of #$Atom which contains all the atoms of a particular element type.  #$AtomFn takes an instance of #$ElementStuffTypeByNumberOfProtons as its single argument and returns the collection of all atoms of that element.  Thus, for any E which is an #$ElementStuffTypeByNumberOfProtons, (#$AtomFn E) returns the subset of #$Atom which contains all the atoms of element type E.   Each atom in the collection (#$AtomFn E) has N protons in its atomic nucleus, where N is the #$atomicNumber of the element type E.  For example, (#$AtomFn #$Carbon) is the collection of carbon atoms, each of which has 6 protons in its nucleus.")

;;; #$AtomicNucleus
(#$isa #$AtomicNucleus #$ExistingObjectType)
(#$genls #$AtomicNucleus #$ChemicalObject)
(#$comment #$AtomicNucleus "A collection of objects; a subset of #$ChemicalObject.  Each instance of #$AtomicNucleus is an object composed of some definite number of instances of #$Proton and some definite number of instances of #$Neutron.  Instances of the collection #$Atom are each composed of one member of #$AtomicNucleus and some number of electrons.")

;;; #$AttemptingFn
(#$isa #$AttemptingFn #$CollectionDenotingFunction)
(#$resultIsa #$AttemptingFn #$ScriptType)
(#$resultGenl #$AttemptingFn #$PurposefulAction)
(#$arg1Isa #$AttemptingFn #$ScriptType)
(#$arg1Isa #$AttemptingFn #$TemporalObjectType)
(#$arg1Genl #$AttemptingFn #$Action)
(#$comment #$AttemptingFn "(#$AttemptingFn ACTION-TYPE) maps from the collection ACTION-TYPE (a subset of #$Action) to a collection of attempts to perform ACTION-TYPE.  Thus the result of (#$AttemptingFn #$Speaking) would be the collection of attempts at speaking, both those attempts which are successes (thus resulting in actual #$Speakings), and those which are failures.  #$AttemptingFn operates on the #$Collection level, and is used to talk about kinds of attempts that can occur.  To talk about the specific attempt that brought about an event which actually occurred, use #$SuccessfulAttemptFn.")

;;; #$AttributeType
(#$isa #$AttributeType #$Collection)
(#$genls #$AttributeType #$ObjectType)
(#$comment #$AttributeType "A collection of collections.  Each element of #$AttributeType is a collection of attributes.  Each element of #$AttributeType is a subset of #$AttributeValue (q.v.).  Examples include #$SensoryAttribute, #$BodyPartPosition, #$OrientationAttribute, #$SecurityClearanceLevel, #$ComputerVideoResolution, #$TorqueVector, and many more.")

;;; #$AttributeValue
(#$isa #$AttributeValue #$AttributeType)
(#$isa #$AttributeValue #$Collection)
(#$genls #$AttributeValue #$IntangibleIndividual)
(#$genls #$AttributeValue #$Individual)
(#$comment #$AttributeValue "The set of all attributes represented in Cyc. #$AttributeValue includes quantities, such as 5 inches (i.e., (#$Inch 5)) or 1000 dollars per year (i.e., (#$DollarsPerYear 1000)), as well as qualities like #$Hilly, #$Rough, #$DeviceOn, etc., which can be used to make assertions about the state of some tangible object.")
(#$synonymousExternalConcept #$AttributeValue #$SENSUS-Information1997 "QUALITY")

;;; #$AudibleSound
(#$isa #$AudibleSound #$WavePropagationType)
(#$genls #$AudibleSound #$Sound)
(#$comment #$AudibleSound "A collection of events; a subset of #$Sound.  Each element of #$AudibleSound is a sound within the #$Frequency range of human hearing.")

;;; #$AudioCommunicating
(#$isa #$AudioCommunicating #$TemporalStuffType)
(#$isa #$AudioCommunicating #$DefaultDisjointScriptType)
(#$genls #$AudioCommunicating #$Communicating)
(#$comment #$AudioCommunicating "A collection of information transfer events; a subset of #$Communicating.  Each element of #$AudioCommunicating is a transmission of sound-borne information between two (or more) agents; e.g., talking, clapping, or performing music.")

;;; #$August
(#$isa #$August #$MonthOfYearType)
(#$genls #$August #$CalendarMonth)

;;; #$AuthorizedAgreement
(#$isa #$AuthorizedAgreement #$ExistingObjectType)
(#$genls #$AuthorizedAgreement #$Agreement)
(#$comment #$AuthorizedAgreement "The collection of generic agreements that are authorized by one of the agreeing parties (typically by the issuer of the document embodying the agreement).  #$AuthorizedAgreements are generic in the sense that their authorizing agents are party to many similar agreements; for that reason, an #$AuthorizedAgreement is typically given a unique identification number.  Examples: bank accounts, driver's licenses, stock certificates.")

;;; #$AutoDealership
(#$isa #$AutoDealership #$ExistingObjectType)
(#$genls #$AutoDealership #$RetailStore)
(#$genls #$AutoDealership #$LocalCustomerContactPoint)
(#$genls #$AutoDealership #$Business)
(#$comment #$AutoDealership "Each instance is an establishment (an organization located at one site) that sells automobiles and other types of road vehicles to consumers.")

;;; #$Automobile
(#$isa #$Automobile #$ProductType)
(#$isa #$Automobile #$ExistingObjectType)
(#$genls #$Automobile #$HumanlyOccupiedSpatialObject)
(#$genls #$Automobile #$RoadVehicle)
(#$genls #$Automobile #$ContactLocation)
(#$comment #$Automobile "A collection of transportation devices -- those commonly known as `passenger cars.'  An instance of #$Automobile is an element of #$RoadVehicle which was designed for carrying about 4 passengers (give or take a factor of 2).  In addition to midsize cars, #$Automobile includes elements belonging to the subsets #$SportsCar and #$Van.  This collection does NOT include motorcycles, pickups, buses, tractors, etc.")

;;; #$Awake
(#$isa #$Awake #$Alertness)
(#$comment #$Awake "#$Awake is the #$Alertness attribute of being awake.")

;;; #$AxisFn
(#$isa #$AxisFn #$ReifiableFunction)
(#$isa #$AxisFn #$IndividualDenotingFunction)
(#$resultIsa #$AxisFn #$IntrinsicAxisOfObject)
(#$arg1Isa #$AxisFn #$PartiallyTangible)
(#$arg2Isa #$AxisFn #$RegionType)
(#$arg2Genl #$AxisFn #$Side)
(#$arg3Isa #$AxisFn #$RegionType)
(#$arg3Genl #$AxisFn #$Side)
(#$comment #$AxisFn "(#$AxisFn OBJ REGIONTYP REGIONTYP) is a function that, applied to an individual object OBJ and two types of region of such an object, returns the axis through the object, determined by running the axis through the individual regions (of those types) of the object.  Thus #$AxisFn is an  #$IndividualDenotingFunction that returns a particular axis of an individual object. (#$AxisFn OBJ FROM-SIDE TO-SIDE) denotes a directional axis, pointing from FROM-SIDE to TO-SIDE of OBJ and extending through it. For example, (#$AxisFn `Chair37' #$BackSide #$FrontSide) would denote the back-to-front axis of Chair37. See also #$IntrinsicAxisOfObject.")

;;; #$BackSide
(#$isa #$BackSide #$RegionType)
(#$genls #$BackSide #$Side)
(#$comment #$BackSide "The collection of all the entire back sides (as conventionally understood) of all objects that have distinct #$Sides, one of which faces in the backwards direction.")

;;; #$Baked
(#$isa #$Baked #$PreparationAttribute)
(#$genlAttributes #$Baked #$Cooked)
(#$comment #$Baked "The attribute #$Baked is a specialized form of #$Cooked.  Food that is #$Baked has been prepared in an event of #$BakingFood, using a $#RegularOven.")

;;; #$BakingFood
(#$isa #$BakingFood #$TemporalObjectType)
(#$isa #$BakingFood #$DefaultDisjointScriptType)
(#$genls #$BakingFood #$CookingFood)
(#$comment #$BakingFood "A collection of events in which food is baked in a #$RegularOven.  After an event of #$BakingFood, the food involved has been #$Baked.")

;;; #$BalconyLevelInAConstruction
(#$isa #$BalconyLevelInAConstruction #$ExistingObjectType)
(#$genls #$BalconyLevelInAConstruction #$ContainerProduct)
(#$genls #$BalconyLevelInAConstruction #$LevelOfAConstruction)
(#$comment #$BalconyLevelInAConstruction "This refers to those overhanging levels or balconies found in some churches, theatres, etc.  They ARE NOT the kind of balcony that protrude from a window or from an already existing level.  These levels are often a third the size of the floor or level below them, and therefore can be called legitimate levels themselves.  They usually contain a mob of seats.")

;;; #$Bangladesh
(#$isa #$Bangladesh #$IndependentCountry)
(#$isa #$Bangladesh #$Entity)

;;; #$BankDebitCard
(#$isa #$BankDebitCard #$ExistingObjectType)
(#$genls #$BankDebitCard #$Card)
(#$genls #$BankDebitCard #$TenderObject)
(#$genls #$BankDebitCard #$IDDocument)
(#$genls #$BankDebitCard #$OfficialDocument)
(#$comment #$BankDebitCard "A collection of official `documents'.  Each element of #$BankDebitCard is a plastic card that enables the holder to access the account with which the card is associated; typically used to withdraw funds from the account.  Cf. #$CreditCard.")

;;; #$Bartering
(#$isa #$Bartering #$TemporalObjectType)
(#$isa #$Bartering #$DefaultDisjointScriptType)
(#$genls #$Bartering #$ExchangeOfUserRights)
(#$genls #$Bartering #$Transaction)
(#$comment #$Bartering "The collection of transactions between two #$Agents in which one #$Agent gives items or services to another #$Agent, and the other #$Agent gives items or services in return, and neither of the items or services is money, credit, or payment of money.")

;;; #$BaseKB
(#$isa #$BaseKB #$BroadMicrotheory)
(#$genlMt #$BaseKB #$BaseKB)
(#$comment #$BaseKB "#$BaseKB is the most general #$Microtheory currently in use.  Assertions in this context are `accessible' from any other #$Microtheory via the #$genlMt relation.  In the partial order of microtheories, all microtheories have access to #$BaseKB.  An assertion which is true here will by default be true in every context.  The `content' of #$BaseKB consists of very general assertions which are expected to be usable in most or all applications of Cyc, as well as Cyc's most fundamental assertions that it uses in inference, and all completely universal, timeless truths.")

;;; #$BasementLevelInAConstruction
(#$isa #$BasementLevelInAConstruction #$ExistingObjectType)
(#$genls #$BasementLevelInAConstruction #$LevelOfAConstruction)
(#$comment #$BasementLevelInAConstruction "Any level of a building which is underground.")

;;; #$Battle
(#$isa #$Battle #$ScriptType)
(#$isa #$Battle #$TemporalObjectType)
(#$genls #$Battle #$HostileSocialAction)
(#$comment #$Battle "The collection of events in which two or more large groups of #$Persons meet and fight one another, each group seeking to vanquish (some of) the others.  #$Battles are often conducted by #$MilitaryOrganizations, and they may influence the outcomes of #$WagingWar.  A #$Battle will have as #$subEvents at least two #$PhysicallyAttackingAnAgent events, in which one of the fighting groups attacks the other.")

;;; #$BeliefSystem
(#$isa #$BeliefSystem #$BeliefSystemType)
(#$genls #$BeliefSystem #$MentalObject)
(#$comment #$BeliefSystem "The collection of ideologies (systems of belief) in terms of which an agent characterizes (i.e., makes sense of) their world.  Elements of this set include: #$VegetarianBeliefs, #$GermanNaziIdeology, #$RepublicanIdeology, #$CommunistIdeology, #$PacifistIdeology, #$Atheism, etc. See also #$ConventionalClassificationSystem.")

;;; #$BeliefSystemType
(#$isa #$BeliefSystemType #$Collection)
(#$genls #$BeliefSystemType #$StuffType)
(#$comment #$BeliefSystemType "The collection of all the kinds of #$BeliefSystems: religious, philosophical, political, ethical, cultural, and scientific.  Some elements of this collection include #$Religion, #$PhilosophyBeliefs, etc.  The most general member of this set is #$BeliefSystems (qv).")

;;; #$Bendable
(#$isa #$Bendable #$PhysicalStructuralAttribute)
(#$genlAttributes #$Bendable #$Flexible)
(#$comment #$Bendable "A physical attribute.  #$Bendable is the #$PhysicalStructuralAttribute of an object that tends to stay in the contorted shape when contorted.  Note: for something to be bendable, it must be #$Flexible.")

;;; #$BengaliLanguage
(#$isa #$BengaliLanguage #$LivingLanguage)
(#$comment #$BengaliLanguage "Language spoken in the Indic area.")

;;; #$Bicycle
(#$isa #$Bicycle #$ExistingObjectType)
(#$genls #$Bicycle #$LandTransportationDevice)
(#$genls #$Bicycle #$Device-UserPowered)
(#$comment #$Bicycle "The collection of all bicycles, personal wheeled transport devices powered by human peddling.   Most Bicycles have two main wheels arranged in-line, but some tandem bicycles have more than two wheels.")

;;; #$BilaterallySymmetricObject
(#$isa #$BilaterallySymmetricObject #$ExistingObjectType)
(#$genls #$BilaterallySymmetricObject #$SpatialThing)
(#$comment #$BilaterallySymmetricObject "The collection of objects which are symmetric on both sides of a bisecting axis, as are most vertebrates.")

;;; #$Bill-PaymentRequest
(#$isa #$Bill-PaymentRequest #$ExistingObjectType)
(#$genls #$Bill-PaymentRequest #$OfficialDocument)
(#$genls #$Bill-PaymentRequest #$HardcopyInformationBearingObject)
(#$genls #$Bill-PaymentRequest #$TextualMaterial)
(#$comment #$Bill-PaymentRequest "A collection of documents.  Each element of #$Bill-PaymentRequest is a notification, demand, or request made by a creditor (or its agent) to a debtor, for payment of a debt previously incurred for some loan, goods, or services.  Examples: telephone bills, tax bills, department store bills, cleaning bills, fuel bills.")

;;; #$BillingLocation
(#$isa #$BillingLocation #$ContactLocationType)
(#$genls #$BillingLocation #$MailingLocation)
(#$comment #$BillingLocation "A collection of places; a subset of #$ContactLocation.  Each element of #$BillingLocation is a location to which invoices are sent.  For most private individuals, their billing location is their home address.")

;;; #$BinaryPredicate
(#$isa #$BinaryPredicate #$PredicateCategory)
(#$isa #$BinaryPredicate #$Collection)
(#$genls #$BinaryPredicate #$Predicate)
(#$comment #$BinaryPredicate "#$BinaryPredicate is the collection of all Cyc predicates which take two arguments.")
(#$synonymousExternalConcept #$BinaryPredicate #$SENSUS-Information1997 "TWO-PLACE-RELATION")

;;; #$BioDeteriorationResistance
(#$isa #$BioDeteriorationResistance #$PrimitiveAttributeType)
(#$genls #$BioDeteriorationResistance #$ScalarInterval)
(#$genls #$BioDeteriorationResistance #$PhysicalAttribute)
(#$comment #$BioDeteriorationResistance "A collection of attributes; a subset of #$PhysicalAttribute.  Each element of #$BioDeteriorationResistance represents a specific capacity of a tangible object to resist biological deterioration.  Degrees of #$BioDeteriorationResistance may be represented using #$GenericValueFunctions.  Indicate a particular object's #$BioDeteriorationResistance with the predicate #$resistanceToBioDeterioration.")

;;; #$BiologicalCatabolismEvent
(#$isa #$BiologicalCatabolismEvent #$TemporalObjectType)
(#$isa #$BiologicalCatabolismEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalCatabolismEvent #$BiologicalMetabolismEvent)
(#$genls #$BiologicalCatabolismEvent #$BiologicalDestructionEvent)
(#$comment #$BiologicalCatabolismEvent "A collection of events.  Each #$BiologicalCatabolismEvent involve the destruction of larger molecules.  E.g., the degradation of glucose into carbon dioxide and water, which releases energy used to make ATP (adenosine triphosphate).")

;;; #$BiologicalClass
(#$isa #$BiologicalClass #$BiologicalTaxonType)
(#$genls #$BiologicalClass #$BiologicalTaxon)
(#$comment #$BiologicalClass "The collection of taxonomic subdivisions directly under #$BiologicalPhylum (for animals and for the animal-like organisms in the #$ProtistaKingdom), or #$BiologicalDivision (for the plants and for the plant-like organisms within the #$ProtistaKingdom).")

;;; #$BiologicalDecompositionEvent
(#$isa #$BiologicalDecompositionEvent #$TemporalObjectType)
(#$isa #$BiologicalDecompositionEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalDecompositionEvent #$BiologicalDestructionEvent)
(#$genls #$BiologicalDecompositionEvent #$DecompositionEvent)
(#$comment #$BiologicalDecompositionEvent "A collection of events.  In each #$BiologicalDecompositionEvent, some living structures are decomposed.")

;;; #$BiologicalDestructionEvent
(#$isa #$BiologicalDestructionEvent #$TemporalObjectType)
(#$isa #$BiologicalDestructionEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalDestructionEvent #$BiologicalEvent)
(#$genls #$BiologicalDestructionEvent #$DestructionEvent)
(#$comment #$BiologicalDestructionEvent "A collection of events.  In each element of #$BiologicalDestructionEvent, something is destroyed by some element(s) of #$BiologicalLivingObject.  For example, #$DigestingInStomach is a subset of #$BiologicalDestructionEvent.")

;;; #$BiologicalDevelopmentEvent
(#$isa #$BiologicalDevelopmentEvent #$TemporalObjectType)
(#$isa #$BiologicalDevelopmentEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalDevelopmentEvent #$IntrinsicStateChangeEvent)
(#$genls #$BiologicalDevelopmentEvent #$BiologicalEvent)
(#$comment #$BiologicalDevelopmentEvent "A collection of events, and a subset of #$IntrinsicStateChangeEvents.  In each #$BiologicalDevelopmentEvent, one or more living things undergo biological changes in which they progress from one developmental stage to another.  For example, the germination of a seed, the opening of a flower, the pupating of a caterpillar, a teenager reaching puberty.  Some borderline non-examples include: Groucho Marx being born, Groucho Marx dying.")

;;; #$BiologicalDivision
(#$isa #$BiologicalDivision #$BiologicalTaxonType)
(#$genls #$BiologicalDivision #$BiologicalTaxon)
(#$comment #$BiologicalDivision "The collection of main taxonomic subdivisions of #$BiologicalKingdom (or #$BiologicalSubkingdom) for the members of the #$MoneraKingdom (i.e., prokaryotes), #$Fungus Kingdom, #$Plant Kingdom, and for the plant-like organisms within the #$ProtistaKingdom.  In the #$Animal Kingdom, however, the main taxonomic subdivisions are elements of #$BiologicalPhylum (q.v.) rather than #$BiologicalDivision.")

;;; #$BiologicalEvent
(#$isa #$BiologicalEvent #$TemporalObjectType)
(#$isa #$BiologicalEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalEvent #$PhysicalEvent)
(#$comment #$BiologicalEvent "An event in which a biological thing is a #$bodilyDoer.")

;;; #$BiologicalFamily
(#$isa #$BiologicalFamily #$BiologicalTaxonType)
(#$genls #$BiologicalFamily #$BiologicalTaxon)
(#$comment #$BiologicalFamily "The collection of biological taxonomic subdivisions below #$BiologicalOrder and above #$BiologicalGenus.  Especially important in Botanical classification.")

;;; #$BiologicalGenus
(#$isa #$BiologicalGenus #$BiologicalTaxonType)
(#$genls #$BiologicalGenus #$BiologicalTaxon)
(#$comment #$BiologicalGenus "The collection of biological taxonomic subdivisions below #$BiologicalFamily and above #$BiologicalSpecies.  Sometimes, hybrids are possible between different instances of #$BiologicalSpecies that belong to the same #$BiologicalGenus.")

;;; #$BiologicalIntakeEvent
(#$isa #$BiologicalIntakeEvent #$TemporalObjectType)
(#$isa #$BiologicalIntakeEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalIntakeEvent #$BiologicalTransportationEvent)
(#$comment #$BiologicalIntakeEvent "A collection of processes.  In each element of #$BiologicalIntakeEvent, some object(s) are taken into some living structure.")

;;; #$BiologicalKingdom
(#$isa #$BiologicalKingdom #$BiologicalTaxonType)
(#$genls #$BiologicalKingdom #$BiologicalTaxon)
(#$comment #$BiologicalKingdom "The collection of the highest, most general taxonomic divisions of organisms.  Traditionally, it has included the elements of #$Animal and of #$Plant and may include separate kingdoms for the elements of #$ProkaryoticCell, single-celled eukaryotes (protists), and fungi.")

;;; #$BiologicalLivingObject
(#$isa #$BiologicalLivingObject #$ExistingObjectType)
(#$genls #$BiologicalLivingObject #$OrganicStuff)
(#$genls #$BiologicalLivingObject #$CompositeTangibleAndIntangibleObject)
(#$comment #$BiologicalLivingObject "A collection of all structures that are composed of one or more living cells (see #$Cell).  Biological living objects (BLOs) may be either elements of #$Organism-Whole (like dogs or pine trees) or are components of such whole organisms (like noses, tails, and pine needles).  The healthy leg of a living person is a BLO (as is the person), but an amputated leg is not a BLO.  Every element of #$BiologicalLivingObject is either capable of biological reproduction itself or has components which are capable of biological reproduction (such as the cells in a living arm).")

;;; #$BiologicalMetabolismEvent
(#$isa #$BiologicalMetabolismEvent #$TemporalObjectType)
(#$isa #$BiologicalMetabolismEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalMetabolismEvent #$BiologicalEvent)
(#$comment #$BiologicalMetabolismEvent "The collection of biological processes in which substrates are converted into metabolites.  The metabolites may be more or less complex than the substrates.")

;;; #$BiologicalOrder
(#$isa #$BiologicalOrder #$BiologicalTaxonType)
(#$genls #$BiologicalOrder #$BiologicalTaxon)
(#$comment #$BiologicalOrder "The collection of biological taxonomic subdivisions below #$BiologicalClass (or #$BiologicalSubclass) and above #$BiologicalFamily.")

;;; #$BiologicalPhylum
(#$isa #$BiologicalPhylum #$BiologicalTaxonType)
(#$genls #$BiologicalPhylum #$BiologicalTaxon)
(#$comment #$BiologicalPhylum "The collection of main taxonomic subdivisions of #$BiologicalKingdom (or #$BiologicalSubkingdom if present) for the #$Animal kingdom and for the animal-like organisms within the #$ProtistaKingdom.  The other elements of #$BiologicalKingdom have divisions belonging to #$BiologicalDivision instead of Phyla (Phyla is the plural of Phylum).")

;;; #$BiologicalProductionEvent
(#$isa #$BiologicalProductionEvent #$TemporalObjectType)
(#$isa #$BiologicalProductionEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalProductionEvent #$CreationEvent)
(#$genls #$BiologicalProductionEvent #$BiologicalEvent)
(#$comment #$BiologicalProductionEvent "A collection of events.  In each element of #$BiologicalProductionEvent, raw materials are combined to produce a product, and some element(s) of #$BiologicalLivingObject is the producer.  E.g., the production of honey by honeybees, the growth of a seedling into a tree, the secretion of sweat by a marathon runner, etc.  

Note:  This is a very general collection, and for most purposes one of its subsets will better capture what is intended.")

;;; #$BiologicalReproductionEvent
(#$isa #$BiologicalReproductionEvent #$TemporalObjectType)
(#$isa #$BiologicalReproductionEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalReproductionEvent #$BiologicalEvent)
(#$genls #$BiologicalReproductionEvent #$BiologicalProductionEvent)
(#$comment #$BiologicalReproductionEvent "A collection of events.  Each element of #$BiologicalReproductionEvent is an event in which one or more biological organisms (the #$parentActors) produce new organisms (the #$offspringActors) generally of the same kind as the parents.")

;;; #$BiologicalSpecies
(#$isa #$BiologicalSpecies #$BiologicalTaxonType)
(#$genls #$BiologicalSpecies #$BiologicalTaxon)
(#$comment #$BiologicalSpecies "A collection of the lowest taxons (#$BiologicalTaxon, q.v.) that are necessarily common to both parents of fertile offspring, or, in the case of asexual reproduction, necessarily common to parent and child.  Members of different species cannot produce fertile offspring by interbreeding.  An element of #$BiologicalSpecies has members who all have significant traits in common, and members of each biological species have other members as parents.  In biological taxonomy, related species are grouped into a particular element of #$BiologicalGenus (q.v.).")

;;; #$BiologicalStageOfDevelopment
(#$isa #$BiologicalStageOfDevelopment #$ExistingObjectType)
(#$genls #$BiologicalStageOfDevelopment #$BiologicalLivingObject)
(#$comment #$BiologicalStageOfDevelopment "The collection of all the particular stages of existence of all living things.  Each element of #$BiologicalStageOfDevelopment is a spatiotemporal portion of the life of some instance of #$BiologicalLivingObject.  Typical cases (i.e., subsets) include #$Larva, #$Pupa, #$AdultAnimal, etc.  For example, the pupal stage of a particular Monarch butterfly, or my American Beauty rose bush during the stage when it was blooming last year, or Teddy Roosevelt during his 13th year.  See also the related Cyc predicates #$developmentalSuccessor and #$developmentalStages.



")

;;; #$BiologicalSubclass
(#$isa #$BiologicalSubclass #$BiologicalTaxonType)
(#$genls #$BiologicalSubclass #$BiologicalTaxon)
(#$comment #$BiologicalSubclass "The collection of biological taxonomic subdivisions more specific than #$BiologicalClass but more general than #$BiologicalOrder.")

;;; #$BiologicalSubkingdom
(#$isa #$BiologicalSubkingdom #$BiologicalTaxonType)
(#$genls #$BiologicalSubkingdom #$BiologicalTaxon)
(#$comment #$BiologicalSubkingdom "The collection of biological subkingdoms, the biological taxonomic divisions of organisms immediately below #$BiologicalKingdom.")

;;; #$BiologicalTaxon
(#$isa #$BiologicalTaxon #$BiologicalTaxonType)
(#$genls #$BiologicalTaxon #$ConventionalClassificationType)
(#$genls #$BiologicalTaxon #$OrganismClassificationType)
(#$comment #$BiologicalTaxon "The collection of ranked categories accepted by biologists for the biological classification of organisms according to their suspected evolutionary relationships.  Includes all levels of taxons.  See also #$BiologicalTaxonType and #$OrganismClassificationType.")

;;; #$BiologicalTaxonType
(#$isa #$BiologicalTaxonType #$DisjointSetOrCollection)
(#$isa #$BiologicalTaxonType #$SiblingDisjointCollection)
(#$genls #$BiologicalTaxonType #$ConventionalClassificationType)
(#$genls #$BiologicalTaxonType #$SiblingDisjointCollection)
(#$comment #$BiologicalTaxonType "A collection of collections; #$BiologicalTaxonType contains the classes of organism types (i.e., taxons) that biologists recognize, including #$BiologicalSpecies, #$BiologicalPhylum, etc.   The naive classes that non-biologists use may be instances of some element of #$BiologicalTaxonType, though often they are not.  When they coincide, the commonsense class of organism (e.g., #$Person) is an instance of some #$BiologicalTaxonType (#$BiologicalSpecies, for example).  See also #$OrganismClassificationType.")

;;; #$BiologicalTransportationEvent
(#$isa #$BiologicalTransportationEvent #$TemporalObjectType)
(#$isa #$BiologicalTransportationEvent #$DefaultDisjointScriptType)
(#$genls #$BiologicalTransportationEvent #$TransportationEvent)
(#$genls #$BiologicalTransportationEvent #$BiologicalEvent)
(#$comment #$BiologicalTransportationEvent "The collection of processes involving living structures in which objects are transported.")

;;; #$Bird
(#$isa #$Bird #$BiologicalClass)
(#$genls #$Bird #$Vertebrate)
(#$genls #$Bird #$NonPersonAnimal)
(#$genls #$Bird #$TerrestrialOrganism)
(#$comment #$Bird "The collection of birds; a subset of #$Vertebrate.  Each element of #$Bird is an air-breathing, warm-blooded animal, covered with feathers, having forelimbs modified as wings and a beak rather than teeth.  Members of most, but not all, species of bird can fly.  #$Bird is an instance of #$BiologicalClass.")

;;; #$BirthEvent
(#$isa #$BirthEvent #$DefaultDisjointScriptType)
(#$isa #$BirthEvent #$TemporalObjectType)
(#$genls #$BirthEvent #$MedicalCareEvent)
(#$genls #$BirthEvent #$EmittingAnObject)
(#$genls #$BirthEvent #$PregnancyEndingEvent)
(#$genls #$BirthEvent #$BiologicalDevelopmentEvent)
(#$comment #$BirthEvent "The collection of events in which one animal (prototypically, a #$Mammal) gives birth to another.  The mother is the #$birthParent and the child is the #$birthChild.  Both are #$objectOfStateChange; the mother goes from being pregnant to not pregnant, while the child goes from the #$Embryo life stage to the #$JuvenileAnimal life stage (see #$BiologicalStageOfDevelopment.")

;;; #$BlimpTheAirship
(#$isa #$BlimpTheAirship #$ProductType)
(#$isa #$BlimpTheAirship #$ExistingObjectType)
(#$genls #$BlimpTheAirship #$TransportationDevice-Vehicle)
(#$genls #$BlimpTheAirship #$AirTransportationDevice)
(#$genls #$BlimpTheAirship #$ContainerProduct)
(#$comment #$BlimpTheAirship "The collection of all dirigible, motorized, lighter-than-air craft (airships).  Each generally consists of a gas-filled gas-sack from which a control and passenger cabin hangs (the gas-sack may or may not have rigid reinforcement such as ribs).  A BlimpTheAirship flies more slowly than an #$Airplane.  They are also called blimps, dirigibles and Zeppelins.")

;;; #$BlueCollar
(#$isa #$BlueCollar #$JobAttribute)
(#$comment #$BlueCollar "An attribute; an element of #$JobAttribute.  Blue collar jobs are those requiring a relatively high proportion of manual/physical labor.")

;;; #$BlueCollarWorker
(#$isa #$BlueCollarWorker #$OccupationType)
(#$genls #$BlueCollarWorker #$Professional)
(#$comment #$BlueCollarWorker "A collection of persons; a subset of #$Professional.  Each element of #$BlueCollarWorker is a person whose occupation is manual-labor intensive, sometimes demanding physical strength and, in some jobs, considerable skill, practical judgment, and work experience.  Types of blue-collar workers include miners, truck drivers, steelworkers, construction workers, agricultural workers, laborers, mechanics, garbage collectors, assembly line workers, janitorial workers, etc.  Their jobs may require some specialized training or apprenticeship but don't require a college degree.")

;;; #$Boat-WaterTransportationDevice
(#$isa #$Boat-WaterTransportationDevice #$ProductType)
(#$isa #$Boat-WaterTransportationDevice #$ExistingObjectType)
(#$genls #$Boat-WaterTransportationDevice #$ContainerProduct)
(#$genls #$Boat-WaterTransportationDevice #$WaterTransportationDevice)
(#$comment #$Boat-WaterTransportationDevice "A collection of water transportation devices.  An instance of #$Boat-WaterTransportationDevice is a device for transporting people and/or objects through or over water without getting them wet; thus, instances of #$Rowboat or #$Ship (as opposed to #$JetSki or #$Surfboard or #$Sailboard).")

;;; #$BodilyFunctionEvent
(#$isa #$BodilyFunctionEvent #$TemporalStuffType)
(#$isa #$BodilyFunctionEvent #$DefaultDisjointScriptType)
(#$genls #$BodilyFunctionEvent #$SingleDoerAction)
(#$genls #$BodilyFunctionEvent #$PhysiologicalProcess)
(#$genls #$BodilyFunctionEvent #$AnimalActivity)
(#$comment #$BodilyFunctionEvent "The collection of animal activities that are regular bodily functions; examples include: a particular eating event, a particular breathing event, etc.")

;;; #$BodilyFunctionEvent-Involuntary
(#$isa #$BodilyFunctionEvent-Involuntary #$TemporalStuffType)
(#$isa #$BodilyFunctionEvent-Involuntary #$DefaultDisjointScriptType)
(#$genls #$BodilyFunctionEvent-Involuntary #$BodilyFunctionEvent)
(#$comment #$BodilyFunctionEvent-Involuntary "This is the subset of #$BodilyFunctionEvent whose elements are actions in which the `doer' is, by definition, a #$nonDeliberateActors.  Specializations (subsets) of #$BodilyFunctionEvent-Involuntary include #$HavingASeizure, #$Blushing, #$Bleeding, #$ExperiencingHunger, etc.
Note: if the `doer' of an involuntary bodily function is an #$Organism-Whole, then use #$bodilyDoer to describe its role in the event.")

;;; #$BodyMovementEvent
(#$isa #$BodyMovementEvent #$DefaultDisjointScriptType)
(#$isa #$BodyMovementEvent #$TemporalObjectType)
(#$genls #$BodyMovementEvent #$AnimalActivity)
(#$genls #$BodyMovementEvent #$SingleDoerAction)
(#$genls #$BodyMovementEvent #$MovementEvent)
(#$comment #$BodyMovementEvent "The collection of activities in which an #$Animal agent moves a part of its own body, whether consciously and intentionally or reflexively.  #$BodyMovementEvent includes subsets such as #$TakingAStep, #$BlockingAPunch, #$Hiccoughing, and #$BlinkingOnesEyes.")

;;; #$BodyOfWater
(#$isa #$BodyOfWater #$ExistingObjectType)
(#$genls #$BodyOfWater 
  (#$LiquidFn #$Water))
(#$genls #$BodyOfWater #$TopographicalFeature)
(#$genls #$BodyOfWater #$OutdoorLocation)
(#$comment #$BodyOfWater "A collection of topographical features.  Each element of #$BodyOfWater is a natural or artificial body of water.  Elements may belong to specialized subsets such as #$Lake, #$Stream, and #$Ocean. #$BodyOfWater includes reservoirs, #$Canals, and navigation channels that are developed and/or enlarged by humans.  However, it does not include smaller purely-artificial bodies of water such as #$SwimmingPools or tanks of water.  Examples of #$BodyOfWater: #$HudsonBay, #$PanamaCanal, #$AdriaticSea, #$BayOfBengal, #$NiagaraFalls.")

;;; #$BodyPartCollectionFn
(#$isa #$BodyPartCollectionFn #$CollectionDenotingFunction)
(#$resultIsa #$BodyPartCollectionFn #$ExistingObjectType)
(#$resultGenl #$BodyPartCollectionFn #$AnimalBodyPart)
(#$arg1Isa #$BodyPartCollectionFn #$Animal)
(#$arg2Isa #$BodyPartCollectionFn #$AnimalBodyPartType)
(#$arg2Genl #$BodyPartCollectionFn #$AnimalBodyPart)
(#$comment #$BodyPartCollectionFn "#$BodyPartCollectionFn is a #$CollectionDenotingFunction, that is, it is a Cyc function which `returns' (i.e., `has') a collection as its value.  Here is an example of what it does.  The expression (#$BodyPartCollectionFn #$AbrahamLincoln #$Fingernail) returns, as its value, a collection of ten elements, each of which represents one of the fingernails of Abraham Lincoln.  In cases where an animal is likely to only have one part of that type (e.g., head, heart, nose, nervous system), it makes more sense to use the function #$BodyPartFn (qv), rather than using this one, getting a singleton set back, and extracting its lone element.")

;;; #$BodyPartFn
(#$isa #$BodyPartFn #$ReifiableFunction)
(#$isa #$BodyPartFn #$IndividualDenotingFunction)
(#$resultIsa #$BodyPartFn #$AnimalBodyPart)
(#$arg1Isa #$BodyPartFn #$Animal)
(#$arg2Isa #$BodyPartFn #$AnimalBodyPartType)
(#$arg2Isa #$BodyPartFn #$UniqueAnatomicalPartType)
(#$arg2Genl #$BodyPartFn #$AnimalBodyPart)
(#$comment #$BodyPartFn "#$BodyPartFn is an #$IndividualDenotingFunction, that is, it is a Cyc function which `returns' (i.e., `has') a single individual object as its value.  (#$BodyPartFn DeborahNichols #$Heart) represent's Deborah's one and only heart.  That nonatomic term can be used almost anywhere that the term DeborahNicholsHeart could have been used, but this way we needn't reify that other term, and so on.  Note that the second argument to this function --- i.e., the  #$AnimalBodyPartType --- must be a #$UniqueAnatomicalPartType, that is, a kind of part of which an animal can have only one.  If an animal can have multiple parts of that type, such as #$Finger, then use the function #$BodyPartCollectionFn instead of #$BodyPartFn.")

;;; #$BodyPartPosition
(#$isa #$BodyPartPosition #$AttributeType)
(#$genls #$BodyPartPosition #$PhysiologicalAttribute)
(#$comment #$BodyPartPosition "The collection of attributes describing the position of a body part (or a whole body).  A #$BodyPartPosition may be determined relative to the body's environment (as with #$Postures) or merely with respect to the body part itself (e.g., #$Flexed, #$Extended).")

;;; #$Boiling
(#$isa #$Boiling #$TemporalObjectType)
(#$isa #$Boiling #$DefaultDisjointScriptType)
(#$genls #$Boiling #$PhysicalStateChangeEvent)
(#$comment #$Boiling "A collection of events.  In each #$Boiling, a piece of liquid matter is raised to its #$boilingPoint and is thereby changed from being in the #$LiquidStateOfMatter to being in the #$GaseousStateOfMatter.
Note:  this is not intended to cover the cases of heat/evacuation causing a solid to sublime directly into a gas.")

;;; #$Book
(#$isa #$Book #$ExistingObjectType)
(#$genls #$Book #$PublishedMaterial)
(#$comment #$Book "A form of #$HardcopyInformationBearingObject consisting of folded, cut, bound, and usually printed sheets.  #$Books are often #$TextualMaterial, but sometimes contain only images.")

;;; #$BookkeepingMt
(#$isa #$BookkeepingMt #$Microtheory)
(#$genlMt #$BookkeepingMt #$CyclistsMt)
(#$genlMt #$BookkeepingMt #$BaseKB)
(#$comment #$BookkeepingMt "A #$Microtheory for stating basic #$Cyc bookkeeping information, such as assertions using #$myCreator and #$myCreationTime.")

;;; #$BookkeepingPredicate
(#$isa #$BookkeepingPredicate #$PredicateCategory)
(#$isa #$BookkeepingPredicate #$Collection)
(#$genls #$BookkeepingPredicate #$Predicate)
(#$comment #$BookkeepingPredicate "A collection of predicates.  Each element of #$BookkeepingPredicate is a predicate used to form assertions about the creation and internal representation of a Cyc constant.  Bookkeeping predicates neither specify nor constrain the semantics of Cyc constants.  Examples:  #$myCreator, #$myCreationTime, #$termOfUnit, #$multiplicationUnits, #$quotientUnits.")

;;; #$Border
(#$isa #$Border #$ObjectType)
(#$genls #$Border #$SpatialThing)
(#$comment #$Border "The collection of all lines, linear regions, or dividing planes or surfaces--physical or abstract--that each constitutes the boundary between (#$formsBorderBetween) two regions (i.e., two elements of #$SpatialThing).")

;;; #$BorderBetweenFn
(#$isa #$BorderBetweenFn #$ReifiableFunction)
(#$isa #$BorderBetweenFn #$CommutativeRelation)
(#$isa #$BorderBetweenFn #$IndividualDenotingFunction)
(#$resultIsa #$BorderBetweenFn #$Line)
(#$resultIsa #$BorderBetweenFn #$Border)
(#$arg1Isa #$BorderBetweenFn #$GeographicalRegion)
(#$arg2Isa #$BorderBetweenFn #$GeographicalRegion)
(#$comment #$BorderBetweenFn "(#$BorderBetweenFn REG1 REG2), applied to two individual #$GeographicalRegions REG1 REG2, returns the unique entire #$GeopoliticalBorder that separates them.   To identify arbitrarily large or small segments of borders see #$formsBorderPart.  The border returned by #$BorderBetweenFn may be discontinuous (such the border between France and Spain, interrupted by Andorra), or circular (such as the border between Italy and San Marino), or in abnormal cases it may even have multiple disconnected and nested cyclic fragments (the border between Belgium and Netherlands, due to the Baarle-Nassau and Baarle-Hartog enclaves), or move back and forth periodically (such as at the Isle des Faisans).  Nonetheless, (#$BorderBetweenFn REG1 REG2) must denote exactly one object since #$BorderBetweenFn is a function.  Reference to nonexistant borders such (#$BorderBetweenFn #$Albania #$UnitedStatesOfAmerica) should cause Cyc to realize that they are undefined.  For example, if Cyc concludes that (#$bordersOn #$UnitedStatesOfAmerica #$Albania) is not true, then it should conclude (#$undefined (#$BorderBetweenFn #$Albania #$UnitedStatesOfAmerica)).
 ")

;;; #$Boredom
(#$isa #$Boredom #$FeelingAttributeType)
(#$genls #$Boredom #$Apathy)
(#$genls #$Boredom #$FeelingAttribute)
(#$comment #$Boredom "A state of dissatisfaction, weariness, or restlessness accompanied by a lack of interest.  This is a #$Collection --- for an explanation of that, see #$Happiness.  A related #$FeelingAttributeType is #$Apathy.")

;;; #$BorrowingSomething
(#$isa #$BorrowingSomething #$TemporalObjectType)
(#$isa #$BorrowingSomething #$DefaultDisjointScriptType)
(#$genls #$BorrowingSomething #$TransferringPossession)
(#$genls #$BorrowingSomething #$TemporaryChangeOfUserRights)
(#$comment #$BorrowingSomething "A collection of events; a subset of #$TemporaryChangeOfUserRights.  In an instance of #$BorrowingSomething, an #$Agent takes temporary control of something, usually with the permission of its owner(s).  Generally, the lending agent expects the borrowing agent to use the object for one of its normal functions (#$intendedBehaviorCapable).")

;;; #$BotanicalOrgan
(#$isa #$BotanicalOrgan #$ExistingObjectType)
(#$genls #$BotanicalOrgan #$PlantPart)
(#$comment #$BotanicalOrgan "A subset of #$PlantPart, the collection #$BotanicalOrgan includes parts of a plant which are major morphological and functional divisions of individual plants, typically consisting of stems, flowers, roots, leaves, etc.")

;;; #$BottomSide
(#$isa #$BottomSide #$RegionType)
(#$genls #$BottomSide #$Side)
(#$comment #$BottomSide "The collection of all the entire bottom sides (as conventionally understood) of all objects that have distinct #$Sides, one of which faces down.")

;;; #$Brain
(#$isa #$Brain #$AnimalBodyPartType)
(#$isa #$Brain #$UniqueAnatomicalPartType)
(#$genls #$Brain #$Organ)
(#$comment #$Brain "The collection of all #$Animal brains.  An individual #$Brain is an #$Organ which controls most bodily movement, recieves sensory input from the body and objects outside the body, and in which the mind operates, being the locus for all #$MentalObjects.")

;;; #$Brazil
(#$isa #$Brazil #$IndependentCountry)
(#$isa #$Brazil #$Entity)
(#$comment #$Brazil "Brazil throughout time, both political and physical aspects.")

;;; #$Breathing
(#$isa #$Breathing #$TemporalStuffType)
(#$isa #$Breathing #$DefaultDisjointScriptType)
(#$genls #$Breathing #$BodyMovementEvent)
(#$genls #$Breathing #$AirRespiration)
(#$comment #$Breathing "A collection of activities constituting a natural #$PhysiologicalFunction; #$Breathing is the collection of #$AirRespiration events in which the respiring organism takes air into its internal #$Lungs, where the gas exchange occurs.  See also #$Respiration.")

;;; #$Brittle
(#$isa #$Brittle #$PhysicalStructuralAttribute)
(#$comment #$Brittle "A physical attribute.  #$Brittle is the #$PhysicalStructuralAttribute of a substance which breaks easily when subjected to a low or moderate impact or application of force, such as most instances of #$Glass.")

;;; #$BroadMicrotheory
(#$isa #$BroadMicrotheory #$MicrotheoryType)
(#$isa #$BroadMicrotheory #$Collection)
(#$genls #$BroadMicrotheory #$Microtheory)
(#$comment #$BroadMicrotheory "The collection of those microtheories that contain so many assertions that they are not useful for `relevance' focusing during inference.  (A #$BroadMicrotheory is not used internally in Cyc's indexing scheme during inference.)  Examples: #$BaseKB and #$EnglishMt.")

;;; #$Building
(#$isa #$Building #$ExistingObjectType)
(#$isa #$Building #$ProductType)
(#$genls #$Building #$FixedStructure)
(#$genls #$Building #$HumanShelterConstruction)
(#$genls #$Building #$RealEstate)
(#$comment #$Building "A collection of artifacts; a subset of #$FixedStructure and of #$HumanShelterConstruction.  An instance of #$Building is typically a substantial structure and must have walls and a roof, with rooms inside or at least some area designed to be occupied by humans (but not necessarily as a residence).  Examples include the Empire State Building, Michael Jackson's house in L.A., King Arthur's castle, an #$AircraftHangar at O'Hare, a #$Lighthouse in the Mediterranean sea, the #$SydneyOperaHouse, the #$WashingtonMonumentInWashingtonDC, etc.")

;;; #$BuildingMaterial
(#$isa #$BuildingMaterial #$ConventionalClassificationType)
(#$isa #$BuildingMaterial #$ProductType)
(#$genls #$BuildingMaterial #$Artifact)
(#$comment #$BuildingMaterial "A collection of tangible things.  An instance of #$BuildingMaterial is a material thing typically used in making new structures.  Instances of #$BuildingMaterial include a piece of lumber, a brick, a slab of concrete, a roof shingle, a copper nail, a double-paned storm window, etc.")

;;; #$Bus-RoadVehicle
(#$isa #$Bus-RoadVehicle #$ProductType)
(#$isa #$Bus-RoadVehicle #$ExistingObjectType)
(#$genls #$Bus-RoadVehicle #$RoadVehicle)
(#$comment #$Bus-RoadVehicle "The collection of all buses, transport vehicles for ground transportation of many (they have room for at least 10, probably fewer than 60) people.  A bus usually is driven by a professional bus driver.")

;;; #$Bush
(#$isa #$Bush #$ExistingObjectType)
(#$genls #$Bush #$Plant-Woody)
(#$comment #$Bush "A collection of plants; a subset of #$Plant-Woody.  The collection #$Bush includes all bushes, i.e., woody plants of branching growth habit that lack substantial trunks and are not usually taller than a person (and they are shorter than most specimens of #$Tree-ThePlant).   This is a commonsense collection without distinct boundaries.")

;;; #$Business
(#$isa #$Business #$ExistingObjectType)
(#$genls #$Business #$CommercialOrganization)
(#$comment #$Business "The collection of #$Organizations intended to make profits, i.e., make money for agents that own them.  All #$Businesses are #$CommercialOrganizations (they must buy or sell something), but not all #$CommercialOrganizations are #$Businesses.  In a franchise #$Organization, the #$parentCompany is regarded as a #$Business, while the #$subOrganizations are merely instances of #$CommercialOrganization.  #$Businesses are typically #$LegalAgents, while #$CommercialOrganizations need not be.")

;;; #$BusinessEvent
(#$isa #$BusinessEvent #$TemporalObjectType)
(#$isa #$BusinessEvent #$DefaultDisjointScriptType)
(#$genls #$BusinessEvent #$CompositePhysicalAndMentalEvent)
(#$comment #$BusinessEvent "A collection of events.  Each element of #$BusinessEvent is an intentional occurrence that is closely associated with, and either helps or hinders, the business purpose of some agent.  Examples include: the development of General Motors' business plan for 1996; an individual sales call on a particular customer; printing the 1996 Yellow Pages directory for the Austin, TX, area; selling a newspaper; designing and manufacturing a new memory chip.  #$BusinessEvent does NOT include purely social or recreational occurrences.")

;;; #$BusinessPerson
(#$isa #$BusinessPerson #$OccupationType)
(#$genls #$BusinessPerson #$Professional)
(#$comment #$BusinessPerson "A collection of persons; a subset of #$Professional. Each element of #$BusinessPerson is a person whose occupation is primarily in the ownership and/or operation of a business.")

;;; #$BusinessRelationshipActivity
(#$isa #$BusinessRelationshipActivity #$ScriptType)
(#$isa #$BusinessRelationshipActivity #$TemporalStuffType)
(#$genls #$BusinessRelationshipActivity #$SocialOccurrence)
(#$genls #$BusinessRelationshipActivity #$BusinessEvent)
(#$comment #$BusinessRelationshipActivity "A collection of events; a subset of both #$BusinessEvent and #$SocialOccurrence.  Each instance of #$BusinessRelationshipActivity is a (usually long-term) social activity whose participants are related by some business relationship.  The social events constituting a #$BusinessRelationshipActivity further, either directly or indirectly, the (usually mutual) business interests of the participants.  A #$BusinessRelationshipActivity is typically carried out over multiple social occasions and may consist of many #$subEvents.")

;;; #$Buying
(#$isa #$Buying #$DefaultDisjointScriptType)
(#$isa #$Buying #$TemporalObjectType)
(#$genls #$Buying #$BuyingActivity)
(#$genls #$Buying #$MonetaryExchangeOfUserRights)
(#$comment #$Buying "A collection of events.  Each element of #$Buying is an event in which an agent voluntarily pays to acquire something tangible or intangible, or for the performance of a service.  Payment may be in money or other exchange of wealth.  Elements of #$Buying may include #$subEvents of negotiation, the act of paying, and the transfer of the purchased thing to the buyer.  Examples of #$Buying include: purchasing fighter jets for the Navy; buying a Pepsi from a vending machine; ordering dinner at a restaurant; acquiring a personal life insurance policy for oneself; mail-ordering clothes from Sears; shopping at a farmers' market.")

;;; #$BuyingActivity
(#$isa #$BuyingActivity #$TemporalObjectType)
(#$isa #$BuyingActivity #$DefaultDisjointScriptType)
(#$genls #$BuyingActivity #$CommercialActivity)
(#$comment #$BuyingActivity "A collection of events.  #$BuyingActivity very generally includes events related to purchasing goods or services.  Each element of #$BuyingActivity is an event that is either (i) a common prelude to buying (i.e., the kinds of activities that contribute to their doers becoming buyers), or (ii) an element of #$Buying itself.  Examples of #$BuyingActivity include shopping for, or ordering, something very specific, and also general expressions of interest in purchasing something, such as placing an `Item Wanted' ad in a newspaper.")

;;; #$CGSUnitOfMeasure
(#$isa #$CGSUnitOfMeasure #$RelationType)
(#$genls #$CGSUnitOfMeasure #$UnitOfMeasure)
(#$comment #$CGSUnitOfMeasure "A subset of #$UnitOfMeasure.  #$CGSUnitOfMeasure is the collection of all the measurement functions whose results use the CGS (i.e., centimeter-gram-second) system of measure to describe physical quantities.  Examples: #$CentimetersPerSecond, #$CubicCentimeter, #$Gram, #$SecondsDuration.")

;;; #$CalendarAutumn
(#$isa #$CalendarAutumn #$CalendarSeasonType)
(#$genls #$CalendarAutumn #$CalendarSeason)
(#$comment #$CalendarAutumn "The calendar season that begins at autumnal equinox and runs until winter solstice.")

;;; #$CalendarCentury
(#$isa #$CalendarCentury #$CalendarCoveringType)
(#$genls #$CalendarCentury #$TimeInterval)
(#$comment #$CalendarCentury "The collection of centuries that make up the calendar (1900's, 1700's etc.)  An example of such a constant in Cyc is #$TheNineteenthCenturyAD ")

;;; #$CalendarCoveringType
(#$isa #$CalendarCoveringType #$SiblingDisjointCollection)
(#$genls #$CalendarCoveringType #$TemporalObjectType)
(#$comment #$CalendarCoveringType "#$CalendarCoveringType is a collection of collections.  An element ?CC of #$CalendarCoveringType  is itself a collection, a type of time interval, such that the union of all the instances of ?CC would completely cover all of time without overlap.  Thus, #$CalendarYear is a #$CalendarCoveringType because all of time consists of a sequence of non-overlapping #$CalendarYears.  Similarly #$CalendarMonth, #$CalendarDay, #$CalendarHour, etc.  Notice that #$Monday and #$December are NOT instances of #$CalendarCoveringType, because all of time is not a sequence of Mondays, or Decembers.  Also notice that a collection Week -- defined as the set of all seven-day-long-periods-of-time -- would not be an instance of #$CalendarCoveringType, since several different Weeks could overlap; e.g., the week beginning today and the week beginning yesterday and the week beginning tomorrow.")

;;; #$CalendarDay
(#$isa #$CalendarDay #$Collection)
(#$isa #$CalendarDay #$ScriptType)
(#$isa #$CalendarDay #$CalendarCoveringType)
(#$genls #$CalendarDay #$Date)
(#$comment #$CalendarDay "The collection of days that make up the calendar.  This is a collection of disjoint but contiguous time intervals.  One of its elements is Thursday, August 1, 1996.")

;;; #$CalendarDecade
(#$isa #$CalendarDecade #$CalendarCoveringType)
(#$genls #$CalendarDecade #$TimeInterval)
(#$comment #$CalendarDecade "The collection of decades that make up the calendar; e.g., #$The1970s.")

;;; #$CalendarHalfCentury
(#$isa #$CalendarHalfCentury #$CalendarCoveringType)
(#$genls #$CalendarHalfCentury #$TimeInterval)
(#$comment #$CalendarHalfCentury "The collection of exact half-centuries on the calendar, such as #$FirstHalfOf20thCenturyCE")

;;; #$CalendarHour
(#$isa #$CalendarHour #$Collection)
(#$isa #$CalendarHour #$CalendarCoveringType)
(#$genls #$CalendarHour #$Date)
(#$genls #$CalendarHour #$TimeOfDay)
(#$comment #$CalendarHour "The collection of hours that make up the calendar.  These are contiguous and disjoint time intervals, except of course for particular instances that represent exactly the same 60-minute-long time interval.  See #$CalendarDay.")

;;; #$CalendarMinute
(#$isa #$CalendarMinute #$Collection)
(#$isa #$CalendarMinute #$CalendarCoveringType)
(#$genls #$CalendarMinute #$Date)
(#$comment #$CalendarMinute "The collection of minutes that make up the calendar.  These are contiguous and disjoint time intervals, except of course for particular instances that represent exactly the same 60-second-long time interval.  See #$CalendarDay.  Sixty of these partition each #$CalendarHour")

;;; #$CalendarMonth
(#$isa #$CalendarMonth #$Collection)
(#$isa #$CalendarMonth #$CalendarCoveringType)
(#$genls #$CalendarMonth #$Date)
(#$comment #$CalendarMonth "The collection of months that make up the calendar.  This is a collection of disjoint but contiguous time intervals.  One of its subsets is #$February, which is the set of all Februaries; one of its elements is February 1992 (#$MonthFn #$February (#$YearFn 1992)), a particular time interval.")

;;; #$CalendarQuarter
(#$isa #$CalendarQuarter #$Collection)
(#$isa #$CalendarQuarter #$CalendarCoveringType)
(#$genls #$CalendarQuarter #$Date)
(#$comment #$CalendarQuarter "The collection of calendar quarters that divide up a calendar year into four parts.  For each year, the first of its four quarters includes January, February, and March; the second includes April, May, and June, and so on.")

;;; #$CalendarSeason
(#$isa #$CalendarSeason #$CalendarCoveringType)
(#$genls #$CalendarSeason #$TimeInterval)
(#$comment #$CalendarSeason "This is the set of all calendar seasons.  Four of its largest subsets are #$CalendarWinter, #$CalendarSpring, #$CalendarSummer, and #$CalendarAutumn")

;;; #$CalendarSeasonType
(#$isa #$CalendarSeasonType #$CyclicalIntervalGroupType)
(#$genls #$CalendarSeasonType #$AnnualEventType)
(#$genls #$CalendarSeasonType #$TemporallyDisjointIntervalType)
(#$comment #$CalendarSeasonType "This is the collection whose four elements are #$CalendarWinter, #$CalendarSpring, #$CalendarSummer, and #$CalendarAutumn.")

;;; #$CalendarSecond
(#$isa #$CalendarSecond #$Collection)
(#$isa #$CalendarSecond #$CalendarCoveringType)
(#$genls #$CalendarSecond #$Date)
(#$comment #$CalendarSecond "The collection of seconds that make up the calendar.  Sixty of these #$TimeIntervals contiguously divide up each #$CalendarMinute (qv)")

;;; #$CalendarSpring
(#$isa #$CalendarSpring #$CalendarSeasonType)
(#$genls #$CalendarSpring #$CalendarSeason)
(#$comment #$CalendarSpring "The calendar season that begins at vernal equinox and runs until summer solstice.")

;;; #$CalendarSummer
(#$isa #$CalendarSummer #$CalendarSeasonType)
(#$genls #$CalendarSummer #$CalendarSeason)
(#$comment #$CalendarSummer "The calendar season that begins at summer solstice and runs until autumnal equinox.")

;;; #$CalendarWeek
(#$isa #$CalendarWeek #$CalendarCoveringType)
(#$genls #$CalendarWeek #$Date)
(#$comment #$CalendarWeek "The collection of weeks that make up the calendar.  This is a collection of disjoint but contiguous time intervals.  One of its elements is WeekOf2-14-1994.")

;;; #$CalendarWinter
(#$isa #$CalendarWinter #$CalendarSeasonType)
(#$genls #$CalendarWinter #$CalendarSeason)
(#$comment #$CalendarWinter "The calendar season that begins at winter solstice and runs until vernal equinox.")

;;; #$CalendarYear
(#$isa #$CalendarYear #$Collection)
(#$isa #$CalendarYear #$CalendarCoveringType)
(#$genls #$CalendarYear #$Date)
(#$comment #$CalendarYear "The collection of years that make up the calendar.  For example, #$TheYear1972, #$TheYear494BC.")

;;; #$Calm
(#$isa #$Calm #$FeelingAttributeType)
(#$genls #$Calm #$Relaxed-Emotion)
(#$comment #$Calm "A feeling of calmness or serenity, being quiet and free from disturbance.  This is a #$Collection --- for an explanation of that, see #$Happiness.  A related #$FeelingAttributeType is #$Calm.")

;;; #$Canal
(#$isa #$Canal #$ExistingObjectType)
(#$genls #$Canal #$Stream)
(#$genls #$Canal #$Path-Simple)
(#$genls #$Canal #$PathArtifact)
(#$comment #$Canal "The collection of all canals, artificial waterways created to be paths for boats, or for irrigation (e.g., the #$PanamaCanal).")

;;; #$Cancer
(#$isa #$Cancer #$PhysiologicalConditionType)
(#$genls #$Cancer #$TerminalPhysiologicalCondition)
(#$genls #$Cancer #$AilmentCondition)
(#$comment #$Cancer "The collection of all particular cases of cancer.  Instances of #$Cancer may belong to any one of the many different types of disease that are studied and treated by oncologists.  Cancer is characterized by abnormal (and usually rapid) growth of cells in some organ or system of the body; these growths are then prone to dispersal (metastesis) into other body regions.  See also #$CancerFn --- the expression (#$CancerFn #$Lung) represents a subset of #$Cancer, namely the set of all lung cancers.")

;;; #$CancerFn
(#$isa #$CancerFn #$CollectionDenotingFunction)
(#$resultIsa #$CancerFn #$PhysiologicalConditionType)
(#$resultGenl #$CancerFn #$Cancer)
(#$arg1Isa #$CancerFn #$ExistingObjectType)
(#$arg1Genl #$CancerFn #$AnimalBodyPart)
(#$comment #$CancerFn "#$CancerFn is a Cyc function, and in particular a #$CollectionDenotingFunction.  It is used to describe cancers according to the part or region of the animal's body in which they are found.  (#$CancerFn REGION) denotes the collection of all cancers found in the region of the body, REGION.  For example, (#$CancerFn #$Throat) represents the set of all throat cancers, and is a subset of #$Cancer.")

;;; #$Canoe
(#$isa #$Canoe #$ProductType)
(#$isa #$Canoe #$ExistingObjectType)
(#$genls #$Canoe #$Boat-WaterTransportationDevice)
(#$genls #$Canoe #$Device-UserPowered)
(#$comment #$Canoe "The collection of all canoes, small, narrow watercraft that are powered by human paddling, poling or by a small boat-engine.")

;;; #$CapacityAttribute
(#$isa #$CapacityAttribute #$UnorderedAttributeType)
(#$genls #$CapacityAttribute #$AttributeValue)
(#$comment #$CapacityAttribute "A collection of attributes.  Each element of #$CapacityAttribute is an attribute representing a specific capacity in which an agent does an action.  For example, an action might be done as an agent's job (#$JobCapacity) or hobby (#$HobbyCapacity), as its main function (#$MainFunction) or an auxiliary function (#$SupportFunction).")

;;; #$CapitalCityOfRegion
(#$isa #$CapitalCityOfRegion #$ExistingObjectType)
(#$genls #$CapitalCityOfRegion #$City)
(#$comment #$CapitalCityOfRegion "A collection of cities.  Each element of #$CapitalCityOfRegion is an element of #$City (q.v.) that is the capital of its surrounding region.  This includes both capitals of countries and capitals of subregions.  Examples: #$CityOfRomeItaly, #$CityOfCardiffWales, #$CityOfAustinTX, #$CityOfAbidjanIvoryCoast, #$CityOfLlasaTibet, #$CityOfColumbusOH (#$FranklinCountyOhio).  See also #$capitalCity, #$capitalCityOfThisState.")

;;; #$CaptiveAnimal
(#$isa #$CaptiveAnimal #$ExistingObjectType)
(#$genls #$CaptiveAnimal #$Animal)
(#$comment #$CaptiveAnimal "The collection of all animals that are caged, tied, kept in an animal container, or otherwise held captive.  There is some intersection here with #$DomesticPet, but not complete.   Some elements of #$Person are members of #$CaptiveAnimal, e.g., political detainees, imprisoned criminals, kidnap victims.")

;;; #$Card
(#$isa #$Card #$ExistingObjectType)
(#$genls #$Card #$HardcopyInformationBearingObject)
(#$comment #$Card "A collection of objects; a subset of #$HardcopyInformationBearingObject.  Each element of #$Card is a small, sturdy sheet of stuff--usually cardstock paper, but could be plastic or thin metal--bearing some kind of information.  Some kinds are folded.  Examples: birthday cards, business cards, playing cards, postcards.")

;;; #$CargoShip
(#$isa #$CargoShip #$ProductType)
(#$isa #$CargoShip #$ExistingObjectType)
(#$genls #$CargoShip #$Ship)
(#$comment #$CargoShip "The collection of all cargo ships, i.e., ships that by design can transport large amount of goods.")

;;; #$Carnivore
(#$isa #$Carnivore #$ExistingObjectType)
(#$genls #$Carnivore #$Organism-Whole)
(#$comment #$Carnivore "A #$Collection of organisms classified by their typical source of food.  Elements of #$Carnivore feed on animals.  Note: #$Carnivore is not an instance of #$BiologicalTaxon; e.g., #$Carnivore contains #$Dog as a subset but is not its biological taxon.  Note that a #$Carnivore is not necessarily a #$Heterotroph, as carnivorous plants both digest insects and produce food using #$Chlorophyll.")

;;; #$CausingAnotherObjectsTranslationalMotion
(#$isa #$CausingAnotherObjectsTranslationalMotion #$TemporalObjectType)
(#$isa #$CausingAnotherObjectsTranslationalMotion #$ScriptType)
(#$genls #$CausingAnotherObjectsTranslationalMotion #$ActionOnObject)
(#$genls #$CausingAnotherObjectsTranslationalMotion #$Translation-Complete)
(#$genls #$CausingAnotherObjectsTranslationalMotion #$Translation-LocationChange)
(#$comment #$CausingAnotherObjectsTranslationalMotion "A collection of events.  In an instance of #$CausingAnotherObjectsTranslationalMotion, one object causes another object to undergo a translational motion.  The object causing the motion is the #$providerOfMotiveForce.  The object which is caused to move is the #$objectActedOn (and also the #$objectMoving) in the event.  One way to cause another object's motion is by carrying it along with one (see the subset #$CarryingWhileLocomoting), but there are many others, such as throwing, kicking, or knocking it away.  Examples: a train transporting passengers; a person pushing a coin into a vending machine; the release of a bowstring which propels an arrow; a magnet attracting a nail.")

;;; #$Cavity
(#$isa #$Cavity #$ExistingObjectType)
(#$genls #$Cavity #$PartiallyTangible)
(#$comment #$Cavity "The collection of all cavities, #$Crevices or deep concavities or holes, including any cavity of a container, e.g., the interior of a box.  Elements of #$Cavity, unlike elements of #$Interior, may include walls as parts.")

;;; #$CeilingOfARoom
(#$isa #$CeilingOfARoom #$ExistingObjectType)
(#$genls #$CeilingOfARoom #$PartOfBuilding)
(#$comment #$CeilingOfARoom "The collection of all ceilings of every instance of #$RoomInAConstruction.  Note that, unlike walls, ceilings are conventionally considered to be 'one-sided' objects.  The other side of a #$CeilingOfARoom may be a #$RoofOfAConstruction, or in a #$ModernShelterConstruction, more probably the #$FloorInAConstruction in another room.")

;;; #$Cell
(#$isa #$Cell #$ExistingObjectType)
(#$genls #$Cell #$BiologicalLivingObject)
(#$comment #$Cell "The collection of living cells; a subset of #$BiologicalLivingObject.  Each element of #$Cell is one of the basic structural units of nearly all living things, consisting (at least) of cytoplasm bounded by a cell membrane. Only the living structures viruses, mitochondria, and plastids are not composed of cells.")

;;; #$CellPart
(#$isa #$CellPart #$ExistingObjectType)
(#$genls #$CellPart #$BiologicalLivingObject)
(#$genls #$CellPart #$MicroscopicScaleObject)
(#$comment #$CellPart "The collection of structures which are typically found and formed as parts of #$Cells. This covers components of both #$EukaryoticCells and #$ProkaryoticCells.  It includes organelles, vesicles, cell walls, extracellular matrix, plasma membranes, receptors, cellular humours, microtubules, etc.")

;;; #$Cent-UnitedStates
(#$isa #$Cent-UnitedStates #$UnitOfMoney)
(#$isa #$Cent-UnitedStates #$UnitOfMeasureWithPrefix)
(#$resultIsa #$Cent-UnitedStates #$Money)
(#$resultIsa #$Cent-UnitedStates #$ScalarInterval)
(#$argsIsa #$Cent-UnitedStates #$CycSystemRealNumber)
(#$comment #$Cent-UnitedStates "An element of #$UnitOfMoney.  #$Cent-UnitedStates represents the smallest unit of money used officially in the United States of America; one-hundredth of a #$Dollar-UnitedStates.  See also #$UnitOfMeasure.")

;;; #$Centimeter
(#$isa #$Centimeter #$UnitOfDistance)
(#$isa #$Centimeter #$UnitOfMeasureWithPrefix)
(#$isa #$Centimeter #$CGSUnitOfMeasure)
(#$resultIsa #$Centimeter #$Distance)
(#$resultIsa #$Centimeter #$ScalarInterval)
(#$argsIsa #$Centimeter #$CycSystemRealNumber)
(#$comment #$Centimeter "The measurement function used in Cyc to represent the centimeter, a unit used within the Metric system to measure length.  See also #$CGSUnitOfMeasure, #$UnitOfMeasure.")

;;; #$CentimetersPerSecond
(#$isa #$CentimetersPerSecond #$UnitOfSpeed)
(#$isa #$CentimetersPerSecond #$UnitOfMeasureWithPrefix)
(#$isa #$CentimetersPerSecond #$CGSUnitOfMeasure)
(#$resultIsa #$CentimetersPerSecond #$ScalarInterval)
(#$resultIsa #$CentimetersPerSecond #$Speed)
(#$resultIsa #$CentimetersPerSecond #$VectorInterval)
(#$argsIsa #$CentimetersPerSecond #$CycSystemRealNumber)
(#$comment #$CentimetersPerSecond "(#$CentimetersPerSecond NUMBER) returns a dimensionless rate or speed of NUMBER centimeters per second.  Notice that this result is not presently thought of as incorporating a vector, although it might be modified to do so at some point in the future if this should prove appropriate.")

;;; #$CerealFoodGroup
(#$isa #$CerealFoodGroup #$FoodGroupType)
(#$genls #$CerealFoodGroup #$FoodOrDrinkComposite)
(#$genls #$CerealFoodGroup #$VegetableMatter)
(#$genls #$CerealFoodGroup #$EdibleStuff)
(#$comment #$CerealFoodGroup "The food group consisting of grain products such as breads and cereals. Food that contains a significant amount of grain products should be specs of this.")

;;; #$CerealPlant
(#$isa #$CerealPlant #$OrganismClassificationType)
(#$genls #$CerealPlant #$Plant-NonWoody)
(#$comment #$CerealPlant "The collection of individual plants like corn, wheat, etc., which bear grains.")

;;; #$ChainOrganization
(#$isa #$ChainOrganization #$ExistingObjectType)
(#$genls #$ChainOrganization #$Business)
(#$genls #$ChainOrganization #$LegalCorporation)
(#$comment #$ChainOrganization "A collection of organizations.  An element of #$ChainOrganization is a parent business which comes into contact with its customers or clients primarily through its geographically dispersed sub-organizations, which typically are (mostly) homogeneous in product line, style of physical quarters, local organizational structure, etc.  Examples include the parent organizations of McDonald's and Midas Muffler.")

;;; #$ChangeInUserRights
(#$isa #$ChangeInUserRights #$ScriptType)
(#$genls #$ChangeInUserRights #$GeneralizedTransfer)
(#$comment #$ChangeInUserRights "A collection of events.  Each element of #$ChangeInUserRights is an event in which some instance of #$Agent either gains or loses possession of something.   `Possession' means having some right to use a thing that one has in hand or otherwise has access to.  Different types of possession (e.g., ownership, rental, borrowings) can be specified by the using the appropriate element(s) of #$UserRightsAttribute (q.v.).  Changes in an agent's user rights can come about in various ways: through buying and selling, renting, borrowing or lending, giving, repossession, etc.  Some subsets of this kind of change are #$LosingUserRights, #$GainingUserRights, and #$ExchangeOfUserRights; in the latter class, there is an alteration in the rights of two (or more) agents to use two (or more) items -- as in a purchase, when one agent gets full use rights to an object by turning over a sum of money to the object's previous owner.  In addition, some changes in user rights are classified explicitly in #$TemporaryChangeOfUserRights (e.g., borrowing, renting), while others are permanent.   Events that involve such changes in user rights all belong in the collection of events, #$ChangeInUserRights.   In any particular #$ChangeInUserRights event, the item which is changing hands is identified as the #$objectOfPossessionTransfer.")

;;; #$ChangingDeviceState
(#$isa #$ChangingDeviceState #$DefaultDisjointScriptType)
(#$isa #$ChangingDeviceState #$TemporalObjectType)
(#$genls #$ChangingDeviceState #$IntrinsicStateChangeEvent)
(#$genls #$ChangingDeviceState #$PhysicalEvent)
(#$genls #$ChangingDeviceState #$Action)
(#$comment #$ChangingDeviceState "The collection of actions in which a device goes from one state (the #$fromState) to another state (the #$toState).  A change of #$DeviceState may be due to an outside #$Agent adjusting a device, or it may happen automatically due to the behavior of a device.  The two most general state changes (for powered devices) are from #$DeviceOn to #$DeviceOff, and vice versa.  Many other states peculiar to specific devices can be identified; for example, the states of a #$Dishwasher: #$DeviceState-Washing and #$DeviceState-Rinsing; or the states that a trapping device may be in: #$TrapArmed, #$TrapTripped, #$TrapIdle.  Note that a change in the state of a device is an intrinsic change in the device; i.e., #$ChangingDeviceState is a subset of #$IntrinsicStateChangeEvent.")

;;; #$CharacterString
(#$isa #$CharacterString #$StuffType)
(#$genls #$CharacterString #$AbstractInformation)
(#$genls #$CharacterString #$IntangibleIndividual)
(#$genls #$CharacterString #$List-Sequence)
(#$comment #$CharacterString "A collection of stuff.  Each element of the collection #$CharacterString is a string of characters or an abstract sequence of symbols.  Note: it is NOT any particular physical, tangible representation; different encodings may represent the characters.  An element of #$CharacterString has characters from some fixed character set.  The characters are instances of #$Character-Abstract. An element of #$CharacterString may be any length, including zero (i.e., empty strings, which have no characters).  If elements of #$CharacterString are concatenated, the result is also an element of #$CharacterString.  The length of the resulting string is equal to the sum of the lengths of the concatenated strings.   Some types (subsets) of #$CharacterString include #$EMailAddress, #$AreaCode, #$PhoneNumber, #$PhoneCountryCode, etc.")

;;; #$Check-TenderObject
(#$isa #$Check-TenderObject #$MoneyTenderType)
(#$genls #$Check-TenderObject #$TenderObject)
(#$genls #$Check-TenderObject #$Form-StandardizedIBO)
(#$genls #$Check-TenderObject #$IDDocument)
(#$genls #$Check-TenderObject #$OfficialDocument)
(#$genls #$Check-TenderObject #$FinancialAccountTenderObject)
(#$comment #$Check-TenderObject "A collection of documents; a subset of #$TenderObject.  Each element of #$Check-TenderObject is a financial instrument, drawn on a particular account at some instance of #$FinancialOrganization, which is redeemable for a monetary value by the agent who is the payee.  The financial organization pays the payee funds from the account, upon proper presentation of th