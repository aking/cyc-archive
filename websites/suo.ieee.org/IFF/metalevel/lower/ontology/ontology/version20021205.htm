<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Introduction to the IFF-ONT</title>
  <meta name="author" content="Robert E. Kent">
  <meta name="description"
 content="This is the introduction page for the IFF Ontology (meta) Ontology (IFF-ONT).">
  <link rel="stylesheet"
 href="http://www.w3.org/StyleSheets/Core/Oldstyle" type="text/css">
</head>
<body>
<h1>The IFF Ontology (meta) Ontology (IFF-ONT)<br>
</h1>
<div style="text-align: justify;">According to <a
 href="http://www.m-w.com/cgi-bin/dictionary?logic">Merriam-Webster</a>,
logic
is the science that deals with the
principles and criteria of validity of inference and demonstration. It
is the science of the formal principles of reasoning. A <a
 href="http://plato.stanford.edu/entries/logic-classical/">logic</a>
consists
of a first order language of types, together with an axiomatic system
and a model-theoretic semantics.
<br>
</div>
<h2><a name="Overview"></a>Overview</h2>
<div style="text-align: justify;">
<p>The IFF Ontology (meta) Ontology (IFF-ONT)
provides a metalevel axiomatic framework for object-level ontologies.<span
 style="">&nbsp; </span>The second term &#8220;Ontology&#8221; in the title refers
to the fact that this is a meta-ontology &#8211; an ontology located in the
IFF metalevel. The first term &#8220;Ontology&#8221; in the title refers to the
fact that this is about object-level ontologies.<span style="">&nbsp; </span>The
documentation for the IFF-ONT consists of three parts: this
introductory HTML document that gives a brief intuitive overview of
the IFF-ONT, a metatheory PDF document that gives an IFF
upper metalevel abstraction for the IFF-ONT, and four namespace PDF
documents
that give the IFF-ONT axiomatization.<br>
</p>
<table
 style="text-align: left; width: 650px; height: 153px; background-color: rgb(0, 0, 0);"
 border="3" cellpadding="5" cellspacing="3">
  <tbody>
    <tr>
      <td
 style="vertical-align: top; font-family: arial; font-weight: bold; width: 150px;">
      <p><big>Namespaces<br>
      </big></p>
      </td>
      <td
 style="vertical-align: top; font-family: arial; font-weight: bold; width: 150px;">
      <p><big><br>
      </big></p>
      </td>
      <td
 style="vertical-align: top; font-family: arial; font-weight: bold; width: 300px;">
      <p><big>Metatheory<br>
      </big></p>
      </td>
      <td
 style="vertical-align: top; font-family: arial; font-weight: bold; width: 150px;">
      <p><big><br>
      </big></p>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top; width: 150px;"><a
 href="http://suo.ieee.org/IFF/metalevel/lower/namespace/type-language/version20021205.pdf">Languages</a><br>
      </td>
      <td style="vertical-align: top; width: 150px;">(95 pages)<br>
      </td>
      <td colspan="1" rowspan="4"
 style="vertical-align: top; width: 300px;"><a
 href="http://suo.ieee.org/IFF/metalevel/lower/metatheory/ontology/version20021205.pdf">Category
Theory of Ontologies</a><br>
      <br>
      <br>
      <br>
      </td>
      <td colspan="1" rowspan="4"
 style="vertical-align: top; width: 150px;"> (61 pages)<br>
      <br>
      <br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top; width: 150px;"><a
 href="http://suo.ieee.org/IFF/metalevel/lower/namespace/theory/version20021205.pdf">Theories</a><br>
      </td>
      <td style="vertical-align: top; width: 150px;">(49 pages)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top; width: 150px;"><a
 href="http://suo.ieee.org/IFF/metalevel/lower/namespace/model/version20021205.pdf">Models</a><br>
      </td>
      <td style="vertical-align: top; width: 150px;">(36 pages)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top; width: 150px;"><a
 href="http://suo.ieee.org/IFF/metalevel/lower/namespace/logic/version20021205.pdf">Logics</a><br>
      </td>
      <td style="vertical-align: top; width: 150px;">(14 pages)<br>
      </td>
    </tr>
  </tbody>
</table>
<p>Here are the page and term statistics for the documentation of the
IFF-ONT.</p>
</div>
<ul>
  <li style="text-align: justify;">
    <p>A total of 270 pages are used to describe and axiomatize the
IFF-ONT. This introduction document (HTML) is 15 pages long, the
metatheory document (PDF) is 61 pages long, and the four namespace
documents (PDF) have a total of 194 pages. The latter breaks down as
follows: the language namespace document is 95 pages, the theory
namespace document is 49 pages, the model namespace document is 36
pages, and the logic namespace document is 14 pages.</p>
  </li>
  <li style="text-align: justify;">
    <p>A total of 681 terms are introduced to describe and axiomatize
the IFF-ONT. This introduction document contributes no terminology. The
metatheory document has 49 terms for naming the categories, functors,
natural transformations, adjunctions and monads needed to link the
IFF-ONT with the IFF upper metalevel axiomatization. This terminology
can be regarded as part of the IFF upper metalevel. That leaves a total
of 632 terms that are introduced in the four namespace documents. This
total breaks down as follows. The type language namespace document
introduces 328 terms: 96 terms are basic or special, 39 terms are used
for expressions, 20 terms for interpretations, 123 terms for language
colimits, and 50 terms for the truth concept lattice of theories for
languages. The theory namespace document introduces 172 terms: 39 terms
are basic or special, 96 terms are used for theory colimits, and 37
terms are used for the truth concept lattice of theories for theories.
The model namespace document introduces 88 terms. Finally, the logic
namespace document introduces 44 terms, where 27 terms are for
prologics and 17 terms are for logics.</p>
  </li>
</ul>
<p style="text-align: justify;">It is clear that the more basic areas
of the IFF-ONT, such as languages, receive most of the description and
axiomatization. This is natural, since the current version of the
IFF-ONT offers only a baseline axiomatization for the metalogic of
object-level ontologies. Further more detailed axiomatizations, needed
for applications such as semantic integration, will probably be
concentrated more at the higher levels, such as logics.<br>
</p>
<h2><a name="The_Architecture"></a>The Architecture<br>
</h2>
<table style="width: 600px; text-align: left;" border="2"
 cellpadding="5" cellspacing="2">
  <tbody>
    <tr>
      <td colspan="1" rowspan="9" style="vertical-align: top;"><img
 alt="Architecture" title="Architecture" src="architecture.gif"
 style="width: 309px; height: 314px;"><br>
      </td>
      <td colspan="2" rowspan="1"
 style="vertical-align: top; text-align: center; font-family: arial; font-weight: bold;">generalized
inverse<br>
      </td>
    </tr>
    <tr>
      <td
 style="vertical-align: top; text-align: center; font-family: arial;">&#969;</td>
      <td style="vertical-align: top;">free (power) model<br>
      </td>
    </tr>
    <tr>
      <td
 style="vertical-align: top; text-align: center; font-family: arial;">&#965;</td>
      <td style="vertical-align: top;">free prologic<br>
      </td>
    </tr>
    <tr>
      <td
 style="vertical-align: top; text-align: center; font-family: arial;">&#961;</td>
      <td style="vertical-align: top;">restriction<br>
      </td>
    </tr>
    <tr>
      <td
 style="vertical-align: top; text-align: center; font-family: arial;">&#955;</td>
      <td style="vertical-align: top;">integration<br>
      </td>
    </tr>
    <tr>
      <td
 style="vertical-align: top; text-align: center; font-family: arial;">&#960;</td>
      <td style="vertical-align: top;">projection<br>
      </td>
    </tr>
    <tr>
      <td
 style="vertical-align: top; text-align: center; font-family: arial;">&#956;</td>
      <td style="vertical-align: top;">semantics<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><br>
      </td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><br>
      </td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
  </tbody>
</table>
<div style="text-align: justify;">The architecture of the IFF-ONT,
which is illustrated in Figure 1, is an example of a <a
 href="http://suo.ieee.org/IFF/metalevel/lower/metatheory/environment/version20041010.html">logical
environment</a>. This consists of four central mathematical
contexts (<span style="font-family: arial; font-weight: bold;">Language</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small>, <span
 style="font-family: arial; font-weight: bold;">Model</span>, <span
 style="font-family: arial; font-weight: bold;">Theory</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small>, <span
 style="font-family: arial; font-weight: bold;">Logic</span>)
interconnected by five generalized inverses (<span
 style="font-family: arial;">&#969;</span>, <span
 style="font-family: arial;">&#954;</span><small style="font-family: arial;"><sup>&#8869;</sup></small>,
<span style="font-family: arial;">&#956;</span>, <span
 style="font-family: arial;">&#960;</span>, <span
 style="font-family: arial;">&#955;</span>). The IFF-ONT, which
adds the new notions of <span style="font-style: italic;">theory </span>and
<span style="font-style: italic;">logic </span>to the previously
axiomatized
notions of <span style="font-style: italic;">language </span>and <span
 style="font-style: italic;">model</span>, provides a metalevel
axiomatization for
the semantics of object-level ontologies. The context of first order
type languages sits at the base of the IFF-ONT &#8211; everything depends
upon it. Three other contexts are situated above the language context &#8211;
models, theories and logics. IFF models provide interpretative
semantics for object-level ontologies, IFF theories provide formal or
axiomatic semantics, and IFF logics provide combined semantics. IFF
theories represent object-level ontologies and IFF logics represent
populated object-level ontologies.<br>
</div>
<h3><a name="Language"></a>Language</h3>
<p style="text-align: justify;">It has been the opinion of many that
the best way to handle the multivalent relations in ontologies is with
hypergraphs. A first order IFF type <span style="font-style: italic;">language
</span>is a kind of aligned
hypergraph. It consists of sets for variables, entity types
corresponding to hypergraph nodes, and relation types corresponding to
hyperedges, and functions for defining the reference, signature and
arity of relation types. In contrast to the notion of a hypergraph, a
type language is aligned along its reference function. The set of
entity types linked by a relation type is called its signature. Type
languages are related through type language morphisms. A type language
morphism from source type language to target type language maps source
entity (relation) types to target entity (relation) types, preserving
reference, signature and arity. The context of languages <span
 style="font-family: arial; font-weight: bold;">Language</span>
consists of
first order type languages and their morphisms. The context <span
 style="font-family: arial; font-weight: bold;">Language</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small><span
 style="font-family: arial; font-weight: bold;">
</span>is the subcontext whose morphisms are special &#8211; they have
bijective
variable functions.<br>
</p>
<p style="text-align: justify;">Any type language is extended to a type
language of <span style="font-style: italic;">expressions</span>,
which has the same sets for variables and
entity types and the same reference function, but has logical
expressions (formulas) as its relation types. The set of expressions,
which is defined recursively, is the disjoint union of atomic
expressions, negations, conjunctions, disjunctions, implications,
existential and universal quantifications, and substitutions. There is
a special <span style="font-style: italic;">embedding </span>type
language morphism from any type language to
its expression type language. Of course, we can form expressions of
expressions. There is also a special <span style="font-style: italic;">collapsing
</span>type language morphism
from the expressions of expressions type language to the expressions
type language. The triple of operators (<span
 style="font-style: italic;">expressions</span>, <span
 style="font-style: italic;">embedding</span>,
<span style="font-style: italic;">collapsing</span>) has nice monoidal
properties (identity, associativity, etc.). Associated with this triple
is the derived
context of type language interpretations. Intuitively, a type language
<span style="font-style: italic;">interpretation </span>is a type
language morphism from one type language to
the expressions of another type language.<br>
</p>
<h3><a name="Model"></a>Model</h3>
<p style="text-align: justify;">The IFF gives a (somewhat novel)
category-theoretic axiomatization for first-order model theory based
upon the two fundamental ideas of classification and hypergraph. In one
sense, an IFF model is a hypergraph of classifications. In place of
nodes, there is a classification of entities, and in place of
hyperedges, there is a classification of relations. The set of entity
instances is called the universe of discourse, and the set of relation
instances is called the tuple space. In another sense, an IFF model is
a classification of hypergraphs &#8211; the instance aspect of a model forms
an instance hypergraph, and dually the type aspect of a model forms a
type language. IFF models are equivalent to the models of traditional
many-sorted logic. In this equivalence, the extent functions of the
entity, relation and expression classifications are regarded as
interpretation functions.<br>
</p>
<div style="text-align: justify;">An IFF <span
 style="font-style: italic;">model </span>(model-theoretic
structure) extends a type language to a universe of discourse
(containing entities) and a tuple space. Both entities and tuples are
untyped <a href="http://www.utm.edu/research/iep/a/apriori.htm">a
priori</a>. An IFF model types and interprets the entities and
tuples via classifications &#8211; there is an entity classification whose
instance set is the universe of discourse, and there is a relation
classification whose instance set is the tuple space. These two
classifications provide a traditional interpretative semantics via
their extent functions. The notion of entity classification is the same
as entity typing. The notion of relational classification includes
relational typing as a proper sub-classification, and is the relational
composition of reverse subtupling with relation typing. The context of
models consists of all models and model infomorphisms. Every model has
an underlying type language and an underlying instance hypergraph.
Models are related through model infomorphisms. A model infomorphism
from source model to target model is a type language morphism between
the underlying type languages of source and target, a hypergraph
morphism between the underlying instance hypergraphs of source and
target, an entity classification infomorphism between the entity
classifications of source and target, and a relation classification
infomorphism between the relation classifications of source and target.
The context of models <span
 style="font-family: arial; font-weight: bold;">Model</span> consists
of models and their infomorphisms. The
classification of relations, along with the abstractness of tuples, is
used to show the existence of free models (and logics). The subset
construction on entities and relations defines a free power model
passage <span style="font-family: script mt bold;">P</span>
: <span style="font-family: arial; font-weight: bold;">Language</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small><span
 style="font-family: arial; font-weight: bold;">
</span> &#8594; <span style="font-family: arial; font-weight: bold;">Model</span>
from languages to models. This construction and the underlying
type passage <span style="font-family: arial; font-style: italic;">typ</span><span
 style="font-weight: bold;">
</span>: <span style="font-family: arial; font-weight: bold;">Model</span><span
 style="font-family: arial; font-weight: bold;">
</span> &#8594; <span style="font-family: arial; font-weight: bold;">Language</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small>, via intent,
form the <span style="font-style: italic;">free model</span>
generalized inverse <span style="font-family: arial;">&#969;</span>.<br>
<p>Relation classification is inductively extended to expression
classification. In the expression classification, tuples satisfy
expressions. When a tuple is classified by an expression, we say that
the expression holds for the tuple or that the tuple satisfies the
expression. The IFF has a lax notion of satisfaction for tuples. For a
tuple to satisfy an expression, or that expression to hold for or
classify that tuple, we only require that the arity of the expression
be a subset of the arity of the tuple and that the restriction of the
tuple to that subset satisfy the expression in the usual sense.
Satisfaction is defined recursively. A model satisfies an expression of
its type language when all tuples are classified by that expression. In
other words, a model satisfies an expression when that expression holds
for all tuples; i.e., has maximal extent in the expression
classification. A model for a theory is a model that satisfies every
axiom of that theory. Every model generates a theory, whose base
language is the underlying type language of the model, and whose axioms
are all expressions satisfied by the model. The theory of a model is
closed, and is the maximal theory satisfied by that model.</p>
<h3><a name="Theory"></a>Theory</h3>
<p>An IFF <span style="font-style: italic;">theory </span>extends a
type language with a set of expressions
called axioms. These embody a formal or axiomatic semantics. A theory
logically entails an expression of its base language when every model
of the theory is also a model of the expression. Obviously, all axioms
are entailed by a theory. The closure of a theory is the theory with
the same base whose axioms consist of all expressions entailed by the
original theory. An axiom of the closure is called a theorem of the
original theory. Any axiom is a theorem. A theory is closed when it is
its own closure. Theories are related through theory morphisms. A
theory morphism from source theory to target theory is a type language
morphism that maps source axioms to target theorems. The context of
theories <span style="font-family: arial; font-weight: bold;">Theory</span>
consists of all theories and their morphisms. The context
<span style="font-family: arial; font-weight: bold;">Theory</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small> is the subcontext
whose morphisms are special &#8211; their bases
have bijective variable functions. Any theory has an initial model,
which is the free model of the base language, restricted to those
tuples satisfying all the axioms of the theory. This model is the
initial model in the collection of all models of that theory. The
initial model passage <span
 style="font-family: arial; font-style: italic;">init-mod</span>
<span style="font-weight: bold;">:</span> <span
 style="font-family: arial; font-weight: bold;">Theory</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small> <span
 style="font-weight: bold;">&#8594;</span> <span
 style="font-family: arial; font-weight: bold;">Model</span> and the
maximal
theory passage <span style="font-family: arial; font-style: italic;">max-th</span>
: <span style="font-family: arial; font-weight: bold;">Model</span> &#8594; <span
 style="font-family: arial; font-weight: bold;">Theory</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small> form the <span
 style="font-style: italic;">semantics
</span>generalized inverse <span style="font-family: arial;">&#956;</span>,
which links interpretative semantics of the
model
context with the axiomatic semantics of the theory context.<br>
</p>
<p>Any theory has a free logic, whose component theory is the original
theory and whose component model is the initial model over that theory.
For any logic the canonical logic intent infomorphism from the free
logic over the component theory of the logic to the logic itself. The
intent infomorphism is the identity on types, maps entity instances to
their entity extents, and maps relation instances (tuples) to their
relation extents consisting of all relation types (with possibly
smaller arities) that classify that tuple. The free logic over a theory
has the following meaning. Any theory morphism from a theory to the
component theory of a logic, is naturally equivalent to a logic
infomorphism from the free logic over the theory to the logic. This
adjoint logic infomorphism can be computed as the composition of the
free logic infomorphism of the theory morphisms and the canonical logic
intent infomorphism for that logic. The IFF approach to the semantic
integration of object-level ontologies is a two-step process consisting
of <span style="font-style: italic;">alignment </span>followed by <span
 style="font-style: italic;">unification</span>. The construction of a
free logic
over a common mediating theory, a lifting operation from the context of
theories to the context of logics, is an essential sub-step of IFF
alignment.<br>
</p>
<p>When free logics are investigated with respect to the lax IFF notion
of satisfaction, there is a question about the relationship between
unary relation types (unary predicates) and entity types (sorts). The
IFF adopts a laissez-faire attitude: use the least constraints needed.
It defines its basic logic using the constraint that every unary
predicate has a particular sort (the single sort in its signature): the
relational extent of the unary predicate is contained in the entity
extent of its sort. However, the free logic construction requires that
we tighten up our axiomatization for models. The logic notion needed
for the free logic construction requires that every sort be the sort of
some unary predicate that is extensionally equivalent to it.<br>
</p>
<h3><a name="Logic"></a>Logic<br>
</h3>
<p>An IFF prologic is an inclusive idea combining the notions of model
and theory into a (not necessarily sound) whole. It consists of a
component theory of types and a component model of instances that share
a common type language. The theory provides the formal semantics and
the model provides the interpretative semantics. A free prologic can be
constructed over any theory by adjoining to that theory the free model
of its base type language. The free passage from theories to prologics
and the component theory passage form the <span
 style="font-style: italic;">free prologic</span> generalized
inverse <span style="font-family: arial;">&#965;</span>, which is a fibered
product of the free model generalized
inverse with an identity generalized inverse on special theories.<br>
<br>
In addition, two special subsets are highlighted: there is a subset of
the universe of discourse called the normal entities and a subset of
the tuple space called the normal tuples, where the components of
normal tuples are normal entities and normal entities and normal tuples
satisfy the axioms of the theory. A prologic is sound when every
instance of the universe is normal and every tuple is normal. By
definition, an IFF <span style="font-style: italic;">logic </span>is
a sound prologic. For any prologic, the
sound part of the prologic is obtained by restriction &#8211; the restriction
construction throws away all abnormal instances and restricts the
entity and relation classifications to normal instances. The
restriction passage from prologics to logics and the inclusion of
logics as prologics forms the <span style="font-style: italic;">restriction
</span>generalized inverse <span style="font-family: arial;">&#961;</span>.
A logic
infomorphism from source logic to target logic is a theory morphism
along the theory aspect and a model infomorphism along the model aspect
that share a common type language morphism. The context of logics
<span style="font-family: arial; font-weight: bold;">Logic</span>
consists of all logics and their infomorphisms.<br>
<br>
Any theory forms a free logic with its initial model. The free logic <span
 style="font-family: arial; font-style: italic;">log</span>
: <span style="font-family: arial; font-weight: bold;">Theory</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small> &#8594; <span
 style="font-family: arial; font-weight: bold;">Logic</span> and
underlying theory <span style="font-family: arial; font-style: italic;">th</span>
: <span style="font-family: arial; font-weight: bold;">Logic</span> &#8594; <span
 style="font-family: arial; font-weight: bold;">Theory</span><small
 style="font-family: arial;"><sup>&#8869;</sup></small> passages form
the <span style="font-style: italic;">integration</span> (aka free
logic)
generalized inverse <span style="font-family: arial;">&#955;</span>, which
is important in the IFF semantic integration
of object-level ontologies. The integration generalized inverse is the
composition of the free prologic generalized inverse with the
restriction generalized inverse. Any model has a free logic, whose
component model is the original model and whose component theory is the
maximal theory over that model. The component model passage between the
logic and model contexts <span
 style="font-family: arial; font-style: italic;">mod</span>
: <span style="font-family: arial; font-weight: bold;">Logic</span> &#8594; <span
 style="font-family: arial; font-weight: bold;">Model</span> and the
free logic passage <span
 style="font-family: arial; font-style: italic;">log</span>
: <span style="font-family: arial; font-weight: bold;">Model</span> &#8594; <span
 style="font-family: arial; font-weight: bold;">Logic</span> form a <span
 style="font-style: italic;">component
model </span>or <span style="font-style: italic;">projection</span>
generalized inverse <span style="font-family: arial;">&#960;</span>. The
semantics generalized inverse is
the
composition of the integration generalized inverse with the component
model generalized inverse. <br>
</p>
<h3><a name="Colimits"></a>Colimits</h3>
<p>There is an initial language consisting of empty variable, entity
and relation type sets. There is an <span style="font-style: italic;">initial
</span>theory whose base is the
initial language and whose axiom set is empty. Any two languages have a
<span style="font-style: italic;">sum </span>defined via the disjoint
unions of variable, entity and relation
type sets. Any two theories have a sum defined as the sum of their base
type languages and the union of their axiom sets. A span over a theory
pair is a third theory that is the source of two theory morphisms to
the pair. Any span of theories has a <span style="font-style: italic;">fusion</span>,
which is the appropriate
quotient theory modulo the span on the sum of the underlying theory
pair.<br>
</p>
<h2><a name="The_Lattice_of_Theories"></a>The Lattice of Theories</h2>
<p>The lattice of theories is represented in IFF-ONT, the IFF Ontology
(meta) Ontology. This parallels much of the Formal Concept Analysis
(FCA) development in the IFF Upper Classification Ontology (IFF-UCLS).
The mathematical theory for the IFF-UCLS is presented in Kent 2002a.<br>
</p>
<h3><a name="The_Truth_Classification"></a>The Truth Classification</h3>
<p>Classifications are also known as formal contexts in Formal Concept
Analysis (FCA). A <span style="font-style: italic;">classification </span>consists
of a collection of <span style="font-style: italic;">instances
</span>also known as formal objects in FCA, a collection of <span
 style="font-style: italic;">types </span>also known
as formal attributes in FCA, and a binary <span
 style="font-style: italic;">incidence </span>relation.</p>
<p>Each first order type language <span
 style="font-style: italic; font-weight: bold;">L</span> has an
associated <span style="font-style: italic;">truth
classification</span>, whose collection of instances <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) is the class
of
models of the language, whose collection of types <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) is the set of
expressions of the language, and whose incidence is satisfaction. The
truth classification <span
 style="font-family: arial; font-style: italic;">truth-cls</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) is a large
classification, since its
collection of instances is a set-theoretic class.<br>
</p>
<table
 style="width: 600px; text-align: left; background-color: rgb(0, 0, 0);"
 border="2" cellpadding="5" cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= <span style="font-family: arial; font-style: italic;">model</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
      <td style="vertical-align: top;">instances (formal objects):<br>
models whose underlying type language is <span
 style="font-style: italic; font-weight: bold;">L</span><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= <span style="font-family: arial; font-style: italic;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
      <td style="vertical-align: top;">types (formal attributes):<br>
expressions of <span style="font-style: italic; font-weight: bold;">L</span><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">truth-incidence</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= <span style="font-family: arial; font-style: italic;">satisfies</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = |=<sub
 style="font-style: italic; font-weight: bold;">L</sub><br>
      </td>
      <td style="vertical-align: top;">truth incidence is satisfaction<br>
A |=<sub style="font-style: italic; font-weight: bold;">L</sub> &#966; for A
&#8712; <span style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) and &#966; &#8712; <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">truth-cls</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= <span style="font-family: arial; font-style: italic;">truth-classification</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= (<span style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>), <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>), |=<sub
 style="font-style: italic; font-weight: bold;">L</sub>)<br>
      </td>
      <td style="vertical-align: top;">truth classification over <span
 style="font-style: italic; font-weight: bold;">L</span></td>
    </tr>
  </tbody>
</table>
<br>
<h3><a name="The_Truth_Concept_Lattice"></a>The Truth Concept Lattice</h3>
<p>The notion of a <span style="font-style: italic;">concept lattice</span>
is the central data structure in
FCA. It is a complete lattice, where each lattice element resolves as
both a join and a meet of subsets of distinguished atoms. A concept
lattice consists of: a collection of instances, a collection of types,
a collection of formal concepts, an embedding map from instances to
concepts, an embedding map from types to concepts, an order relation on
concepts, and meet and join operators that map subcollections of
concepts to single concepts. The embedding image of an instance is
called an instance concept. The collection of instance concepts is
join-dense: any concept can be expressed as the join of a subcollection
of instance concepts. The embedding image of a type is called a type
concept. The collection of type concepts is meet-dense: any concept can
be expressed as the meet of a subcollection of type concepts.<br>
<br>
Every classification serves as the base of a concept lattice. A <span
 style="font-style: italic;">formal
concept</span> of a classification is a pair consisting of a collection
of
instances called the <span style="font-style: italic;">extent </span>of
the concept and a collection of types
called the <span style="font-style: italic;">intent </span>of the
concept, where every instance is classified by
every type, and there are no other such instances or types. A formal
concept can be represented by either its extent or its intent, since
these are equivalent and define each other. One concept is below
another concept in the <span style="font-style: italic;">lattice order</span>
when it is more specialized &#8211; it
has a bigger intent and a smaller extent. Any collection of <span
 style="font-style: italic;">instances
generate</span> a concept whose intent is the collection of all types
that
classify those instances. Any collection of <span
 style="font-style: italic;">types generate</span> a concept
whose extent is the collection of all instances that are classified by
those types. For any collection of concepts there is a <span
 style="font-style: italic;">join </span>concept
defined as the concept generated by the intersection of the intents.
For any collection of concepts there is a <span
 style="font-style: italic;">meet </span>concept defined as the
concept generated by the intersection of the extents. This completes
the description of the concept lattice associated with a
classification.<br>
<br>
Each first order type language <span
 style="font-style: italic; font-weight: bold;">L</span> has an
associated large concept
lattice <span style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) called the
truth concept lattice or the &#8220;<span style="font-style: italic;">lattice
of
theories</span>&#8221; (see Figure 2a). The IFF represents these formal
concepts in
terms of their intents, which are elements of the set <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) of
closed theories of the language. The collection of instances <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) is
the class of models for the language, and the collection of types
<span style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) is the set of
expressions for the language. Lattice order is
reverse subset inclusion on the theorem sets of closed theories. The
instance embedding function <span
 style="font-family: arial; font-style: italic;">max-th</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) maps a model
to its maximal
theory, whereas the type embedding function <span
 style="font-family: arial; font-style: italic;">entail</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) maps an
expression to the theory of all entailed expressions.<br>
<br>
Any collection of models generates a closed theory, whose set of
theorems is the intersection of the theorem sets. Any collection of
expressions generates a closed theory, whose theorem set is the closure
of the theory with just those expressions as axioms. The (set of
theorems of the) meet of a collection of closed theories is the concept
generated by (closure of) the union of the theorem sets. The (set of
theorems of the) join of a collection of closed theories is the
intersection of the theorem sets. <br>
</p>
<table
 style="width: 600px; text-align: left; background-color: rgb(0, 0, 0);"
 border="2" cellpadding="5" cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= <span style="font-family: arial; font-style: italic;">closed-theories</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
      <td style="vertical-align: top;">formal concepts:<br>
closed theories whose base language is <span
 style="font-style: italic; font-weight: bold;">L</span><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">max-th</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= <span style="font-family: arial; font-style: italic;">maximal-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= &#953;<sub style="font-style: italic; font-weight: bold;">L</sub> : <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
      <td style="vertical-align: top;">model embedding function:<br>
maximal theory</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">entail</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>)<br>
= &#964;<sub style="font-style: italic; font-weight: bold;">L</sub> : <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
      <td style="vertical-align: top;">expression embedding function:<br>
expression entailment theory</td>
    </tr>
    <tr>
      <td style="vertical-align: top;">&#8804;<sub
 style="font-style: italic; font-weight: bold;">L</sub><br>
      </td>
      <td style="vertical-align: top;">lattice order:<br>
reverse theorem subset inclusion<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial; font-style: italic;">truth-concept-lattice</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= <span style="font-family: arial; font-style: italic;">lattice-of-theories</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
= (<span style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>), <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>), <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>), &#953;<sub
 style="font-style: italic; font-weight: bold;">L</sub>, &#964;<sub
 style="font-style: italic; font-weight: bold;">L</sub>)<br>
      </td>
      <td style="vertical-align: top;">truth concept lattice of theories<br>
      </td>
    </tr>
  </tbody>
</table>
<p>Each special type language morphism <span
 style="font-style: italic; font-weight: bold;">f</span> : <span
 style="font-weight: bold; font-style: italic;">L</span> &#8594; <span
 style="font-style: italic; font-weight: bold;">&#321;</span> has an
associated large concept morphism <span
 style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>)
(see Figure 2b) called the <span style="font-style: italic;">truth
concept morphism</span> or the &#8220;<span style="font-style: italic;">lattice
morphism of theories</span>&#8221;. Concept morphisms consist of four
components: an
instance function, a type function and the left and right monotonic
functions of an adjoint pair connecting the concept lattices of source
and
target languages.</p>
<p>The instance (formal object) function <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>) : <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>)
maps a model of the target language to a model of the source language.
This is axiomatized in the language namespace, where it is called the
model fiber function. The type (formal attribute) function <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) :
<span style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) maps an
expression of the source language to an
expression of the target language. This also is axiomatized in the
language namespace. The IFF transforms formal concepts in terms of
their intents. The left adjoint monotonic function <span
 style="font-family: arial; font-style: italic;">left</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) maps a closed
theory of the target language to a closed
theory of the source language. It is defined in terms of the inverse
image expression function <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)<small><sup>&#8211;1</sup></small>
: <big><span style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) &#8594; <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) on the
theorem sets. The right adjoint monotonic
function <span style="font-family: arial; font-style: italic;">right</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>) : <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) maps a closed
theory of the
source language to a closed theory of the target language. It is
defined in terms of the direct image expression function <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>) : <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) on the
theorem
sets, and the closure function <span
 style="font-family: arial; font-style: italic;">clo</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) : <span
 style="font-family: arial; font-style: italic;">th</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>).</p>
<p>Being monotonic, the left and right functions preserve lattice order
(reverse subset inclusion on the theorem sets of closed theories). In
addition, the left adjoint preserves arbitrary lattice joins and the
right adjoint preserves arbitrary lattice meets. Furthermore, the
concept morphism preserves instance embedding, since the left function
commutes with the instance function through the instance embeddings:
<span style="font-family: arial; font-style: italic;">max-th</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) &middot; <span
 style="font-family: arial; font-style: italic;">left</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>) = <span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>) &middot; <span
 style="font-family: arial; font-style: italic;">max-th</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>). This means
that
the left image of the embedding of any model of the target language is
the embedding of its model fiber. And also, the concept morphism
preserves type embedding, since the right function commutes with the
type function through the type embeddings: <span
 style="font-family: arial; font-style: italic;">entail</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &middot; <span
 style="font-family: arial; font-style: italic;">right</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)
= <span style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>) &middot; <span
 style="font-family: arial; font-style: italic;">entail</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>). This means
that the right image of the
embedding of any expression of the source language is the embedding of
its expression image. The instance (model fiber) function is not in the
computational part of truth, whereas the other three component
functions are computational.<br>
</p>
<table
 style="width: 600px; text-align: left; background-color: rgb(0, 0, 0);"
 border="2" cellpadding="5" cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">mod</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)<br>
= <span style="font-family: arial; font-style: italic;">model</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>)<br>
      </td>
      <td style="vertical-align: top;">instance (formal object)
function:<br>
model fiber function of <span
 style="font-style: italic; font-weight: bold;">f</span><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)<br>
= <span style="font-family: arial; font-style: italic;">expression</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)<br>
      </td>
      <td style="vertical-align: top;">type (formal attribute) function:<br>
expression function of <span
 style="font-style: italic; font-weight: bold;">f</span> </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">left</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)<br>
      <span style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>)<small><sup>&#8211;1</sup></small><br>
      </td>
      <td style="vertical-align: top;">left adjoint monotonic function:<br>
inverse image of the expression function of <span
 style="font-style: italic; font-weight: bold;">f</span> </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span
 style="font-family: arial; font-style: italic;">right</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)<br>
      <span style="font-family: arial; font-style: italic;">clo</span>(<big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>))<br>
      </td>
      <td style="vertical-align: top;">right adjoint monotonic function:<br>
closure of the direct image of the expression function of <span
 style="font-style: italic; font-weight: bold;">f</span> </td>
    </tr>
  </tbody>
</table>
<br>
<h3><a name="The_Truth_Functionality"></a>The Truth Functionality</h3>
<p>Figures 2a and 2b diagrammatically illustrate the functionality that
is axiomatized in the type language and theory namespaces of the
IFF-ONT. Figure 2a is concerned with functionality associated with a
type language <span style="font-style: italic; font-weight: bold;">L</span>.
whereas Figure 2b has functionality associated with a
type language morphism <span
 style="font-style: italic; font-weight: bold;">f</span> : <span
 style="font-weight: bold; font-style: italic;">L</span> &#8594; <span
 style="font-style: italic; font-weight: bold;">&#321;</span>. Tables 1 and
2 list a more
complete truth functionality.<br>
</p>
</div>
<p><img alt="Truth Functionality" title="Truth Functionality"
 src="functionality.gif" style="width: 621px; height: 294px;"
 vspace="20"><br>
</p>
<p><big><span style="font-weight: bold;">Table 1: IFF Lattice of
Theories Operators &#8211; Objects</span></big></p>
<table
 style="width: 600px; text-align: left; background-color: rgb(0, 0, 0);"
 border="2" cellpadding="5" cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;">
      <p style="font-family: arial; font-weight: bold;"><big>IFF
Lattice of Theories Namespace</big></p>
[ <span style="font-style: italic; font-weight: bold;">L</span> is a
type language ]<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span style="font-family: arial;">instance</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = <span
 style="font-family: arial;">model</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">type</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = <span
 style="font-family: arial;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">truth-incidence</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = <span
 style="font-family: arial;">satisfies</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = |=<sub
 style="font-style: italic; font-weight: bold;">L</sub> &#8838; <span
 style="font-family: arial;">model</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &times; <span
 style="font-family: arial;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) <br>
      <span style="font-family: arial;">truth-classification</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span style="font-family: arial;">concept</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">extent</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial;">model</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">intent</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = <span
 style="font-family: arial;">theorem</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">truth-order</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = &#8804;<sub
 style="font-weight: bold; font-style: italic;">L</sub> &#8838; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &times; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span style="font-family: arial;">instance-generation</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial;">model</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">type-generation</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span style="font-family: arial;">join</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">meet</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">truth-lattice</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span style="font-family: arial;">maximal-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <span
 style="font-family: arial;">model</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">entail</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <span
 style="font-family: arial;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">truth-concept-lattice</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) = <span
 style="font-family: arial;">lattice-of-theories</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)</td>
    </tr>
  </tbody>
</table>
<p><big><span style="font-weight: bold;">Table 2: IFF Lattice of
Theories Operators &#8211; Morphisms</span></big></p>
<table
 style="width: 600px; text-align: left; background-color: rgb(0, 0, 0);"
 border="2" cellpadding="5" cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;">
      <p><big><span style="font-family: arial; font-weight: bold;">IFF
Lattice of Theories Namespace</span></big></p>
[ <span style="font-style: italic; font-weight: bold;">f</span> : <span
 style="font-weight: bold; font-style: italic;">L</span> &#8594; <span
 style="font-style: italic; font-weight: bold;">&#321;</span> is a special
morphism of type languages ]<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span style="font-family: arial;">instance</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>)&nbsp; = <span
 style="font-family: arial;">mod</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial;">model</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) &#8594; <span
 style="font-family: arial;">model</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">type</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>)&nbsp; = <span
 style="font-family: arial;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">expression</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>)<br>
      <span style="font-family: arial;">truth-infomorphism</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial;">truth-classification</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">truth-classification</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>)<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><span style="font-family: arial;">left-adjoint</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>)&nbsp; = <span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>)<small><sup>&#8211;1</sup></small>
: <span style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
      <span style="font-family: arial;">right-adjoint</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>)&nbsp; = <span
 style="font-family: arial;">clo</span>(<big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">f</span>)) : <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">closed-theory</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>)<br>
      <span style="font-family: arial;">truth-adjoint-pair</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial;">truth-lattice</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">truth-lattice</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>)<br>
      <span style="font-family: arial;">truth-concept-morphism</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial;">truth-concept-lattice</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial;">truth-concept-lattice</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>)<br>
      </td>
    </tr>
  </tbody>
</table>
<br>
<h3><a name="The_Lattice_of_Theories_within_the"></a>The Lattice of
Theories within the Context of Theories<br>
</h3>
<p style="text-align: justify;"><img alt="Context of Theories"
 title="Context of Theories" src="context.gif"
 style="width: 559px; height: 479px;" vspace="20"><br>
</p>
<div style="text-align: justify;">The context of theories <span
 style="font-family: arial; font-weight: bold;">Theory</span> is
compatible with the lattices of theories construction. This is
illustrated in Figure 3, where the context of theories is represented
by the boldly enclosed upper rectangle, the context of closed theories
<span style="font-family: arial; font-weight: bold;">Closed Theory</span>
is a sub-rectangle, and the context of languages <span
 style="font-family: arial; font-weight: bold;">Language</span>
is represented by the boldly enclosed lower rectangle. In Figure 3,
each point of the theory context corresponds to a theory, and each
point of the language context corresponds to a type language. Two
theories can be linked by a theory morphism, as illustrated by the
theory morphism <span style="font-weight: bold; font-style: italic;">f</span>
: <span style="font-weight: bold; font-style: italic;">T</span><small><sub>1</sub></small>
&#8594; <span style="font-weight: bold; font-style: italic;">T</span><small><sub>2</sub></small>
in the upper left part of the theory
context in Figure 3. The closure construction <span
 style="font-family: arial; font-style: italic;">clo</span>
: <span style="font-family: arial; font-weight: bold;">Theory</span> &#8594;
<span style="font-family: arial; font-weight: bold;">Closed
Theory</span> maps the theory context onto the closed theory context.
This is illustrated by the association of the theory <span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>0</sub></small>
to its closure <span style="font-family: arial; font-style: italic;">clo</span>(<span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>0</sub></small>)
on the left side of the theory context. The context of theories is
indexed by the context of languages through the base passage <span
 style="font-family: arial; font-style: italic;">base</span><span
 style="font-family: arial; font-style: italic; font-weight: bold;">
</span>: <span style="font-family: arial; font-weight: bold;">Theory</span>
&#8594; <span style="font-family: arial; font-weight: bold;">Language</span>,
which maps a theory to its underlying type
language. In Figure 3, each small colored rectangle of the theory
context represents a fiber of theories (and theory morphisms) over a
fixed type language. For example, the pea-green colored small rectangle
in the lower middle part of the theory context is the fiber over the
language <span style="font-style: italic; font-weight: bold;">L</span>.
Since theory morphisms within a fiber are mapped to the
identity type language morphism at the indexing language, they are
equivalent to the (opposite) lattice ordering. This is illustrated by
the theory order <span style="font-weight: bold; font-style: italic;">T&#780;</span><small><sub>1</sub></small>
&#8805; <span style="font-weight: bold; font-style: italic;">T&#780;</span><small><sub>2</sub></small>
in the
pea-green colored small rectangle. The restriction of a fiber to the
sub-context of closed
theories corresponds precisely to the lattice of theories over the
indexing type language. Sums in the context of theories correspond to
meets in the lattices of theories (fibers). However, fusion and
quotienting in the context of theories have no correspondents in the
lattice of theories. Hence, the context of theories is not only
compatible with the lattice of theories, but is also a proper extension
of it.<br>
</div>
<h3><a name="Navigating_the_Lattice_of_Theories"></a>Navigating the
Lattice of Theories</h3>
<p style="text-align: justify;"><img alt="Navigating the LOT"
 title="Navigating the LOT" src="navigation.gif"
 style="width: 461px; height: 229px;" vspace="20"><br>
This subsection follows the discussion
in section 6.5 &#8220;Theories, Models and the World&#8221; of the book <span
 style="font-style: italic;">Knowledge
Representation</span> by John Sowa. From each theory in the lattice of
theories, the partial ordering defines paths to the more generalized
theories above and the more specialized theories below. Figure 4 shows
four ways for moving along paths from one theory to another:
contraction, expansion, revision and analogy.<br>
</p>
<ul>
  <li>
    <p><span style="font-weight: bold;">Contraction</span>: Any
(closed)
theory can be contracted or reduced to a smaller, simpler closed theory
by deleting one or more axioms.</p>
  </li>
  <li>
    <p><span style="font-weight: bold;">Expansion</span>: Any
(closed)
theory can be expanded by adding one or more axioms. </p>
  </li>
  <li>
    <p><span style="font-weight: bold;">Revision</span>: A revision
step
is composite &#8211; it uses a contraction step to discard irrelevant
details, followed by an expansion step to added new axioms. </p>
  </li>
  <li>
    <p><span style="font-weight: bold;">Analogy</span>: Unlike
contraction
and expansion, which move to nearby theories in the
lattice, analogy jumps to a remote theory by systematically renaming
the entity types, relation types, and constants (individuals) that
appear in the axioms. </p>
  </li>
</ul>
<p style="text-align: justify;">By repeated contraction, expansion, and
analogy, any theory can be converted into any other. Multiple
contractions would reduce a (closed) theory to the empty (top) theory
at the top of the lattice. The top theory is the closure of the empty
theory &#8211; it contains only tautologies or logical truths; i.e.,
expressions that are true in all models (it is &#8220;true of everything&#8221;).
Multiple expansions would reduce a (closed) theory to the full
inconsistent theory at the bottom of the lattice. The full inconsistent
theory is the closed theory consisting of all expressions; i.e.,
expressions that are true in no models (it is &#8220;true of nothing&#8221;).</p>
<p style="text-align: justify;">In the IFF, the operations of
contraction, expansion and revision are not primitive. Suppose we have
a theory <span style="font-style: italic; font-weight: bold;">T</span>
= (<span style="font-family: arial; font-style: italic;">base</span>(<span
 style="font-style: italic; font-weight: bold;">T</span>), <span
 style="font-family: arial; font-style: italic;">axm</span>(<span
 style="font-weight: bold; font-style: italic;">T</span>)) over a base
type language
<span style="font-weight: bold; font-style: italic;">L</span> = <span
 style="font-family: arial; font-style: italic;">base</span>(<span
 style="font-style: italic; font-weight: bold;">T</span>), whose
closure <span style="font-family: arial; font-style: italic;">clo</span>(<span
 style="font-style: italic; font-weight: bold;">T</span>) = (<span
 style="font-family: arial; font-style: italic;">base</span>(<span
 style="font-style: italic; font-weight: bold;">T</span>), <span
 style="font-family: arial; font-style: italic;">thm</span>(<span
 style="font-style: italic; font-weight: bold;">T</span>)) is
in the concept lattice of theories indexed by <span
 style="font-style: italic; font-weight: bold;">L</span>. The IFF
closure function in the language namespace
</p>
<p style="margin-left: 40px;"><span
 style="font-family: arial; font-style: italic;">clo</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <span
 style="font-family: arial; font-style: italic;">th</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">cloth</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)<br>
</p>
<div style="text-align: justify;">maps <span
 style="font-style: italic; font-weight: bold;">T</span> to <span
 style="font-family: arial; font-style: italic;">clo</span>(<span
 style="font-style: italic; font-weight: bold;">T</span>). Now, suppose
also that we want to delete a set of
axioms <span style="font-style: italic;">A</span> &#8838; <span
 style="font-family: arial; font-style: italic;">axm</span>(<span
 style="font-style: italic; font-weight: bold;">T</span>). Here are the
steps that define contraction.
Expansion is defined dually, and revision is the composition of
contraction followed by expansion.
</div>
<ol>
  <li>
    <p>Map the theory to its subset of axioms</p>
    <p style="margin-left: 40px;"> <span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>1</sub></small>
&#8250;&#8594; <span style="font-family: arial;">axm</span>(<span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>1</sub></small>)
    </p>
    <p style="margin-left: 20px;">using the IFF axiom function</p>
    <p style="margin-left: 40px;"> <span
 style="font-family: arial; font-style: italic;">axm</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <span
 style="font-family: arial; font-style: italic;">th</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) </p>
    <p style="margin-left: 20px;">in the IFF theory namespace.</p>
  </li>
  <li>
    <p>Apply the subset difference operation getting a new set of axioms</p>
    <p style="margin-left: 40px;">(<span
 style="font-family: arial; font-style: italic;">axm</span>(<span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>1</sub></small>),
    <span style="font-style: italic;">A</span>) &#8250;&#8594; <span
 style="font-family: arial; font-style: italic;">axm</span>(<span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>1</sub></small>)
&#8211; <span style="font-style: italic;">A</span> </p>
    <p style="margin-left: 20px;">using the set difference function </p>
    <p style="margin-left: 40px;"> <span
 style="font-family: arial; font-style: italic;">set-diff</span>(<span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>)) : <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &times;<big><span
 style="font-family: script mt bold;"> P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &#8594; <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) </p>
    <p style="margin-left: 20px;">in the IFF set function namespace (of
the IFF lower core ontology). </p>
  </li>
  <li>
    <p>Install this subset of expressions as a theory</p>
    <p style="margin-left: 40px;"> <span
 style="font-family: arial; font-style: italic;">axm</span>(<span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>1</sub></small>)
&#8211; <span style="font-style: italic;">A</span> &#8250;&#8594; <span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>2</sub></small>
= (<span style="font-family: arial; font-style: italic;">base</span>(<span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>1</sub></small>),
    <span style="font-family: arial; font-style: italic;">axm</span>(<span
 style="font-style: italic; font-weight: bold;">T</span><small><sub>1</sub></small>)
&#8211; <span style="font-style: italic;">A</span>), </p>
    <p style="margin-left: 20px;">using the IFF installation function
in the language namespace </p>
    <p style="margin-left: 40px;"> <span
 style="font-family: arial; font-style: italic;">install</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) : <big><span
 style="font-family: script mt bold;">P</span></big><span
 style="font-family: arial; font-style: italic;">expr</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">th</span>(<span
 style="font-style: italic; font-weight: bold;">L</span>). </p>
  </li>
</ol>
<p>
Analogy is represented in the IFF by type language and theory
morphisms. A type language morphism</p>
<p style="margin-left: 40px;"><span
 style="font-style: italic; font-weight: bold;">f</span> : <span
 style="font-weight: bold; font-style: italic;">L</span> &#8594; <span
 style="font-style: italic; font-weight: bold;">&#321;</span><br>
</p>
<p>from type language <span
 style="font-weight: bold; font-style: italic;">L</span> to type
language <span style="font-style: italic; font-weight: bold;">&#321;</span>
maps (renames) the entity
types, relation types and constants using the entity, relation and
constant functions</p>
<ul>
  <li>the entity type function <span
 style="font-family: arial; font-style: italic;">ent</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial; font-style: italic;">ent</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">ent</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>),</li>
</ul>
<ul>
  <li>the relation type function <span
 style="font-family: arial; font-style: italic;">rel</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial; font-style: italic;">rel</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">rel</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>),</li>
</ul>
<ul>
  <li>the constant function <span
 style="font-family: arial; font-style: italic;">const</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial; font-style: italic;">const</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">const</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>),</li>
</ul>
<p>respectively. As describe above, associated with a special type
language morphism f is the concept lattice of theories morphism</p>
<p style="margin-left: 40px;"><span
 style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-style: italic; font-weight: bold;">f</span>) : <span
 style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-weight: bold; font-style: italic;">L</span>) &#8594; <span
 style="font-family: arial; font-style: italic;">truth</span>(<span
 style="font-style: italic; font-weight: bold;">&#321;</span>)</p>
<p>from the truth concept lattice of theories over <span
 style="font-weight: bold; font-style: italic;">L</span> to the truth
concept lattice of theories over <span
 style="font-style: italic; font-weight: bold;">&#321;</span>.</p>
<h2><a name="Semantic_Integration"></a>Semantic Integration</h2>
<p style="text-align: justify;">The following discussion represents an
IFF approach to the semantic integration of object-level ontologies.
This is just one of many possible approaches to semantic integration.</p>
<p style="text-align: justify;">Assume that two communities, whose
knowledge is represented in their own separate community ontologies,
want to design a new ontology that integrates the two participant
community ontologies into a fusion ontology. Moreover, they want fusion
to respect their own knowledge structures, but they also want to
incorporate a substantial amount of agreement. The following discussion
depicts a process they might undertake in order to accomplish this. For
more on this see the two papers (<a
 href="http://suo.ieee.org/IFF/references.html">Kent 2000</a>, <a
 href="http://suo.ieee.org/IFF/references.html">Kent 2003</a>).</p>
<p style="text-align: justify;">The IFF integration of ontologies is
the two-step process of alignment and unification. Ontological
alignment consists of the sharing of common terminology and semantics
through a mediating ontology. Ontological unification, concentrated in
a virtual ontology of community connections, is fusion of the alignment
diagram of participant community ontologies &#8211; the quotient of the sum
of the participant portals modulo the ontological alignment structure.
Unification is the automatic process of fusion in the
theoretical/logical context. However, alignment is not automatic, but
at best only semiautomatic.</p>
<p style="text-align: justify;">In the IFF, ontologies are represented
by theories and populated ontologies &#8211; those with instance data- are
represented by logics. We start with two participant community
ontologies represented as logics. We end, after the alignment and
unification steps, with a third logic representing the fusion ontology.
Integration is facilitated by a fourth mediating ontology.</p>
<h3><a name="Alignment"></a>Alignment</h3>
<div style="text-align: justify;">Alignment is the process of
specifying a mediating ontology in the theoretical and logical contexts
that connects the participant community ontologies through common
agreement. This mediating ontology is used for unification. From the
perspective of a participant community, several questions need to be
asked and answered for ontological alignment.<br>
</div>
<ul style="text-align: justify;">
  <li>What is the locus of interaction? Where do we want to
interact
with the other community and how is this place of interaction related
to our community ontology? The question of &#8220;where&#8221; refers to the local <span
 style="font-style: italic;">portal</span>, the logic we use
for interaction. The question of &#8220;how&#8221; refers
to the <span style="font-style: italic;">portal link</span> for our
community. Each community ontology involved
in integration needs to localize its activities vis-&agrave;-vis
integration. This locus of integration is called a portal &#8211; a portal is
a communicating part or area of a system. The portals are represented
by logics and the portal links are represented by logic infomorphisms
that connect the participants logics with their portals. One reason for
a portal is the incorporation into community ontologies of new subtypes
or supertypes necessary for alignment. This incorporation extends the
type aspect of the participant community ontology.</li>
</ul>
<ul style="text-align: justify;">
  <li>What is the common semantics? The question about &#8220;what&#8221; refers to
the <span style="font-style: italic;">mediating ontology</span> &#8211; what
is the language and theory of the
mediating ontology? How is this common semantics expressed in our own
world? The &#8220;how&#8221; question refers to how we express the <span
 style="font-style: italic;">alignment link</span>
for our community; that is, how do we specify the theory interpretation
from the theory of the mediating logic to the component theory of our
portal logic? We assume that the participant communities agree to
specify their interaction via a theory, which will be the underlying
theory of the mediating ontology. The types of this theory (entity,
function and relation) represent the aligned categories. The axioms
represent the amount and nature of the desired compatibility. In
addition, each community ontology specifies its own theoretical
alignment link (theory morphism) that connects the mediating theory to
the component theories of the participant portal.</li>
</ul>
<ul style="text-align: justify;">
  <li>What is the universe for the mediating logic? The answer has two
parts: (1) use the free logic over the mediating theory, and (2)
transform by generalized inverse the theoretical alignment links into
the equivalent logical alignment links, which connect the free
mediating logic to the participant portals. Logical alignment lifts the
theoretical alignment link to the free mediating logic</li>
</ul>
<p style="text-align: justify;">The mediating ontology with alignment
links is called the <span style="font-style: italic;">alignment diagram</span>.
Construction of the alignment
diagram is not automatic. Instead, much negotiation between participant
communities will be involved in this step. Perhaps some form of
game-theoretic semantics would be useful here.<br>
</p>
<h3><a name="Unification"></a>Unification</h3>
<p style="text-align: justify;">The process of unification is fusion of
the alignment diagram. We use the logic alignment diagram to specify a
logic invariant: we use the type aspect to specify an equivalence
relation on the types (entity, function and relation) of the sum logic,
and we use the instance aspect to specify an appropriate subset of the
instances (entity, function and relation) of the sum logic. This logic
invariant induces a quotient logic over the sum logic: types are the
quotient classes of the corresponding equivalence relation, whereas
instances called instance connections are pairs of instances, one from
each participant ontology, that are indistinguishable vis-&agrave;-vis
the mediating ontology. This quotient logic represents a virtual
ontology that is a fusion of the community portals with respect to the
alignment diagram. A canonical logic infomorphism links the sum logic
to the quotient logic &#8211; its type component maps sum types to their
equivalence class, and its instance component is subset inclusion. Two
fusion injections link the portals with the quotient logic. The
resulting unification diagram consists of two unification links from
the component ontologies to the fusion ontology. The links are the
composition of the portals links with the fusion injections. The fusion
ontology represents the complete system of semantic integration.</p>
<h2><a name="References"></a>References</h2>
Barr, Michael. 1996. <a
 href="http://citeseer.nj.nec.com/barr96chu.html">The Chu Construction</a>.
<i>Theory and Applications of Categories</i> <b>2</b>.
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Barwise, Jon and Seligman, Jerry. 1997<i>. <span style=""><a
 href="http://us.cambridge.org/titles/catalogue.asp?isbn=0521583861">Information
Flow: The Logic of Distributed Systems</a></span></i>. Cambridge Tracts
in Theoretical Computer Science <b>44</b>. Cambridge University Press.
</p>
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Chang, C. C. and Keisler, H. J. 1973. <i><span style=""><a
 href="http://www.elsevier.nl/inca/publications/store/5/0/2/2/8/7/index.htt">Model
Theory</a></span></i>. Studies in Logic and the Foundations of
Mathematics <b>73</b>. Amsterdam: North Holland. </p>
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Enderton, Herbert B. 1972. <i>A Mathematical
Introduction to Logic</i>. New York: Academic Press.<span style=""> <o:p></o:p></span></p>
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Kent, Robert E. 2000. <a
 href="http://www.ontologos.org/Papers/ISKO6/ISKO6.pdf">The Information
Flow Foundation for Conceptual Knowledge Organization</a>. In: <i>Dynamism
and Stability in Knowledge Organization</i>. <i>Proceedings of the
Sixth International ISKO Conference</i>. <i>Advances in Knowledge
Organization</i> <b>7</b> (2000) 111&#8211;117. Ergon Verlag, W&uuml;rzburg.</p>
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Kent, Robert E. 2002a. <a
 href="http://www.ontologos.org/Papers/RelMiCS6/relmics6.pdf">Distributed
Conceptual Structures</a>. In: <i>Proceedings of the 6th International
Workshop on Relational Methods in Computer Science (RelMiCS 6)</i>. <i>Lecture
Notes in Computer Science</i> <b>2561</b>. Springer, Berlin.</p>
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Kent, Robert E. 2002b. <a
 href="http://www.ontologos.org/Papers/Boeing%20Mini-Workshop.ppt">The
IFF Approach to Semantic Integration</a>. Presentation at the Boeing
Mini-Workshop on Semantic Integration, 7 November 2002.</p>
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Kent, Robert E. 2003. <a
 href="http://www.ontologos.org/Papers/CCQ/CCQ.pdf">The IFF Foundation
for Ontological Knowledge Organization</a>. In: <i>Knowledge
Organization and Classification in International Information Retrieval</i>.
<i>Cataloging and Classification Quarterly</i>. The Haworth Press
Inc., Binghamton, New York.</p>
<p class="MsoNormal" style="margin-top: 6pt; text-align: left;"
 align="left">Mac Lane, Saunders. 1971<i style="">. <span style=""><a
 href="http://www.springer-ny.com/detail.tpl?cart=9815698863736245&amp;ISBN=0387984038">Categories
for the Working Mathematician</a></span></i>, New
York/Heidelberg/Berlin: Springer-Verlag.<span class="bibliographicinfo1"><span
 style="color: rgb(51, 51, 51); letter-spacing: 0pt;"> New edition
(1998).<o:p></o:p></span></span></p>
<span class="bibliographicinfo1"><span
 style="color: rgb(51, 51, 51); letter-spacing: 0pt;">Sowa, John S.
2000. <a
 href="http://www.brookscole.com/cgi-brookscole/course_products_bc.pl?fid=M2&amp;discipline_number=6&amp;product_isbn_issn=0534949657">Knowledge
Representation: Logical, Philosophical, and Computational Foundations</a>.
Brrokes/Cole: Pacific Grove, CA, USA.</span></span><br>
<br>
<br>
</body>
</html>
